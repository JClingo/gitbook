<?xml version="1.0"?>
<!DOCTYPE section SYSTEM "/src/Docs/DocBookManuals/docbookx.dtd">
<section> 
	 <sectioninfo><date>Tuesday, July 13, 2004 11:58:46</date> 
	 </sectioninfo> 
	 <title><indexterm><primary>MSSQLDevice Library</primary><secondary>Scalar
					 Types</secondary></indexterm> 
		  <indexterm><primary>Scalar
					 Types</primary><secondary>MSSQLDevice</secondary></indexterm><indexterm><primary>MSSQLDevice
					 Library</primary><secondary>Types</secondary></indexterm> 
		  <indexterm><primary>Types</primary><secondary>System</secondary></indexterm>ScalarTypes</title>
	 
	 <para>The following sections describe the scalar types of the MSSQLDevice
		  Library.</para> 
	 <section id="T-MSSQLDevice.Binary"> 
		  <title><indexterm><primary>MSSQLBinary - Scalar
						  Type</primary></indexterm><indexterm><primary>Scalar
						  Types</primary><secondary>MSSQLBinary</secondary></indexterm>MSSQLDevice.MSSQLBinary</title>
		  
		  <para></para> 
		  <formalpara> 
				<title>Type Declaration</title> 
				<para> 
					 <programlisting>create type .MSSQLDevice.MSSQLBinary like System.Binary
 tags { Frontend.Grid.ElementType = "TextColumn" }
 static tags
 {
  Catalog.Comment = "System Binary",
  DAE.AsDisplayString = "AsDisplayString"
 };</programlisting></para> 
		  </formalpara> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.MSSQLBinary" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para>This is the selector for the DataType
				<symbol>MSSQLBinary</symbol>. Binary data is data stored in its raw
				format.</para> 
		  <para><symbol>MSSQLDevice.MSSQLBinary</symbol> is the set of all byte
				streams of data with length less than or equal to 8192
				(2<superscript>13</superscript>) bytes.</para> 
		  <example> 
				<title>Using MSSQLBinary</title> 
				<programlisting>// assuming the default device is a MSSQL device

create table TestBinary
{
 ID : Integer,
 BinaryData : MSSQLBinary tags { Frontend.ElementType = "TextBox" },
 key { ID }
};
// Image.Warning is a .png image file
insert table 
{ 
 row
 {
  1 ID, Binary('0123456789ABCDEF') BinaryData }
} into TestBinary;
select TestBinary;
// The image can be viewed by selecting the table
// in Dataphoria and selecting Browse.
drop table TestBinary;</programlisting> 
				<programlisting>ID Image
-- -------------
1  &lt;binary data&gt;</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="D4LGLanguageElements-Types-TypeConversions.html
" type="olinkb">Domain, Conveyors</ulink> | 
				<ulink url="D4LGLanguageElements-Types-SystemDataTypes.html
" type="olinkb">System Data Types</ulink> | 
				<ulink url="D4LGLanguageElements-Values-ScalarValues.html
" type="olinkb">Scalar Values</ulink></para> 
	 </section> 
</section> 
