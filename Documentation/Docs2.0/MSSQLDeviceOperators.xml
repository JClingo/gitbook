<?xml version="1.0"?>
<!DOCTYPE section SYSTEM "/src/Docs/DocBookManuals/docbookx.dtd">
<section id="O-MSSQLDevice.Operators"> 
	 <sectioninfo><date>Wednesday, December 29, 2004 10:21:27</date> 
	 </sectioninfo> 
	 <title><indexterm><primary>MSSQLDevice
					 Library</primary><secondary>Operators</secondary></indexterm> 
		  <indexterm><primary>Operators</primary><secondary>MSSQLDevice</secondary></indexterm>Operators</title>
	 
	 <para>The following sections describe the operators in the MSSQLDevice
		  Library.</para> 
	 <bridgehead renderas="sect3">See Also</bridgehead> 
	 <para><ulink url="O-SQLDevice.Operators.html" type="xref">SQLDevice
				Operators</ulink> | 
		  <ulink url="O-System.Operators.html" type="xref">System
				Operators</ulink> | 
		  <ulink url="O-Frontend.Operators.html" type="xref">Frontend
				Operators</ulink></para>
	 <section id="O-MSSQLDevice.iCompare"> 
		  <title><indexterm><primary>iCompare - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iCompare</secondary></indexterm>MSSQLDevice.iCompare</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iCompare" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iCompare</symbol> does a byte by byte comparison of two
				<symbol>MSSQLBinary</symbol> type values and returns an integer value. If both
				values are equal 0 is returned. If <symbol>ALeftValue</symbol> is greater than
				<symbol>ARightValue</symbol> 1 is returned. If <symbol>ALeftValue</symbol> is
				less than <symbol>ARightValue</symbol> -1 is returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iCompare</title> 
				<programlisting>select MSSQLBinary("07a4").iCompare(MSSQLBinary("07a425e3"));</programlisting> 
				<programlisting>-1</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="O-MSSQLDevice.iEqual.html"
				 type="xref">MSSQLDevice.iEqual</ulink> | 
				<ulink url="O-MSSQLDevice.iGreater.html"
				 type="xref">MSSQLDevice.iGreater</ulink> | 
				<ulink url="O-MSSQLDevice.iInclusiveGreater.html"
				 type="xref">MSSQLDevice.iInclusiveGreater</ulink> | 
				<ulink url="O-MSSQLDevice.iInclusiveLess.html"
				 type="xref">MSSQLDevice.iInclusiveLess</ulink> | 
				<ulink url="O-MSSQLDevice.iLess.html"
				 type="xref">MSSQLDevice.iLess</ulink> | 
				<ulink url="O-MSSQLDevice.iNotEqual.html"
				 type="xref">MSSQLDevice.iNotEqual</ulink> </para> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para>
	 </section> 
	 <section id="O-MSSQLDevice.iEqual"> 
		  <title><indexterm><primary>iEqual - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iEqual</secondary></indexterm>MSSQLDevice.iEqual</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iEqual" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iEqual</symbol> does a byte by byte comparison of two
				<symbol>MSSQLBinary</symbol> type values and returns a boolean value. If
				<symbol>ALeftValue</symbol> is equal to <symbol>ARightValue</symbol>
				<symbol>true</symbol> is returned, otherwise <symbol>false</symbol> is
				returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iEqual</title> 
				<programlisting>select MSSQLBinary("07a4").iEqual(MSSQLBinary("07a4"));</programlisting> 
				<programlisting>True</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para> 
	 </section> 
	 <section id="O-MSSQLDevice.iGreater"> 
		  <title><indexterm><primary>iGreater - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iGreater</secondary></indexterm>MSSQLDevice.iGreater</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iGreater" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iGreater</symbol> does a byte by byte comparison of two
				<symbol>MSSQLBinary</symbol> type values and returns a boolean value. If
				<symbol>ALeftValue</symbol> is greater than <symbol>ARightValue</symbol>
				<symbol>true</symbol> is returned, otherwise <symbol>false</symbol> is
				returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iGreater</title> 
				<programlisting>select MSSQLBinary("07a4").iGreater(MSSQLBinary("07a4ea34"));</programlisting> 
				<programlisting>False</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para> 
	 </section> 
	 <section id="O-MSSQLDevice.iInclusiveGreater"> 
		  <title><indexterm><primary>iInclusiveGreater - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iInclusiveGreater</secondary></indexterm>MSSQLDevice.iInclusiveGreater</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iInclusiveGreater" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iInclusiveGreater</symbol> does a byte by byte comparison
				of two <symbol>MSSQLBinary</symbol> type values and returns a boolean value. If
				<symbol>ALeftValue</symbol> is greater than or equal to
				<symbol>ARightValue</symbol> <symbol>true</symbol> is returned, otherwise
				<symbol>false</symbol> is returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iInclusiveGreater</title> 
				<programlisting>select MSSQLBinary("07a4").iInclusiveGreater(MSSQLBinary("07a4"));
select MSSQLBinary("07a4cf31").iInclusiveGreater(MSSQLBinary("07a4"));</programlisting> 
				<programlisting>True
True</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para> 
	 </section> 
	 <section id="O-MSSQLDevice.iInclusiveLess"> 
		  <title><indexterm><primary>iInclusiveLess - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iInclusiveLess</secondary></indexterm>MSSQLDevice.iInclusiveLess</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iInclusiveLess" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iInclusiveLess</symbol> does a byte by byte comparison of
				two <symbol>MSSQLBinary</symbol> type values and returns a boolean value. If
				<symbol>ALeftValue</symbol> is less than or equal to
				<symbol>ARightValue</symbol> <symbol>true</symbol> is returned, otherwise
				<symbol>false</symbol> is returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iInclusiveLess</title> 
				<programlisting>select MSSQLBinary("07a4").iInclusiveLess(MSSQLBinary("07a4"));
select MSSQLBinary("07a4cf31").iInclusiveLess(MSSQLBinary("07a4"));</programlisting> 
				<programlisting>True
False</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para> 
	 </section> 
	 <section id="O-MSSQLDevice.iLess"> 
		  <title><indexterm><primary>iLess - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iLess</secondary></indexterm>MSSQLDevice.iLess</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iLess" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iLess</symbol> does a byte by byte comparison of two
				<symbol>MSSQLBinary</symbol> type values and returns a boolean value. If
				<symbol>ALeftValue</symbol> is less than <symbol>ARightValue</symbol>
				<symbol>true</symbol> is returned, otherwise <symbol>false</symbol> is
				returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iLess</title> 
				<programlisting>select MSSQLBinary("07a3").iLess(MSSQLBinary("07a4"));</programlisting> 
				<programlisting>True</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para> 
	 </section> 
	 <section id="O-MSSQLDevice.iNotEqual"> 
		  <title><indexterm><primary>iNotEqual - MSSQLDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>iNotEqual</secondary></indexterm>MSSQLDevice.iNotEqual</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "MSSQLDevice.iNotEqual" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>iNotEqual</symbol> does a byte by byte comparison of two
				<symbol>MSSQLBinary</symbol> type values and returns a boolean value. If
				<symbol>ALeftValue</symbol> is less than <symbol>ARightValue</symbol>
				<symbol>true</symbol> is returned, otherwise <symbol>false</symbol> is
				returned.</para> 
		  <example> 
				<title>Using MSSQLDevice.iNotEqual</title> 
				<programlisting>select MSSQLBinary("07a4ec12").iNotEqual(MSSQLBinary("07a4"));</programlisting> 
				<programlisting>True</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para><ulink url="O-MSSQLDevice.Operators.html" type="xref">MSSQLDevice
					 Operators</ulink></para> 
	 </section> 
</section> 
