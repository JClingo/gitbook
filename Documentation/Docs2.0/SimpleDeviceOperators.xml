<?xml version="1.0"?>
<!DOCTYPE section SYSTEM "/src/Docs/DocBookManuals/docbookx.dtd">
<section> 
	 <sectioninfo><date>Monday, July 12, 2004 09:17:32</date> 
	 </sectioninfo> 
	 <title><indexterm><primary>SimpleDevice
					 Library</primary><secondary>Operators</secondary></indexterm> 
		  <indexterm><primary>Operators</primary><secondary>Simple
					 Device</secondary></indexterm>Operators</title> 
	 <para>The following sections describe the operators of the SimpleDevice
		  Library.</para> 
	 <section id="O-SimpleDevice.BeginUpdate"> 
		  <title><indexterm><primary>BeginUpdate - SimpleDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>BeginUpdate</secondary></indexterm>SimpleDevice.BeginUpdate</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "SimpleDevice.BeginUpdate" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>BeginUpdate</symbol> is used when the simple device
				setting AutoSave is true. This allows the AutoSave feature to be suspended from
				the point the <symbol>BeginUpdate</symbol> operator is used until the
				<symbol>EndUpdate</symbol> operator is used. This permits improved performance
				when a rapid sequence of updates is made to the tables.</para> 
		  <example> 
				<title>Using SimpleDevice.BeginUpdate</title> 
				<programlisting>CreateLibrary
 (LibraryDescriptor
  ("Lib",
   VersionNumberUndefined(),
   "Device",
   list(FileReference) {},
   list(LibraryReference) { LibraryReference("SimpleDevice",VersionNumberUndefined()) }
  )
 );
RegisterLibrary("Lib");
create device Device
	reconciliation { mode = { Command }, master = device }
	class "SimpleDevice"
		attributes
		{
			"DirectoryName" = "c:\Data",
			"AutoSave" = "true"
		};
create table Table { ID: Integer, Name : String, key{ID} };
BeginUpdate("Device", "Table");
insert table { row { 1 ID, "Jim" Name } } into Table;
insert table { row { 2 ID, "Jeff" Name } } into Table;
EndUpdate("Device", "Table");
select Table;
TruncateTable("Device", "Table");
drop table Table;
UnregisterLibrary("Lib");
DropLibrary("Lib");</programlisting> 
				<programlisting>ID Name
-- ----
1  Jim
2  Jeff</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="O-SimpleDevice.EndUpdate.html"
				 type="xref">SimpleDevice.EndUpdate</ulink> | 
				<ulink url="O-SimpleDevice.LoadTable.html"
				 type="xref">SimpleDevice.LoadTable</ulink> | 
				<ulink url="O-SimpleDevice.SaveTable.html"
				 type="xref">SimpleDevice.SaveTable</ulink> | 
				<ulink url="O-SimpleDevice.TruncateTable.html"
				 type="xref">SimpleDevice.TruncateTable</ulink> </para> 
	 </section> 
	 <section id="O-SimpleDevice.EndUpdate"> 
		  <title><indexterm><primary>EndUpdate - SimpleDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>EndUpdate</secondary></indexterm>SimpleDevice.EndUpdate</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "SimpleDevice.EndUpdate" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>EndUpdate</symbol> is used when the simple device setting
				AutoSave is true. This allows the AutoSave feature to be suspended from the
				point the <symbol>BeginUpdate</symbol> operator is used until the
				<symbol>EndUpdate</symbol> operator is used. This permits improved performance
				when a rapid sequence of updates is made to the tables.</para> 
		  <example> 
				<title>Using SimpleDevice.EndUpdate</title> 
				<programlisting>See the <ulink url="O-SimpleDevice.BeginUpdate.html" type="xref">SimpleDevice.BeginUpdate</ulink> example.</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="O-SimpleDevice.BeginUpdate.html"
				 type="xref">SimpleDevice.BeginUpdate</ulink> | 
				<ulink url="O-SimpleDevice.LoadTable.html"
				 type="xref">SimpleDevice.LoadTable</ulink> | 
				<ulink url="O-SimpleDevice.SaveTable.html"
				 type="xref">SimpleDevice.SaveTable</ulink> | 
				<ulink url="O-SimpleDevice.TruncateTable.html"
				 type="xref">SimpleDevice.TruncateTable</ulink> </para> 
	 </section> 
	 <section id="O-SimpleDevice.LoadTable"> 
		  <title><indexterm><primary>LoadTable - SimpleDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>LoadTable</secondary></indexterm>SimpleDevice.LoadTable</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "SimpleDevice.LoadTable" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>LoadTable</symbol> loads the table from the file into
				memory. Loading of the data takes place automatically when the first need for
				the data is encountered. This operator is used internally by the system and
				need not be used.</para> 
		  <example> 
				<title>Using SimpleDevice.LoadTable</title> 
				<programlisting>LoadTable ("Data", "Table")</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="O-SimpleDevice.BeginUpdate.html"
				 type="xref">SimpleDevice.BeginUpdate</ulink> | 
				<ulink url="O-SimpleDevice.EndUpdate.html"
				 type="xref">SimpleDevice.EndUpdate</ulink> | 
				<ulink url="O-SimpleDevice.SaveTable.html"
				 type="xref">SimpleDevice.SaveTable</ulink> | 
				<ulink url="O-SimpleDevice.TruncateTable.html"
				 type="xref">SimpleDevice.TruncateTable</ulink> </para> 
	 </section> 
	 <section id="O-SimpleDevice.SaveTable"> 
		  <title><indexterm><primary>SaveTable - SimpleDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>SaveTable</secondary></indexterm>SimpleDevice.SaveTable</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "SimpleDevice.SaveTable" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>SaveTable</symbol> causes the table to be written from
				the memory to the file. Use of this operator is necessary when the simple
				device setting AutoSave is false.</para> 
		  <example> 
				<title>Using SimpleDevice.SaveTable</title> 
				<programlisting>CreateLibrary
 (LibraryDescriptor
  ("Lib",
   VersionNumberUndefined(),
   "Device",
   list(FileReference) {},
   list(LibraryReference) { LibraryReference("SimpleDevice",VersionNumberUndefined()) }
  )
 );
RegisterLibrary("Lib");
create device Device
	reconciliation { mode = { Command }, master = device }
	class "SimpleDevice"
		attributes
		{
			"DirectoryName" = "c:\Data",
			"AutoSave" = "false"
		};
create table Table { ID: Integer, Name : String, key{ID} };
insert table { row { 1 ID, "Jim" Name } } into Table;
insert table { row { 2 ID, "Jeff" Name } } into Table;
SaveTable("Device", "Table");
select Table;
TruncateTable("Device", "Table");
UnregisterLibrary("Lib");
DropLibrary("Lib");</programlisting> 
				<programlisting>ID Name
-- ----
1  Jim
2  Jeff</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="O-SimpleDevice.BeginUpdate.html"
				 type="xref">SimpleDevice.BeginUpdate</ulink> | 
				<ulink url="O-SimpleDevice.EndUpdate.html"
				 type="xref">SimpleDevice.EndUpdate</ulink> | 
				<ulink url="O-SimpleDevice.LoadTable.html"
				 type="xref">SimpleDevice.LoadTable</ulink> | 
				<ulink url="O-SimpleDevice.TruncateTable.html"
				 type="xref">SimpleDevice.TruncateTable</ulink> </para> 
	 </section> 
	 <section id="O-SimpleDevice.TruncateTable"> 
		  <title><indexterm><primary>TruncateTable - SimpleDevice
						  Operator</primary></indexterm><indexterm><primary>Operators</primary><secondary>TruncateTable</secondary></indexterm>SimpleDevice.TruncateTable</title>
		  
		  <para></para> <?DocLib D4ExpressionBlock programlisting Operators where OperatorName = "SimpleDevice.TruncateTable" add { Script(Name) Declaration }?>
		  <formalpara> 
				<title>Declarations</title> 
				<para> 
					 <programlisting><?DocLib D4Field Declaration?></programlisting></para> 
		  </formalpara> 
		  <bridgehead renderas="sect3">Remarks</bridgehead> 
		  <para><symbol>TruncateTable</symbol> clears all data from memory and
				deletes the file for the specified table on the specified device.</para> 
		  <example> 
				<title>Using SimpleDevice.TruncateTable</title> 
				<programlisting>See the <ulink url="O-SimpleDevice.BeginUpdate.html" type="xref">SimpleDevice.BeginUpdate</ulink> example.</programlisting> 
		  </example> 
		  <bridgehead renderas="sect3">See Also</bridgehead> 
		  <para> 
				<ulink url="O-SimpleDevice.BeginUpdate.html"
				 type="xref">SimpleDevice.BeginUpdate</ulink> | 
				<ulink url="O-SimpleDevice.EndUpdate.html"
				 type="xref">SimpleDevice.EndUpdate</ulink> | 
				<ulink url="O-SimpleDevice.LoadTable.html"
				 type="xref">SimpleDevice.LoadTable</ulink> | 
				<ulink url="O-SimpleDevice.SaveTable.html"
				 type="xref">SimpleDevice.SaveTable</ulink> </para> 
	 </section> 
</section> 
