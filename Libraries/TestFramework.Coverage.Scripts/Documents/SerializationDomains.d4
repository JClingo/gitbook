/*
	Dataphor
	Â© Copyright 2000-2008 Alphora
	This file is licensed under a modified BSD-license which can be found here: http://dataphor.org/dataphor_license.txt
*/
// Domains
	// Defaults
	// Constraints
	// Specials
	// Sorts
	// Conversions

create domain SimpleDomain like String;

create domain SimpleDefault like String { default "" };

create domain SimpleConstraint like String { constraint Valid value.Length() < 5 };

create table DefaultHelper { ID : Integer, key { } };

create domain TableDefault like Integer { default ID from row from DefaultHelper };

create table GeneratorTable { NextKey : Integer, key { } };

create operator GetNextKey() : Integer
begin
	update GeneratorTable set { NextKey := NextKey + 1 };
	result := (NextKey from row from GeneratorTable) - 1;
end;

create domain SequenceDefault like Integer { default GetNextKey() };

create domain SpecialDomain like String { special Unknown "" };

create domain SortDomain like String;

create sort SortDomain using CompareText(left.value, right.value);

create domain ConversionDomain { representation ConversionDomain { Value : String } };

create conversion ConversionDomain to String using ConversionDomain.ReadValue;
create conversion String to ConversionDomain using ConversionDomain;

create domain TagDomain
{
	representation TagDomain
	{
		Value : String static tags { DAE.Test = "Test" } tags { Frontend.Title = "Tag Domain" }
	} static tags { DAE.Test = "Test" } tags { Frontend.Title = "Tag Domain" },
	default TagDomain("") static tags { DAE.Test = "Test" } tags { Frontend.Title = "Default" },
	constraint Valid Length(value.Value) < 50 static tags { DAE.SimpleMessage = "Length must be less than 50" } tags { Frontend.Title = "Length Constraint" },
	special DontCare TagDomain("") static tags { DAE.Test = "Test" } tags { Frontend.Title = "Don't Care" }
} static tags { DAE.StaticByteSize = "20" } tags { Frontend.Title = "Tag Domain" };

