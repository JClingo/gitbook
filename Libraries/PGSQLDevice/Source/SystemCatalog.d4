/*
	Dataphor
	Â© Copyright 2000-2011 Alphora
	This file is licensed under a modified BSD-license which can be found here: http://dataphor.org/dataphor_license.txt
*/

begin
		alter device {0}
		{{
			create operator System.iRetrieve() class "PostgreSQLDevice.PostgreSQLRetrieve" static tags {{ DAE.IsSystem = "true" }} 			
		}} ;
end;

begin	
	alter device {0}
	{{
		create type System.Boolean class "SQLDevice.SQLBoolean" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Boolean(System.Boolean) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Boolean.ReadValue(System.Boolean) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Boolean.WriteValue(System.Boolean, System.Boolean) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 

		//create type System.Boolean class "PostgreSQLDevice.PostgreSQLBoolean" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.Boolean(System.Boolean) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.Boolean.ReadValue(System.Boolean) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.Boolean.WriteValue(System.Boolean, System.Boolean) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.Boolean.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Convert(BigInt, {{0}})" }},			
		//create operator System.Boolean.ReadAsString(System.Boolean) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Convert(varchar, {{0}})" }},			
		//create operator System.Boolean.WriteAsString(System.Boolean, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Convert(BigInt, {{1}})" }},			

		create type System.Decimal class "SQLDevice.SQLDecimal" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Decimal(System.Decimal) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Decimal.ReadValue(System.Decimal) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Decimal.WriteValue(System.Decimal, System.Decimal) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 
        create operator System.Decimal.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Replace({{0}}, ',', '.')::numeric" }},
	    create operator System.Decimal.ReadAsString(System.Decimal) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
	    create operator System.Decimal.WriteAsString(System.Decimal, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Replace({{1}}, ',', '.')::numeric" }},

		create type System.Long class "SQLDevice.SQLLong" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Long(System.Long) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Long.ReadValue(System.Long) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Long.WriteValue(System.Long, System.Long) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 
        create operator System.Long.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Cast({{0}} as BigInt)" }},			
	    create operator System.Long.ReadAsString(System.Long) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
	    create operator System.Long.WriteAsString(System.Long, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::bigint" }},

		create type System.Integer class "SQLDevice.SQLInteger" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Integer(System.Integer) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Integer.ReadValue(System.Integer) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Integer.WriteValue(System.Integer, System.Integer) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 
        create operator System.Integer.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::integer" }},
	    create operator System.Integer.ReadAsString(System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
	    create operator System.Integer.WriteAsString(System.Integer, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::integer" }},

		create type System.Short class "SQLDevice.SQLShort" static tags {{ DAE.IsSystem = "true" }},
		create operator System.Short(System.Short) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
		create operator System.Short.ReadValue(System.Short) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
		create operator System.Short.WriteValue(System.Short, System.Short) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::smallint" }},
        create operator System.Short.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
	    create operator System.Short.ReadAsString(System.Short) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
	    create operator System.Short.WriteAsString(System.Short, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::smallint" }},

		create type System.Byte class "PostgreSQLDevice.PostgreSQLByte" static tags {{ DAE.IsSystem = "true" }},
		create operator System.Byte(System.Byte) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
		create operator System.Byte.ReadValue(System.Byte) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
		create operator System.Byte.WriteValue(System.Byte, System.Byte) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::smallint" }},
        create operator System.Byte.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
	    create operator System.Byte.ReadAsString(System.Byte) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
	    create operator System.Byte.WriteAsString(System.Byte, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::smallint" }},

		create type System.Money class "PostgreSQLDevice.PostgreSQLMoney" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Money(System.Decimal) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Money.ReadValue(System.Money) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Money.WriteValue(System.Money, System.Decimal) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 
        create operator System.Money.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::money" }},
	    create operator System.Money.ReadAsString(System.Money) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
	    create operator System.Money.WriteAsString(System.Money, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::money" }},
	    //create operator System.Money.AsDisplayString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Convert(Money, {{0}})" }},
	    //create operator System.Money.ReadAsDisplayString(System.Money) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "'$' + Convert(Varchar, {{1}}, 1 )" }},			
	    //create operator System.Money.WriteAsDisplayString(System.Money, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Convert(Money, {{1}})" }},			

		create type System.TimeSpan class "SQLDevice.SQLTimeSpan" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan(System.Integer) class "SQLDevice.SQLTimeSpan1Operand" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan(System.Integer, System.Integer) class "SQLDevice.SQLTimeSpan2Operands" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan(System.Integer, System.Integer, System.Integer) class "SQLDevice.SQLTimeSpan3Operands" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan(System.Integer, System.Integer, System.Integer, System.Integer) class "SQLDevice.SQLTimeSpan4Operands" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan(System.Integer, System.Integer, System.Integer, System.Integer, System.Decimal) class "SQLDevice.SQLTimeSpan5Operands" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.Days(System.Decimal) class "SQLDevice.SQLTimeSpanDays" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.ReadDays(System.TimeSpan) class "SQLDevice.SQLTimeSpanReadDays" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.WriteDays(System.TimeSpan, System.Decimal) class "SQLDevice.SQLTimeSpanWriteDays" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.Hours(System.Decimal) class "SQLDevice.SQLTimeSpanHours" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.ReadHours(System.TimeSpan) class "SQLDevice.SQLTimeSpanReadHours" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.WriteHours(System.TimeSpan, System.Decimal) class "SQLDevice.SQLTimeSpanWriteHours" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.Minutes(System.Decimal) class "SQLDevice.SQLTimeSpanMinutes" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.ReadMinutes(System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMinutes" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.WriteMinutes(System.TimeSpan, System.Decimal) class "SQLDevice.SQLTimeSpanWriteMinutes" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.Seconds(System.Decimal) class "SQLDevice.SQLTimeSpanSeconds" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.ReadSeconds(System.TimeSpan) class "SQLDevice.SQLTimeSpanReadSeconds" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.WriteSeconds(System.TimeSpan, System.Decimal) class "SQLDevice.SQLTimeSpanWriteSeconds" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.Milliseconds(System.Decimal) class "SQLDevice.SQLTimeSpanMilliseconds" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.ReadMilliseconds(System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMilliseconds" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.WriteMilliseconds(System.TimeSpan, System.Decimal) class "SQLDevice.SQLTimeSpanWriteMilliseconds" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.Ticks(System.Long) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.ReadTicks(System.TimeSpan) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.TimeSpan.WriteTicks(System.TimeSpan, System.Long) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }},

		create type System.DateTime class "PostgreSQLDevice.PostgreSQLDateTime" static tags {{ DAE.IsSystem = "true" }},
		create operator System.DateTime.ReadYear(System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DTReadYear(({{0}})::date)" }},
		create operator System.DateTime.ReadMonth(System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DTReadMonth(({{0}})::date)" }},
		create operator System.DateTime.ReadDay(System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DTReadDay(({{0}})::date)" }},

		create operator System.DateTime.ReadTicks(System.DateTime) static tags {{ Storage.TranslationString = "DAE_DTTimeSpan({{0}})", DAE.IsSystem = "true" }},
		create operator System.DateTime.Ticks(System.Long) static tags {{ Storage.TranslationString = "DAE_TSDateTime({{0}})", DAE.IsSystem = "true" }},
		create operator System.DateTime.WriteTicks(System.DateTime, System.Long) static tags {{ Storage.TranslationString = "DAE_TSDateTime({{1}})", DAE.IsSystem = "true" }},
		create operator System.DateTime.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::timestamp" }},
		create operator System.DateTime.ReadAsString(System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
		create operator System.DateTime.WriteAsString(System.DateTime, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::timestamp" }},

		create type System.Time class "PostgreSQLDevice.PostgreSQLTime" static tags {{ DAE.IsSystem = "true" }},
		create operator System.Time() static tags {{ Storage.TranslationString = "DAE_DTTimePart(now()::timestamp)", DAE.IsSystem = "true" }},
		create operator System.Time(System.Integer,System.Integer) static tags {{ Storage.TranslationString = "DAE_DateTimeSelector(1900, 1, 1, {{0}}, {{1}})", DAE.IsSystem = "true" }},
		create operator System.Time(System.Integer,System.Integer,System.Integer) static tags {{ Storage.TranslationString = "DAE_DateTimeSelector(1900, 1, 1, {{0}}, {{1}}, {{2}})", DAE.IsSystem = "true" }},
		create operator System.Time.ReadHour(System.Time) static tags {{ Storage.TranslationString = "date_part('h', {{0}})", DAE.IsSystem = "true" }},
		create operator System.Time.ReadMinute(System.Time) static tags {{ Storage.TranslationString = "date_part('m', {{0}})", DAE.IsSystem = "true" }},
		create operator System.Time.ReadSecond(System.Time) static tags {{ Storage.TranslationString = "date_part('s', {{0}})", DAE.IsSystem = "true" }},
		create operator System.Time.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "('1900-1-1 ' || {{0}})::timestamp" }},
		create operator System.Time.ReadAsString(System.Time) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "substr(({{0}})::varchar, 12)" }},
		create operator System.Time.WriteAsString(System.Time, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "('1900-1-1 ' || {{1}})::timestamp" }},
		create operator System.Time.Ticks(System.Long) static tags {{ Storage.TranslationString = "('1900-1-1'::timestamp + ((({{0}} / 10000000) % 86400) || ' s')::interval)", DAE.IsSystem = "true" }},
		create operator System.Time.ReadTicks(System.Time) static tags {{ Storage.TranslationString = "((date_part('h', {{0}}) * 3600 + date_part('m', {{0}}) * 60 + date_part('s', {{0}})) * 10000000::bigint)", DAE.IsSystem = "true" }},
		create operator System.Time.WriteTicks(System.Time, System.Long) static tags {{ Storage.TranslationString = "('1900-1-1'::timestamp + ((({{1}} / 10000000) % 86400) || ' s')::interval)", DAE.IsSystem = "true" }},

		create type System.Date class "PostgreSQLDevice.PostgreSQLDate" static tags {{ DAE.IsSystem = "true" }},
		create operator System.Date.ReadYear(System.Date) static tags {{ Storage.TranslationString = "date_part('y', {{0}})", DAE.IsSystem = "true" }}, 
		create operator System.Date.ReadMonth(System.Date) static tags {{ Storage.TranslationString = "date_part('month', {{0}})", DAE.IsSystem = "true" }}, 
		create operator System.Date.ReadDay(System.Date) static tags {{ Storage.TranslationString = "date_part('d', {{0}})", DAE.IsSystem = "true" }},
		create operator System.Date.Ticks(System.Long) static tags {{ Storage.TranslationString = "('1900-1-1'::date + (({{0}} / 864000000000 - 693595) || ' d')::interval)::date", DAE.IsSystem = "true" }},
		create operator System.Date.ReadTicks(System.Date) static tags {{ Storage.TranslationString = "DAE_DTTimeSpan({{0}})", DAE.IsSystem = "true" }},
		create operator System.Date.WriteTicks(System.Date, System.Long) static tags {{ Storage.TranslationString = "('1900-1-1'::date + (({{1}} / 864000000000 - 693595) || ' d')::interval)::date", DAE.IsSystem = "true" }},
		create operator System.Date.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::date" }},
	    create operator System.Date.ReadAsString(System.Date) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "substr(({{0}})::varchar, 1, 10)" }},
	    create operator System.Date.WriteAsString(System.Date, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{1}})::date" }},

		create operator System.iSubtraction(System.Date,System.Date) static tags {{ Storage.TranslationString = "((({{0}})::date - ({{1}})::date) * 864000000000)", DAE.IsSystem = "true" }},
		create operator System.iSubtraction(System.Date,System.TimeSpan) static tags {{ Storage.TranslationString = "((({{0}})::date - ((({{1}}) / 864000000000) || ' d')::interval)::date)", DAE.IsSystem = "true" }},
		create operator System.iSubtraction(System.DateTime,System.TimeSpan) static tags {{ Storage.TranslationString = "(({{0}})::timestamp - ((({{1}}) / 10000000) || ' s')::interval)", DAE.IsSystem = "true" }},
		create operator System.iSubtraction(System.Time,System.Time) static tags {{ Storage.TranslationString = "(extract(epoch from (({{0}})::timestamp - ({{1}})::timestamp)) * 10000000)", DAE.IsSystem = "true" }},
		create operator System.iSubtraction(System.TimeSpan, System.TimeSpan) static tags {{ Storage.TranslationString = "(cast({{0}}-{{1}} as bigint))", DAE.IsSystem = "true" }},
	    create operator System.iSubtraction(System.Time,System.TimeSpan) static tags {{ Storage.TranslationString = "(({{0}})::timestamp + ((cast({{1}} as BigInt) / cast(-36000000000 as BigInt)) || ' h')::interval + ((((cast({{1}} as BigInt) % cast(36000000000 as BigInt))) / -10000000) || ' s')::interval)", DAE.IsSystem = "true" }},
		create operator System.iSubtraction(System.DateTime,System.DateTime) static tags {{ Storage.TranslationString = "(CAST(extract(epoch from ({{0}}) - ({{1}})) AS bigint) * 10000000)", DAE.IsSystem = "true" }},

		create operator System.iAddition(System.Date,System.TimeSpan) static tags {{ Storage.TranslationString = "(({{0}}) + ((({{1}}) / 864000000000) || ' d')::interval)", DAE.IsSystem = "true" }},
		create operator System.iAddition(System.DateTime,System.TimeSpan) static tags {{ Storage.TranslationString = "(({{0}}) + ((({{1}})/10000000) || ' s')::interval)", DAE.IsSystem = "true" }},
		create operator System.iAddition(System.Time,System.TimeSpan) static tags {{ Storage.TranslationString = "(({{0}}) + (((cast(({{1}}) as bigint) % cast(864000000000 as bigint))/10000000) || ' s')::interval)", DAE.IsSystem = "true" }},

		create operator System.iAddition(System.Name, System.Name) class "SQLDevice.SQLConcatenation" static tags {{ DAE.IsSystem = "true" }},
		create operator System.iMultiplication(System.TimeSpan, System.Decimal) static tags {{ Storage.TranslationString = "floor({{0}} * {{1}})", DAE.IsSystem = "true" }},
		create operator System.iMultiplication(System.Decimal, System.TimeSpan) static tags {{ Storage.TranslationString = "floor({{0}} * {{1}})", DAE.IsSystem = "true" }},
		create operator System.iDivision(System.TimeSpan, System.Decimal) static tags {{ Storage.TranslationString = "floor({{0}} / {{1}})", DAE.IsSystem = "true" }},

		create type System.Binary class "PostgreSQLDevice.PostgreSQLBinary" static tags {{ DAE.IsSystem = "true" }},
		create operator System.Binary(System.String) static tags {{ Storage.TranslationString = "({{0}})::bytea", DAE.IsSystem = "true" }}, // "Convert(varbinary, {{0}})", DAE.IsSystem = "true" }},

        create type System.Graphic class "PostgreSQLDevice.PostgreSQLGraphic" static tags {{ DAE.IsSystem = "true" }},
        create operator System.Graphic(System.String) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}

		}};
		end;

		begin
		alter device {0}
		{{

		create type SQLDevice.MSSQLBinary class "PostgreSQLDevice.PostgreSQLMSSQLBinary" static tags {{ DAE.IsSystem = "true" }},
		create operator SQLDevice.MSSQLBinary.AsBinary(System.Binary) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.MSSQLBinary.ReadAsBinary(SQLDevice.MSSQLBinary) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.MSSQLBinary.WriteAsBinary(SQLDevice.MSSQLBinary, System.Binary) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }} 

		}};
		end;

		begin
		alter device {0}
		{{


		create type System.Guid class "PostgreSQLDevice.PostgreSQLGuid" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Guid(System.String) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Guid.ReadValue(System.Guid) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Guid.WriteValue(System.Guid, System.String) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Guid.AsString(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})" }},
		create operator System.NameFromGuid(System.Guid) static tags {{ Storage.TranslationString = "('Object_' || Replace(Lower({{0}}), '-', '_'))", DAE.IsSystem = "true" }},

		create type System.VersionNumber class "SQLDevice.SQLVersionNumber" static tags {{ DAE.IsSystem = "true" }},
		create operator System.IsUndefined(System.VersionNumber) class "SQLDevice.SQLVersionNumberIsUndefinedOperator" static tags {{ DAE.IsSystem = "true" }},

		create operator System.IsSpecial(System.Scalar) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Long) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Short) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Money) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.DateTime) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }},
		create operator System.IsSpecial(System.Binary) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Graphic) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Date) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Name) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.Time) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.UserID) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.IsSpecial(SQLDevice.MSSQLBinary) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.IsSpecial(System.VersionNumber) class "SQLDevice.SQLVersionNumberIsUndefinedOperator" static tags {{ DAE.IsSystem = "true" }},

		//create operator System.ToBoolean(System.Integer) class "PostgreSQLDevice.PostgreSQLToBit" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToBoolean(System.Short) class "PostgreSQLDevice.PostgreSQLToBit" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToBoolean(System.Long) class "PostgreSQLDevice.PostgreSQLToBit" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToBoolean(System.Byte) class "PostgreSQLDevice.PostgreSQLToBit" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToDecimal(System.Money) class "PostgreSQLDevice.PostgreSQLToDecimal288" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.ToDecimal(System.Integer) static tags {{ Storage.TranslationString = "{{0}}", DAE.IsSystem = "true" }}, 
		//create operator System.ToDecimal(System.Long) class "PostgreSQLDevice.PostgreSQLToDecimal288" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToLong(System.Boolean) class "PostgreSQLDevice.PostgreSQLToBigInt" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToLong(System.Integer) class "PostgreSQLDevice.PostgreSQLToBigInt" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToLong(System.Short) class "PostgreSQLDevice.PostgreSQLToBigInt" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToLong(System.Decimal) class "PostgreSQLDevice.PostgreSQLToBigInt" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToLong(System.Byte) class "PostgreSQLDevice.PostgreSQLToBigInt" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToLong(System.Money) class "PostgreSQLDevice.PostgreSQLToBigInt" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.ToInteger(System.Long) static tags {{ Storage.TranslationString = "({{0}})::int", DAE.IsSystem = "true" }},
		create operator System.ToInteger(System.Decimal) static tags {{ Storage.TranslationString = "Round({{0}}, 0)::int", DAE.IsSystem = "true" }},
		create operator System.ToInteger(System.Boolean) static tags {{ Storage.TranslationString = "({{0}})::int", DAE.IsSystem = "true" }},
		create operator System.ToInteger(System.Money) static tags {{ Storage.TranslationString = "Round({{0}}, 0)::int", DAE.IsSystem = "true" }},
		create operator System.ToInteger(System.Byte) static tags {{ Storage.TranslationString = "({{0}})::int", DAE.IsSystem = "true" }},
		create operator System.ToInteger(System.Short) static tags {{ Storage.TranslationString = "({{0}})::int", DAE.IsSystem = "true" }},
		create operator System.ToShort(System.Long) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToShort(System.Integer) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToShort(System.Boolean) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToShort(System.Byte) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToByte(System.Long) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToByte(System.Short) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToByte(System.Boolean) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		create operator System.ToByte(System.Integer) static tags {{ Storage.TranslationString = "({{0}})::smallint", DAE.IsSystem = "true" }},
		//create operator System.ToMoney(System.Long) class "PostgreSQLDevice.PostgreSQLToMoney" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToMoney(System.Integer) class "PostgreSQLDevice.PostgreSQLToMoney" static tags {{ DAE.IsSystem = "true" }}, 
		//create operator System.ToMoney(System.Decimal) class "PostgreSQLDevice.PostgreSQLToMoney" static tags {{ DAE.IsSystem = "true" }}, 
        //create operator System.ToMoney(System.String) class "PostgreSQLDevice.PostgreSQLToMoney"  static tags {{ DAE.IsSystem = "true" }},
		create operator System.ToDate(System.DateTime) static tags {{ Storage.TranslationString = "({{0}})::date", DAE.IsSystem = "true" }},
		create operator System.ToDate(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::date" }},
		create operator System.ToDateTime(System.Date) static tags {{ Storage.TranslationString = "({{0}})::timestamp", DAE.IsSystem = "true" }},
		create operator System.ToDateTime(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::timestamp" }},
		create operator System.ToTime(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "('1900-1-1 ' || {{0}})::timestamp" }},

		create operator System.iCompare(System.Name, System.Name) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.UserID, System.UserID) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.DateTime, System.DateTime) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Time, System.Time) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Date, System.Date) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Decimal, System.Decimal) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Money, System.Money) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Guid, System.Guid) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Boolean, System.Boolean) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Long, System.Long) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Byte, System.Byte) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Short, System.Short) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.Integer, System.Integer) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iCompare(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }},
		create operator SQLDevice.iCompare(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 

		create operator System.Max(System.Byte, System.Byte) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Short, System.Short) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Long, System.Long) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.TimeSpan, System.TimeSpan) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.DateTime, System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Time, System.Time) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Date, System.Date) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Decimal, System.Decimal) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.Money, System.Money) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Max(System.VersionNumber, System.VersionNumber) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} > {{1}} then {{0}} else {{1}} end" }}, 

		create operator System.Min(System.Byte, System.Byte) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Short, System.Short) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Long, System.Long) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.TimeSpan, System.TimeSpan) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.DateTime, System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Time, System.Time) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Date, System.Date) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Decimal, System.Decimal) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.Money, System.Money) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		create operator System.Min(System.VersionNumber, System.VersionNumber) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when {{0}} is null then {{1}} when {{1}} is null then {{0}} when {{0}} < {{1}} then {{0}} else {{1}} end" }}, 
		
		create operator System.iEqual(System.Boolean, System.Boolean) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Short, System.Short) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Decimal, System.Decimal) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Integer, System.Integer) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Byte, System.Byte) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Long, System.Long) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.DateTime, System.DateTime) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Date, System.Date) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Time, System.Time) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Money, System.Money) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.Guid, System.Guid) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
        create operator System.iEqual(System.Name, System.Name) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.UserID, System.UserID) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iEqual(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.iEqual(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }},

		create operator System.iNotEqual(System.Long, System.Long) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Byte, System.Byte) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Guid, System.Guid) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Short, System.Short) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.DateTime, System.DateTime) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Time, System.Time) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Date, System.Date) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Boolean, System.Boolean) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Decimal, System.Decimal) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Integer, System.Integer) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Money, System.Money) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.Name, System.Name) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNotEqual(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.iNotEqual(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }},

		create operator System.iLess(System.Integer, System.Integer) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Long, System.Long) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Guid, System.Guid) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Boolean, System.Boolean) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Money, System.Money) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.DateTime, System.DateTime) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Time, System.Time) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Date, System.Date) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Decimal, System.Decimal) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Short, System.Short) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Byte, System.Byte) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.Name, System.Name) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLess(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.iLess(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }},

		create operator System.iInclusiveLess(System.Decimal, System.Decimal) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Byte, System.Byte) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.DateTime, System.DateTime) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Date, System.Date) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Time, System.Time) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Long, System.Long) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Boolean, System.Boolean) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Guid, System.Guid) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Short, System.Short) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Money, System.Money) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveLess(System.Name, System.Name) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }},
		create operator System.iInclusiveLess(System.Integer, System.Integer) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }},
		create operator System.iInclusiveLess(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }},
		create operator SQLDevice.iInclusiveLess(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }},

		create operator System.iInclusiveGreater(System.Short, System.Short) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Byte, System.Byte) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Integer, System.Integer) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Decimal, System.Decimal) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Long, System.Long) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Boolean, System.Boolean) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.DateTime, System.DateTime) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Time, System.Time) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Date, System.Date) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Money, System.Money) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Guid, System.Guid) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.Name, System.Name) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iInclusiveGreater(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.iInclusiveGreater(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }},

		create operator System.iGreater(System.Byte, System.Byte) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.DateTime, System.DateTime) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Time, System.Time) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Date, System.Date) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Money, System.Money) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Boolean, System.Boolean) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Long, System.Long) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Integer, System.Integer) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Guid, System.Guid) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Decimal, System.Decimal) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Short, System.Short) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iGreater(System.Name, System.Name) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
        //create operator System.iGreater(System.VersionNumber, System.VersionNumber) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
		create operator SQLDevice.iGreater(SQLDevice.MSSQLBinary, SQLDevice.MSSQLBinary) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }},

		create operator System.iNegate(System.Short) class "SQLDevice.SQLNegate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNegate(System.Long) class "SQLDevice.SQLNegate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNegate(System.Integer) class "SQLDevice.SQLNegate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNegate(System.Decimal) class "SQLDevice.SQLNegate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNegate(System.Money) class "SQLDevice.SQLNegate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNegate(System.TimeSpan) class "SQLDevice.SQLNegate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.Decimal, System.Decimal) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.Byte, System.Byte) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.Long, System.Long) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.Money, System.Money) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.Integer, System.Integer) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAddition(System.Short, System.Short) class "SQLDevice.SQLAddition" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iSubtraction(System.Long, System.Long) class "SQLDevice.SQLSubtraction" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iSubtraction(System.Short, System.Short) class "SQLDevice.SQLSubtraction" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iSubtraction(System.Byte, System.Byte) class "SQLDevice.SQLSubtraction" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iSubtraction(System.Integer, System.Integer) class "SQLDevice.SQLSubtraction" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iSubtraction(System.Decimal, System.Decimal) class "SQLDevice.SQLSubtraction" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iSubtraction(System.Money, System.Money) class "SQLDevice.SQLSubtraction" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Integer, System.TimeSpan) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.TimeSpan, System.Integer) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Decimal, System.Money) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Long, System.Long) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Money, System.Decimal) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Money, System.Integer) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Byte, System.Byte) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Integer, System.Money) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Decimal, System.Decimal) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Integer, System.Integer) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMultiplication(System.Short, System.Short) class "SQLDevice.SQLMultiplication" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Money, System.Integer) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Decimal, System.Decimal) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Byte, System.Byte) class "SQLDevice.SQLIntegerDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.TimeSpan, System.TimeSpan) class "SQLDevice.SQLIntegerDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Long, System.Long) class "SQLDevice.SQLIntegerDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Integer, System.Integer) class "SQLDevice.SQLIntegerDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Money, System.Decimal) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Money, System.Money) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.Short, System.Short) class "SQLDevice.SQLIntegerDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDivision(System.TimeSpan, System.Integer) class "SQLDevice.SQLIntegerDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDiv(System.Decimal, System.Decimal) static tags {{ Storage.TranslationString = "floor(cast({{0}} as Decimal) / cast({{1}} as Decimal))", DAE.IsSystem = "true" }},

		create operator System.iDiv(System.Integer, System.Integer) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDiv(System.Long, System.Long) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDiv(System.Short, System.Short) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iDiv(System.Byte, System.Byte) class "SQLDevice.SQLDivision" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iMod(System.Long, System.Long) static tags {{ Storage.TranslationString = "(({{0}}) % ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iMod(System.Byte, System.Byte) static tags {{ Storage.TranslationString = "(({{0}}) % ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iMod(System.Integer, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) % ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iMod(System.Short, System.Short) static tags {{ Storage.TranslationString = "(({{0}}) % ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iMod(System.Decimal, System.Decimal) static tags {{ Storage.TranslationString = "(({{0}}) % ({{1}}))", DAE.IsSystem = "true" }},

		//create operator System.iPower(System.Decimal, System.Decimal) class "PostgreSQLDevice.PostgreSQLPower" static tags {{ DAE.IsSystem = "true" }}, 

		create operator System.iAnd(System.Boolean, System.Boolean) class "SQLDevice.SQLAnd" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iOr(System.Boolean, System.Boolean) class "SQLDevice.SQLOr" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iXor(System.Boolean, System.Boolean) class "SQLDevice.SQLXor" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iNot(System.Boolean) class "SQLDevice.SQLNot" static tags {{ DAE.IsSystem = "true" }}, 

		create operator System.iIn(generic, list) class "SQLDevice.SQLIn" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iIn(System.Scalar, table) class "SQLDevice.SQLIn" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iExists(table) class "SQLDevice.SQLExists" static tags {{ DAE.IsSystem = "true" }}, 

		create operator System.iBitwiseAnd(System.Integer, System.Integer) class "SQLDevice.SQLBitwiseAnd" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseAnd(System.Long, System.Long) class "SQLDevice.SQLBitwiseAnd" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseAnd(System.Byte, System.Byte) class "SQLDevice.SQLBitwiseAnd" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseAnd(System.Short, System.Short) class "SQLDevice.SQLBitwiseAnd" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseOr(System.Short, System.Short) class "SQLDevice.SQLBitwiseOr" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseOr(System.Byte, System.Byte) class "SQLDevice.SQLBitwiseOr" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseOr(System.Long, System.Long) class "SQLDevice.SQLBitwiseOr" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseOr(System.Integer, System.Integer) class "SQLDevice.SQLBitwiseOr" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseXor(System.Short, System.Short) static tags {{ Storage.TranslationString = "(({{0}}) # ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iBitwiseXor(System.Long, System.Long) static tags {{ Storage.TranslationString = "(({{0}}) # ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iBitwiseXor(System.Byte, System.Byte) static tags {{ Storage.TranslationString = "(({{0}}) # ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iBitwiseXor(System.Integer, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) # ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iBitwiseNot(System.Long) class "SQLDevice.SQLBitwiseNot" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseNot(System.Byte) static tags {{ Storage.TranslationString = "(256 + ~(({{0}})::smallint))", DAE.IsSystem = "true" }},
		create operator System.iBitwiseNot(System.Integer) class "SQLDevice.SQLBitwiseNot" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iBitwiseNot(System.Short) class "SQLDevice.SQLBitwiseNot" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iShiftLeft(System.Long, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) << ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iShiftLeft(System.Integer, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) << ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iShiftLeft(System.Byte, System.Integer) static tags {{ Storage.TranslationString = "(((({{0}})::smallint) << ({{1}})) % 256)", DAE.IsSystem = "true" }},
		create operator System.iShiftLeft(System.Short, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) << ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iShiftRight(System.Byte, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) >> ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iShiftRight(System.Short, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) >> ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iShiftRight(System.Long, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) >> ({{1}}))", DAE.IsSystem = "true" }},
		create operator System.iShiftRight(System.Integer, System.Integer) static tags {{ Storage.TranslationString = "(({{0}}) >> ({{1}}))", DAE.IsSystem = "true" }},

		create operator System.IsNil(generic) class "SQLDevice.SQLIsNull" static tags {{ DAE.IsSystem = "true" }},
		create operator System.IsNotNil(generic) class "SQLDevice.SQLIsNotNull" static tags {{ DAE.IsSystem = "true" }},
		create operator System.IfNil(generic, generic) static tags {{ Storage.TranslationString = "case when {{0}} is null then {{1}} else {{0}} end", DAE.IsSystem = "true" }},

		create operator System.Count() class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Count" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Count(System.Scalar) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Count" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.Integer) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.Long) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Min(System.Money) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.DateTime) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.Date) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.Time) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Min(System.VersionNumber) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.Integer) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.Long) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.Money) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.DateTime) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.Time) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.Date) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Max(System.VersionNumber) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Sum(System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Sum" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Sum(System.Integer) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Sum" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Sum(System.Long) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Sum" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Sum(System.Money) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Sum" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Sum(System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Sum" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Avg(System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Avg" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Avg(System.Integer) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Avg" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Avg(System.Long) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Avg" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Avg(System.Money) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Avg" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Avg(System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Avg" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.All(System.Boolean) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.Any(System.Boolean) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }}, 

//		create operator System.DateTime() class "SQLDevice.SQLCallOperator" attributes{{"OperatorName" = "now"}} static tags {{ DAE.IsSystem = "true" }},
		create operator System.DateTime() static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "(now()::timestamp)" }},
		create operator System.Date() static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "(now()::date)" }},
		create operator System.Duration(System.TimeSpan) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Abs({{0}})" }},
		create operator System.Abs(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Abs" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Abs(System.Money) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Abs" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Abs(System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Abs" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Round(System.Decimal, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Round" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Round(System.Decimal) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Round({{0}}, 2)" }},
		create operator System.Round(System.Money, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Round" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Round(System.Money) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Round({{0}}, 2)" }},
		create operator System.Floor(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Floor" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Floor(System.Money) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Floor" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Ceiling(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Ceiling" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Ceiling(System.Money) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Ceiling" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Math.Random() class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Random" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Math.Log10(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Log" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Math.Ln(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Ln" }} static tags {{ DAE.IsSystem = "true" }},
		create operator System.Math.Exp(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Exp" }} static tags {{ DAE.IsSystem = "true" }},

		create operator System.iProject(table) class "SQLDevice.SQLProject" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iRemove(table) class "SQLDevice.SQLProject" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iRestrict(table, System.Boolean) class "SQLDevice.SQLRestrict" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iOrder(table) class "SQLDevice.SQLOrder" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iRename(table) class "SQLDevice.SQLRename" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iRename(row) class "SQLDevice.SQLRename" static tags {{ DAE.IsSystem = "true" }},
		create operator System.iRedefine(table) class "SQLDevice.SQLRedefine" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAdorn(table) class "SQLDevice.SQLAdorn" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iExtend(table) class "SQLDevice.SQLExtend" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iAggregate(table) class "SQLDevice.SQLAggregate" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iUnion(table, table) class "PostgreSQLDevice.PostgreSQLUnion" static tags {{ DAE.IsSystem = "true" }},
		create operator System.iJoin(table, table) class "SQLDevice.SQLJoin" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iLeftJoin(table, table) class "SQLDevice.SQLJoin" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iRightJoin(table, table) class "SQLDevice.SQLJoin" static tags {{ DAE.IsSystem = "true" }}, 
		create operator System.iHaving(table, table) class "SQLDevice.SQLJoin" static tags {{ DAE.IsSystem = "true" }},
		create operator System.iWithout(table, table) class "SQLDevice.SQLJoin" static tags {{ DAE.IsSystem = "true" }}
	}} ;
end;

begin
		alter device {0}
		{{
			create type System.String class "PostgreSQLDevice.PostgreSQLString" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.String(System.String) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.String.ReadValue(System.String) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }},
			create operator System.String.WriteValue(System.String, System.String) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }},
			create operator System.IsSpecial(System.String) class "SQLDevice.SQLScalarIsSpecialOperator" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iCompare(System.String, System.String) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iEqual(System.String, System.String) class "SQLDevice.SQLEqual" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iNotEqual(System.String, System.String) class "SQLDevice.SQLNotEqual" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iLess(System.String, System.String) class "SQLDevice.SQLLess" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iInclusiveLess(System.String, System.String) class "SQLDevice.SQLInclusiveLess" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iInclusiveGreater(System.String, System.String) class "SQLDevice.SQLInclusiveGreater" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iGreater(System.String, System.String) class "SQLDevice.SQLGreater" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iLike(System.String, System.String) class "SQLDevice.SQLLike" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.iLike(System.Name, System.String) class "SQLDevice.SQLLike" static tags {{ DAE.IsSystem = "true" }},
		    create operator System.Min(System.String) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Min" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Max(System.String) class "SQLDevice.SQLAggregateOperator" attributes {{ "OperatorName" = "Max" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.iAddition(System.String, System.String) static tags {{ Storage.TranslationString = "(({{0}})::varchar || ({{1}})::varchar)", DAE.IsSystem = "true" }},
			create operator System.CompareText(System.String, System.String) class "SQLDevice.SQLCompare" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Length(System.String) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "char_length" }} static tags {{ DAE.IsSystem = "true" }}, // Doesn't exclude trailing blanks
			create operator System.SubString(System.String, System.Integer, System.Integer) static tags {{ Storage.TranslationString = "SubString({{0}}, {{1}} + 1, {{2}})", DAE.IsSystem = "true" }}, 
			create operator System.SubString(System.String, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "SubString({{0}}, {{1}} + 1)" }},
			create operator System.iIndexer(System.String, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "SubString({{0}}, {{1}} + 1, 1)" }}, 
			create operator System.Insert(System.String, System.Integer, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "(SubString({{0}}, 1, {{1}}) || {{2}} || SubString({{0}}, {{1}} + 1))" }},
			//create operator System.Pos(System.String, System.String) class "PostgreSQLDevice.PostgreSQLPos" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Remove(System.String, System.Integer, System.Integer) static tags {{ Storage.TranslationString = "(SubString({{0}}, 1, {{1}}) || SubString({{0}}, {{1}} + {{2}} + 1))", DAE.IsSystem = "true" }},
			//create operator System.IndexOf(System.String, System.String) class "PostgreSQLDevice.PostgreSQLIndexOf" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Upper(System.String) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Upper" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Lower(System.String) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Lower" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.IsUpper(System.String, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "(case when (Ascii(SubString({{0}}, {{1}} + 1, 1)) = Ascii(Upper(SubString({{0}}, {{1}} + 1, 1)))) then 1 else 0 end)" }}, 
			create operator System.IsLower(System.String, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "(case when (Ascii(SubString({{0}}, {{1}} + 1, 1)) = Ascii(Lower(SubString({{0}}, {{1}} + 1, 1)))) then 1 else 0 end)" }}, 
			create operator System.TrimLeft(System.String) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "LTrim" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.TrimRight(System.String) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "RTrim" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.Trim(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "LTrim(RTrim({{0}} ))" }} ,
			create operator System.PadLeft(System.String,System.Integer) static tags {{ Storage.TranslationString = "(case when char_length({{0}}) >= {{1}} then {{0}} else lpad({{0}}, {{1}}) end)", DAE.IsSystem = "true" }},
			create operator System.PadLeft(System.String,System.Integer,System.String) static tags {{ Storage.TranslationString = "(case when char_length({{0}}) >= {{1}} then {{0}} else lpad({{0}}, {{1}}, {{2}}) end)", DAE.IsSystem = "true" }},
			create operator System.PadRight(System.String,System.Integer) static tags {{ Storage.TranslationString = "(case when char_length({{0}}) >= {{1}} then {{0}} else rpad({{0}}, {{1}}) end)", DAE.IsSystem = "true" }},
			create operator System.PadRight(System.String,System.Integer,System.String) static tags {{ Storage.TranslationString = "(case when char_length({{0}}) >= {{1}} then {{0}} else rpad({{0}}, {{1}}, {{2}}) end)", DAE.IsSystem = "true" }},
			create operator System.ToBoolean(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when (({{0}})::bool) then 1 else 0 end" }},
			create operator System.ToDecimal(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "Replace({{0}}, ',', '.')::numeric" }},
			create operator System.ToInteger(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::int" }},
			create operator System.ToByte(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
			create operator System.ToLong(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::bigint" }},
			create operator System.ToShort(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::smallint" }},
			create operator System.ToGuid(System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::uuid" }},

			create operator System.ToString(System.DateTime) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Date) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::date::varchar" }},
			create operator System.ToString(System.Time) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "substr(({{0}})::varchar, 12)" }},
			create operator System.ToString(System.Integer) static tags {{ DAE.IsSystem= "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Money) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Short) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Decimal) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Boolean) class "SQLDevice.SQLBooleanToString" static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.ToString(System.Byte) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Long) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "({{0}})::varchar" }},
			create operator System.ToString(System.Guid) static tags {{ Storage.TranslationString = "lower({{0}})::varchar", DAE.IsSystem = "true" }},

			create type SQLDevice.SQLText class "PostgreSQLDevice.PostgreSQLText" static tags {{ DAE.IsSystem = "true" }},
			create operator SQLDevice.SQLText(System.String) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }},
			create operator SQLDevice.SQLText.ReadValue(SQLDevice.SQLText) static tags {{ Storage.TranslationString = "cast({{0}} as varchar(8000))", DAE.IsSystem = "true" }},
			create operator SQLDevice.SQLText.WriteValue(SQLDevice.SQLText, System.String) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }},
			create operator SQLDevice.iLike(SQLDevice.SQLText, System.String) class "SQLDevice.SQLLike" static tags {{ DAE.IsSystem = "true" }}, 
			create operator SQLDevice.iIndexer(SQLDevice.SQLText, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "SubString({{0}}, {{1}} + 1, 1)" }},
			create operator SQLDevice.Length(SQLDevice.SQLText) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "char_length({{0}})" }},
			create operator SQLDevice.SubString(SQLDevice.SQLText, System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "SubString({{0}}, {{1}} + 1, {{2}})" }},
			create operator SQLDevice.SubString(SQLDevice.SQLText, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "SubString({{0}}, {{1}} + 1)" }},
			create operator SQLDevice.Pos(System.String, SQLDevice.SQLText) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "position({{0}} in {{1}}) - 1" }},
			create operator SQLDevice.IndexOf(SQLDevice.SQLText, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "position({{1}} in {{0}}) - 1" }},

            create type System.UserID static tags {{ DAE.IsSystem = "true" }},
		    create operator System.UserID(System.String) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		    create operator System.UserID.ReadValue(System.UserID) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		    create operator System.UserID.WriteValue(System.UserID, System.String) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }}, 

		    create type System.Name class "PostgreSQLDevice.PostgreSQLString" static tags {{ DAE.IsSystem = "true" }},
            create operator System.Name(System.String) class "SQLDevice.SQLScalarSelector" static tags {{ DAE.IsSystem = "true" }}, 
		    create operator System.Name.ReadValue(System.Name) class "SQLDevice.SQLScalarReadAccessor" static tags {{ DAE.IsSystem = "true" }}, 
		    create operator System.Name.WriteValue(System.Name, System.String) class "SQLDevice.SQLScalarWriteAccessor" static tags {{ DAE.IsSystem = "true" }} 
   
			
		}} ;
end;

begin
		
			alter device {0}
			{{
				create operator System.ToVersionNumber(System.String) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_StringToVersionNumber" }} static tags {{ DAE.IsSystem = "true" }},
				create operator System.ToString(System.VersionNumber) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberToString" }} static tags {{ DAE.IsSystem = "true" }} 
			}} ;
	
	
		alter device {0}
		{{
			create operator System.TimeSpan.ReadDay(System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSReadDay" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.WriteDay(System.TimeSpan, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSWriteDay" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.ReadHour(System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSReadHour" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.WriteHour(System.TimeSpan, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSWriteHour" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.ReadMinute(System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSReadMinute" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.WriteMinute(System.TimeSpan, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSWriteMinute" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.ReadSecond(System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSReadSecond" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.WriteSecond(System.TimeSpan, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSWriteSecond" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.ReadMillisecond(System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSReadMillisecond" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.TimeSpan.WriteMillisecond(System.TimeSpan, System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_TSWriteMillisecond" }} static tags {{ DAE.IsSystem = "true" }}, 

			create operator System.Time.WriteHour(System.Time, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteHour" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Time.WriteMinute(System.Time, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteMinute" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Time.WriteSecond(System.Time, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteSecond" }} static tags {{ DAE.IsSystem = "true" }}, 

			create operator System.Date(System.Integer, System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DateTimeSelector({{0}}, {{1}}, {{2}}, 0, 0, 0, 0)" }},
			create operator System.Date.WriteYear(System.Date, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteYear" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Date.WriteMonth(System.Date, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteMonth" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.Date.WriteDay(System.Date, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteDay" }} static tags {{ DAE.IsSystem = "true" }}, 

			create operator System.DateTime(System.Integer, System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DateTimeSelector({{0}}, {{1}}, {{2}}, 0, 0, 0, 0)" }},
			create operator System.DateTime(System.Integer, System.Integer, System.Integer, System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DateTimeSelector({{0}}, {{1}}, {{2}}, {{3}}, {{4}}, 0, 0)" }},
			create operator System.DateTime(System.Integer, System.Integer, System.Integer, System.Integer, System.Integer, System.Integer) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "DAE_DateTimeSelector({{0}}, {{1}}, {{2}}, {{3}}, {{4}}, {{5}}, 0)" }},
			create operator System.DateTime.WriteYear(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteYear" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.WriteMonth(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteMonth" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.WriteDay(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteDay" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.ReadHour(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTReadHour" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.WriteHour(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteHour" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.ReadMinute(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTReadMinute" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.WriteMinute(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteMinute" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.ReadSecond(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTReadSecond" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.DateTime.WriteSecond(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTWriteSecond" }} static tags {{ DAE.IsSystem = "true" }}, 

			create operator System.DatePart(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTDatePart" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.TimePart(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DTTimePart" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.DayOfYear(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DayOfYear" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.DayOfWeek(System.DateTime) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DayOfWeek" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.DaysInMonth(System.Integer, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_DaysInMonth" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.IsLeapYear(System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_IsLeapYear" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.AddMonths(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_AddMonths" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.AddMonths(System.Date, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_AddMonths" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.AddYears(System.DateTime, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_AddYears" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.AddYears(System.Date, System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_AddYears" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.MonthsBetween(System.DateTime, System.DateTime) static tags {{ Storage.TranslationString = "(((date_part('y', {{1}}) * 12) + date_part('month', {{1}})) - ((date_part('y', {{0}}) * 12) + date_part('month', {{0}})))", DAE.IsSystem = "true" }},
			create operator System.MonthsBetween(System.Date, System.Date) static tags {{ Storage.TranslationString = "(((date_part('y', {{1}}) * 12) + date_part('month', {{1}})) - ((date_part('y', {{0}}) * 12) + date_part('month', {{0}})))", DAE.IsSystem = "true" }},
			create operator System.YearsBetween(System.DateTime, System.DateTime) static tags {{ Storage.TranslationString = "(date_part('y', {{1}}) - date_part('y', {{0}}))", DAE.IsSystem = "true" }},
			create operator System.YearsBetween(System.Date, System.Date) static tags {{ Storage.TranslationString = "(date_part('y', {{1}}) - date_part('y', {{0}}))", DAE.IsSystem = "true" }},

			create operator System.Frac(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_Frac" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.Frac(System.Money) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_Frac" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.Truncate(System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Trunc" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.Truncate(System.Money) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "Trunc" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.Math.Factorial(System.Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_Factorial" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.Math.Log(System.Decimal, System.Decimal) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_LogB" }} static tags {{ DAE.IsSystem = "true" }},

			create operator System.VersionNumber(Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberMajorSelector" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber(Integer, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberMinorSelector" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber(Integer, Integer, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberRevisionSelector" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber(Integer, Integer, Integer, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberBuildSelector" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.ReadMajor(VersionNumber) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberMajorReadAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.WriteMajor(VersionNumber, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberMajorWriteAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.ReadMinor(VersionNumber) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberMinorReadAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.WriteMinor(VersionNumber, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberMinorWriteAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.ReadRevision(VersionNumber) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberRevisionReadAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.WriteRevision(VersionNumber, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberRevisionWriteAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.ReadBuild(VersionNumber) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberBuildReadAccessor" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.WriteBuild(VersionNumber, Integer) class "SQLDevice.SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberBuildWriteAccessor" }} static tags {{ DAE.IsSystem = "true" }}, 
			create operator System.VersionNumber.AsString(System.String) class "SQLCallOperator" attributes {{ "OperatorName" = "DAE_StringToVersionNumber" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.ReadAsString(System.VersionNumber) class "SQLCallOperator" attributes {{ "OperatorName" = "DAE_VersionNumberToString" }} static tags {{ DAE.IsSystem = "true" }},
			create operator System.VersionNumber.WriteAsString(System.VersionNumber, System.String) static tags {{ Storage.TranslationString = "DAE_StringToVersionNumber( {{1}} )", DAE.IsSystem = "true" }},
			create operator System.Compatible(System.VersionNumber, System.VersionNumber) static tags {{ Storage.TranslationString = "case when( select	case when position('*' in {{0}} ) >= 0 then SubString( {{0}}, 0, position('*' in {{0}} )) else SubString( {{0}}, 0, char_length( {{0}} )) end ) = (	select case	when position('*' in {{0}} ) >= 0 then SubString( {{1}}, 0, position('*' in {{0}} )) else SubString( {{1}}, 0, char_length( {{0}} )) end ) then	1 else 0 end", DAE.IsSystem = "true" }},

			create operator System.LastIndexOf(System.String, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when position({{1}} in {{0}}) = 0 then -1 else char_length({{0}}) - (position(DAE_Reverse({{1}}) in DAE_Reverse({{0}})) + char_length({{1}}) - 1) end" }},
			create operator System.LastPos(System.String, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when position({{0}} in {{1}}) = 0 then -1 else char_length({{1}}) - (position(DAE_Reverse({{0}}) in DAE_Reverse({{1}})) + char_length({{0}}) - 1) end" }},
			create operator System.Replace(System.String, System.String, System.String) class "SQLDevice.SQLCallOperator" attributes{{"OperatorName" = "Replace"}} static tags {{ DAE.IsSystem = "true" }},
			create operator System.StartsWith(System.String, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when (char_length({{1}}) <> 0 and position({{1}} in {{0}}) = 1) then 1 else 0 end" }},
			create operator System.EndsWith(System.String, System.String) static tags {{ DAE.IsSystem = "true", Storage.TranslationString = "case when (char_length({{1}}) <> 0 and position({{1}} in {{0}}) = char_length({{0}}) - char_length({{1}}) + 1) then 1 else 0 end" }},
			create operator System.IsDigit(System.String, System.Integer) static tags {{ Storage.TranslationString = "case when (substring({{0}}, {{1}} + 1, 1) ~ '^[0-9]+$') then 1 else 0 end", DAE.IsSystem = "true" }},
			create operator System.IsDigit(System.String) static tags {{ Storage.TranslationString = "case when ({{0}} ~ '^[0-9]+$') then 1 else 0 end", DAE.IsSystem = "true" }},
			create operator System.IsLetter(System.String, System.Integer) static tags {{ Storage.TranslationString = "case when (upper(substring({{0}}, {{1}} + 1, 1)) ~ '^[A-ZÃÃÃ]+$') then 1 else 0 end", DAE.IsSystem = "true" }},
			create operator System.IsLetter(System.String) static tags {{ Storage.TranslationString = "case when (upper({{0}}) ~ '^[A-ZÃÃÃ]+$') then 1 else 0 end", DAE.IsSystem = "true" }},
			create operator System.IsLetterOrDigit(System.String, System.Integer) static tags {{ Storage.TranslationString = "case when (upper(substring({{0}}, {{1}} + 1, 1)) ~ '^[0-9A-ZÃÃÃ]+$') then 1 else 0 end", DAE.IsSystem = "true" }},
			create operator System.IsLetterOrDigit(System.String) static tags {{ Storage.TranslationString = "case when (upper({{0}}) ~ '^[0-9A-ZÃÃÃ]+$') then 1 else 0 end", DAE.IsSystem = "true" }}


		}} ;
end;
