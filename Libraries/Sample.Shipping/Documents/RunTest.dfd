<?xml version="1.0" encoding="utf-16"?>
<interface xmlns:bop="www.alphora.com/schemas/bop">
  <column bop:name="Column">
    <trigger action="RunTest" bop:name="RunTestTrigger" />
    <statictext text="Stopped" bop:name="TestStatus" />
  </column>
  <scriptaction script="#unit&#xD;&#xA;using System.Windows.Forms;&#xD;&#xA;using DAE = Alphora.Dataphor.DAE;&#xD;&#xA;#endunit&#xD;&#xA;&#xD;&#xA;if (TestStatus.Text == &quot;Stopped&quot;)&#xD;&#xA;{&#xD;&#xA;	TestStatus.Text = &quot;Running...&quot;;&#xD;&#xA;	try&#xD;&#xA;	{&#xD;&#xA;		Application.DoEvents();&#xD;&#xA;		Random LRandom = new Random();&#xD;&#xA;		while (Host.Session.Evaluate(&quot;select exists(TestActive)&quot;).AsBoolean)&#xD;&#xA;		{&#xD;&#xA;			System.Threading.Thread.Sleep(100);&#xD;&#xA;			Application.DoEvents();&#xD;&#xA;			try&#xD;&#xA;			{&#xD;&#xA;				((IAction)Tests.Children[LRandom.Next(Tests.Children.Count)]).Execute();&#xD;&#xA;			}&#xD;&#xA;			catch (Exception E)&#xD;&#xA;			{&#xD;&#xA;				Host.Session.Execute(String.Format(&quot;LogError('{0}')&quot;, E.Message.Replace(&quot;'&quot;, &quot;''&quot;)));&#xD;&#xA;			}&#xD;&#xA;		};&#xD;&#xA;	}&#xD;&#xA;	finally&#xD;&#xA;	{&#xD;&#xA;		TestStatus.Text = &quot;Stopped&quot;;&#xD;&#xA;	}&#xD;&#xA;}&#xD;&#xA;" text="Run Test" bop:name="RunTest" />
  <blockaction bop:name="Tests">
    <datascriptaction script="AddCustomer();" bop:name="AddCustomerTest" />
    <datascriptaction script="EditCustomer();" bop:name="EditCustomerTest" />
    <datascriptaction script="SellItems();" bop:name="SellItemsTest" />
  </blockaction>
  <scriptaction script="#unit&#xD;&#xA;using System.Windows.Forms;&#xD;&#xA;using DAE = Alphora.Dataphor.DAE;&#xD;&#xA;#endunit&#xD;&#xA;&#xD;&#xA;IFormInterface LForm = Host.Session.LoadForm(Action, &quot;Derive('CustomerDetail', 'Browse', '', '', true)&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;	LForm.Show();&#xD;&#xA;&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	System.Threading.Thread.Sleep(500);&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;&#xD;&#xA;	DAE.Schema.RowType LRowType = new DAE.Schema.RowType();&#xD;&#xA;	LRowType.Columns.Add(new DAE.Schema.Column(&quot;Main.Name&quot;, (LForm.MainSource.DataView.TableType.Columns[&quot;Main.Name&quot;]).DataType));&#xD;&#xA;	using (DAE.Runtime.Data.Row LRow = new DAE.Runtime.Data.Row(LForm.MainSource.DataView.Process, LRowType))&#xD;&#xA;	{&#xD;&#xA;		LRow[&quot;Main.Name&quot;].AsString = Host.Session.Evaluate(&quot;RandomProperName()&quot;).AsString;&#xD;&#xA;		LForm.MainSource.FindNearest(LRow);&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	System.Threading.Thread.Sleep(500);&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	&#xD;&#xA;	LForm.Close(CloseBehavior.AcceptOrClose);&#xD;&#xA;}&#xD;&#xA;catch&#xD;&#xA;{&#xD;&#xA;	LForm.Dispose();&#xD;&#xA;	throw;&#xD;&#xA;}&#xD;&#xA;" bop:name="FindCustomerUITest" />
  <datascriptaction script="var LContactID := ContactID(GetNextGenerator(&quot;Shipping.Contact.ID&quot;));&#xD;&#xA;var LATID := BeginApplicationTransaction();&#xD;&#xA;JoinApplicationTransaction(LATID, false);&#xD;&#xA;var LPhoneTypeID := RandomPhoneType();&#xD;&#xA;var LStateID := RandomState();&#xD;&#xA;var LZipCode := RandomZipCode();&#xD;&#xA;insert table { row { LContactID ID, RandomProperName() Name, LPhoneTypeID Primary_PhoneType_ID } } into Contact;&#xD;&#xA;insert table { row { LContactID Contact_ID, LPhoneTypeID PhoneType_ID, RandomPhone() Phone } } into ContactPhone;&#xD;&#xA;insert table { row { LContactID Contact_ID, 1 Number, RandomStreet() Street, RandomCity() City, LStateID State_ID, LZipCode ZipCode } } into ContactAddress;&#xD;&#xA;insert table { row { LContactID ID, 1 Shipping_Address_Number, 1 Billing_Address_Number } } into Customer;&#xD;&#xA;if Random(2) = 0 then&#xD;&#xA;	insert table { row { LContactID Contact_ID, Notes(RandomName(Random(25, 75))) Notes } } into ContactNotes;&#xD;&#xA;LeaveApplicationTransaction();&#xD;&#xA;CommitApplicationTransaction(LATID);" bop:name="AddCustomerATTest" />
  <scriptaction script="#unit&#xD;&#xA;using System.Windows.Forms;&#xD;&#xA;using DAE = Alphora.Dataphor.DAE;&#xD;&#xA;#endunit&#xD;&#xA;&#xD;&#xA;IFormInterface LForm = Host.Session.LoadForm(Action, &quot;Form('IBAS.FARS.Harris', 'Payment.Entry')&quot;);&#xD;&#xA;try&#xD;&#xA;{&#xD;&#xA;	LForm.Show();&#xD;&#xA;&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	System.Threading.Thread.Sleep(500);&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	&#xD;&#xA;	LForm.MainSource[&quot;Main.Account_ID&quot;].AsString = Host.Session.Evaluate(&quot;select (AccountBrowse return 1 by { InvoiceTotal desc, ID })[].ID&quot;).AsString;&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	System.Threading.Thread.Sleep(500);&#xD;&#xA;	&#xD;&#xA;	ISource LPaymentSource = (LForm.FindNode(&quot;PaymentTypeFrame&quot;) as IFrame).FrameInterfaceNode.MainSource;&#xD;&#xA;	LPaymentSource.Edit();&#xD;&#xA;	LPaymentSource[&quot;Main.CheckNumber&quot;].AsString = &quot;1234&quot;;&#xD;&#xA;	Application.DoEvents();&#xD;&#xA;	System.Threading.Thread.Sleep(500);&#xD;&#xA;&#xD;&#xA;	LForm.Close(CloseBehavior.AcceptOrClose);&#xD;&#xA;}&#xD;&#xA;catch&#xD;&#xA;{&#xD;&#xA;	LForm.Dispose();&#xD;&#xA;	throw;&#xD;&#xA;}&#xD;&#xA;" bop:name="AddSiteTest" />
</interface>