<?xml version="1.0" encoding="utf-16"?>
<interface xmlns:bop="www.alphora.com/schemas/bop" text="Multi-Table Hierarchy">
  <source expression="MTHN left join MTHL" beginscript="// Create a tables for Multi-Table Hierarchy&#xD;&#xA;&#xD;&#xA;create session table MTHN&#xD;&#xA;{&#xD;&#xA;	ID : Byte { default GetNextGenerator(&quot;MTHN.ID&quot;) }&#xD;&#xA;	 tags { Frontend.Width = &quot;5&quot;, Frontend.ReadOnly = &quot;true&quot; },&#xD;&#xA;	Description : String&#xD;&#xA;	 tags { Frontend.Width = &quot;20&quot;, Frontend.Preview.Include = &quot;true&quot; },&#xD;&#xA;	key { ID }&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;create session table MTHL&#xD;&#xA;{&#xD;&#xA;	ID : Byte&#xD;&#xA;	 tags { Frontend.Width = &quot;5&quot; },&#xD;&#xA;	Parent_ID : Byte&#xD;&#xA;	 tags { Frontend.Width = &quot;5&quot;, Frontend.Add.ReadOnly = &quot;true&quot; },&#xD;&#xA;	key { ID },&#xD;&#xA;	reference MTHL_MTHN_ID { ID } references MTHN { ID },&#xD;&#xA;	reference MTHL_MTHN_Parent_ID { Parent_ID } references MTHN { ID }&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;MTHN := table&#xD;&#xA; {&#xD;&#xA;	row { 1 ID, &quot;SUV&quot; Description },&#xD;&#xA;	row { 2, &quot;Chevy&quot; },&#xD;&#xA;	row { 3, &quot;Avalanche&quot; },&#xD;&#xA;	row { 4, &quot;1500&quot; },&#xD;&#xA;	row { 5, &quot;2500&quot; },&#xD;&#xA;	row { 6, &quot;Blazer&quot; },&#xD;&#xA;	row { 7, &quot;2 Door&quot; },&#xD;&#xA;	row { 8, &quot;Equinox&quot; },&#xD;&#xA;	row { 9, &quot;LS&quot; },&#xD;&#xA;	row { 10, &quot;LT&quot; },&#xD;&#xA;	row { 11, &quot;Suburban&quot; },&#xD;&#xA;	row { 12, &quot;Half Ton&quot; },&#xD;&#xA;	row { 13, &quot;Three Quarter Ton&quot; },&#xD;&#xA;	row { 14, &quot;Tahoe&quot; },&#xD;&#xA;	row { 15, &quot;LS&quot; },&#xD;&#xA;	row { 16, &quot;Z71&quot; },&#xD;&#xA;	row { 17, &quot;LT&quot; },&#xD;&#xA;	row { 18, &quot;TrailBlazer&quot; },&#xD;&#xA;	row { 19, &quot;5 Passenger&quot; },&#xD;&#xA;	row { 20, &quot;7 Passenger EXT&quot; },&#xD;&#xA;	row { 21, &quot;Ford&quot; },&#xD;&#xA;	row { 22, &quot;Escape&quot; },&#xD;&#xA;	row { 23, &quot;XLS&quot; },&#xD;&#xA;	row { 24, &quot;XLT&quot; },&#xD;&#xA;	row { 25, &quot;Limited&quot; },&#xD;&#xA;	row { 26, &quot;Excursion&quot; },&#xD;&#xA;	row { 27, &quot;XLS&quot; },&#xD;&#xA;	row { 28, &quot;XLT&quot; },&#xD;&#xA;	row { 29, &quot;Eddie Bauer&quot; },&#xD;&#xA;	row { 30, &quot;Limited&quot; },&#xD;&#xA;	row { 31, &quot;Expedition&quot; },&#xD;&#xA;	row { 32, &quot;XLS&quot; },&#xD;&#xA;	row { 33, &quot;XLT&quot; },&#xD;&#xA;	row { 34, &quot;NBX&quot; },&#xD;&#xA;	row { 35, &quot;Eddie Bauer&quot; },&#xD;&#xA;	row { 36, &quot;Explorer&quot; },&#xD;&#xA;	row { 37, &quot;XLS&quot; },&#xD;&#xA;	row { 38, &quot;XLT&quot; },&#xD;&#xA;	row { 39, &quot;NBX&quot; },&#xD;&#xA;	row { 40, &quot;Eddie Bauer&quot; },&#xD;&#xA;	row { 41, &quot;Limited&quot; },&#xD;&#xA;	row { 42, &quot;Explorer Sport Trac&quot; },&#xD;&#xA;	row { 43, &quot;XLS&quot; },&#xD;&#xA;	row { 44, &quot;XLT&quot; },&#xD;&#xA;	row { 45, &quot;XLT Premium&quot; },&#xD;&#xA;	row { 46, &quot;Adrenalin&quot; }&#xD;&#xA; };&#xD;&#xA;&#xD;&#xA;EnsureGenerators();&#xD;&#xA;&#xD;&#xA;delete Generators where ID = &quot;MTHN.ID&quot;;&#xD;&#xA;&#xD;&#xA;insert table&#xD;&#xA;{&#xD;&#xA; row { &quot;MTHN.ID&quot; ID, 47 NextKey }&#xD;&#xA;} into Generators;&#xD;&#xA;&#xD;&#xA;MTHL := table&#xD;&#xA; {&#xD;&#xA;	row { 2 ID, 1 Parent_ID },&#xD;&#xA;	row { 3, 2 },&#xD;&#xA;	row { 4, 3 },&#xD;&#xA;	row { 5, 3 },&#xD;&#xA;	row { 6, 2 },&#xD;&#xA;	row { 7, 6 },&#xD;&#xA;	row { 8, 2 },&#xD;&#xA;	row { 9, 8 },&#xD;&#xA;	row { 10, 8 },&#xD;&#xA;	row { 11, 2 },&#xD;&#xA;	row { 12, 11 },&#xD;&#xA;	row { 13, 11 },&#xD;&#xA;	row { 14, 2 },&#xD;&#xA;	row { 15, 14 },&#xD;&#xA;	row { 16, 14 },&#xD;&#xA;	row { 17, 14 },&#xD;&#xA;	row { 18, 2 },&#xD;&#xA;	row { 19, 18 },&#xD;&#xA;	row { 20, 18 },&#xD;&#xA;	row { 21, 1 },&#xD;&#xA;	row { 22, 21 },&#xD;&#xA;	row { 23, 22 },&#xD;&#xA;	row { 24, 22 },&#xD;&#xA;	row { 25, 22 },&#xD;&#xA;	row { 26, 21 },&#xD;&#xA;	row { 27, 26 },&#xD;&#xA;	row { 28, 26 },&#xD;&#xA;	row { 29, 26 },&#xD;&#xA;	row { 30, 26 },&#xD;&#xA;	row { 31, 21 },&#xD;&#xA;	row { 32, 31 },&#xD;&#xA;	row { 33, 31 },&#xD;&#xA;	row { 34, 31 },&#xD;&#xA;	row { 35, 31 },&#xD;&#xA;	row { 36, 21 },&#xD;&#xA;	row { 37, 36 },&#xD;&#xA;	row { 38, 36 },&#xD;&#xA;	row { 39, 36 },&#xD;&#xA;	row { 40, 36 },&#xD;&#xA;	row { 41, 36 },&#xD;&#xA;	row { 42, 21 },&#xD;&#xA;	row { 43, 42 },&#xD;&#xA;	row { 44, 42 },&#xD;&#xA;	row { 45, 42 },&#xD;&#xA;	row { 46, 42 }&#xD;&#xA; };&#xD;&#xA;" endscript="drop table MTHL;&#xD;&#xA;drop table MTHN;&#xD;&#xA;delete Generators where ID = &quot;MTHN.ID&quot;;" bop:name="MTH" />
  <showformaction sourcelinktype="Detail" sourcelink.masterkeynames="ID" sourcelink.detailkeynames="Main.Parent_ID" sourcelink.source="MTH" document="Derive('MTHN left join MTHL', 'Add')" mode="Insert" text="&amp;Add..." hint="Add a new row." image="Image('Frontend', 'Image.Add')" bop:name="AddAction" />
  <showformaction sourcelinktype="Detail" sourcelink.masterkeynames="ID" sourcelink.detailkeynames="Main.ID" sourcelink.source="MTH" document="Derive('MTHN left join MTHL', 'Edit')" mode="Edit" text="&amp;Edit..." hint="Edit the current row." image="Image('Frontend', 'Image.Edit')" bop:name="EditAction" />
  <showformaction sourcelinktype="Detail" sourcelink.masterkeynames="ID" sourcelink.detailkeynames="Main.ID" sourcelink.source="MTH" document="Derive('MTHN left join MTHL', 'Delete')" mode="Delete" text="&amp;Delete..." hint="Delete the current row." image="Image('Frontend', 'Image.Delete')" bop:name="DeleteAction" />
  <scriptaction script="Tree.RootExpression&#xD;&#xA; = &quot;MTHN where ID = &quot;&#xD;&#xA; + MTH.DataView.Fields[&quot;ID&quot;].AsString &#xD;&#xA; + &quot; left join MTHL&quot;;&#xD;&#xA;MTH.Expression =&#xD;&#xA; &quot;(MTHN left join MTHL) explode by Parent_ID = parent ID where ID = &quot;&#xD;&#xA; + MTH.DataView.Fields[&quot;ID&quot;].AsString&#xD;&#xA; + &quot; adorn { key { ID } } remove { sequence }&quot;;&#xD;&#xA;" text="Set As Root" bop:name="SetAsRootAction" />
  <scriptaction script="if (!MTH.DataView.Fields[&quot;Parent_ID&quot;].IsNil)&#xD;&#xA;{&#xD;&#xA;  Tree.RootExpression&#xD;&#xA;   = &quot;MTHN where ID = &quot;&#xD;&#xA;   + MTH.DataView.Fields[&quot;Parent_ID&quot;].AsString&#xD;&#xA;   + &quot; left join MTHL&quot;;&#xD;&#xA;  MTH.Expression =&#xD;&#xA;   &quot;(MTHN left join MTHL) explode by Parent_ID = parent ID where ID = &quot;&#xD;&#xA;   + MTH.DataView.Fields[&quot;Parent_ID&quot;].AsString&#xD;&#xA;   + &quot; adorn { key { ID } } remove { sequence }&quot;;&#xD;&#xA;};" text="Set Parent As Root" bop:name="SetParentAsRootAction" />
  <blockaction text="Restore Root" bop:name="RestoreRootAction">
    <setpropertyaction node="Tree" membername="RootExpression" value="MTHN left join MTHL where Parent_ID.IsNil();" bop:name="SetTreeRootExpression" />
    <setpropertyaction node="MTH" membername="Expression" value="MTHN left join MTHL" bop:name="SetSourceExpression" />
  </blockaction>
  <row bop:name="RootRow">
    <group title="Sample11MTH (Multi-Table Hierarchy)" bop:name="Group1">
      <column bop:name="Column1">
        <row bop:name="Row">
          <tree columnname="Description" rootexpression="MTHN left join MTHL where Parent_ID.IsNil();" childexpression="(MTHN join MTHL) where Parent_ID = ACurrentID" parentexpression="MTHN left join MTHL where ID = MTHL[ACurrentID].Parent_ID" width="21" height="15" source="MTH" bop:name="Tree" />
          <column bop:name="Buttons">
            <trigger action="AddAction" bop:name="Add" />
            <trigger action="EditAction" bop:name="Edit" />
            <trigger action="DeleteAction" bop:name="Delete" />
            <trigger action="SetAsRootAction" margintop="20" bop:name="SetAsRoot" />
            <trigger action="SetParentAsRootAction" bop:name="SetParentAsRoot" />
            <trigger action="RestoreRootAction" bop:name="RestoreRoot" />
          </column>
          <grid source="MTH" readonly="True" bop:name="Grid">
            <textcolumn columnname="ID" width="4" bop:name="GridID" />
            <textcolumn columnname="Description" width="16" bop:name="GridDescription" />
            <textcolumn columnname="Parent_ID" width="5" bop:name="GridParent_ID" />
          </grid>
        </row>
        <staticimage image="Image('Sample.Components', 'TreeMTHImage')" bop:name="Diagram" />
      </column>
    </group>
    <frame document="Form('Sample.Components', 'Sample11Docs')" bop:name="Frame1" />
  </row>
</interface>