/*
	Dataphor
	Â© Copyright 2000-2008 Alphora
	This file is licensed under a modified BSD-license which can be found here: http://dataphor.org/dataphor_license.txt
*/
// System operator maps, Case insensitive

create device TestDevice
{
	operator System.TimeSpan.WriteDays(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteDays", 
	operator iBitwiseOr(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseOr", 
	operator iBitwiseAnd(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseAnd", 
	operator iBitwiseAnd(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseAnd", 
	operator iNotEqual(const System.Long, const System.Long) class "SQLDevice.SQLNotEqual", 
	operator iCompare(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLCompare", 
	operator iNotEqual(const System.IString, const System.IString) class "SQLDevice.SQLNotEqual", 
	operator iDiv(const System.Decimal, const System.Decimal) class "SQLDevice.SQLDiv", 
	operator iCompare(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCompare", 
	operator iNotEqual(const System.Byte, const System.Byte) class "SQLDevice.SQLNotEqual", 
	operator iInclusiveGreater(const System.Short, const System.Short) class "SQLDevice.SQLInclusiveGreater", 
	operator iCompare(const System.Money, const System.Money) class "SQLDevice.SQLCompare", 
	operator System.Max(const System.IString) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iNotEqual(const System.Guid, const System.Guid) class "SQLDevice.SQLNotEqual", 
	operator iEqual(const System.Boolean, const System.Boolean) class "SQLDevice.SQLEqual", 
	operator System.Sum(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iMultiplication(const System.Integer, const System.TimeSpan) class "SQLDevice.SQLMultiplication", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan3Operands", 
	operator System.TimeSpan(const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan2Operands", 
	operator iMod(const System.Long, const System.Long) class "SQLDevice.SQLMod", 
	operator iMultiplication(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator iInclusiveGreater(const System.Byte, const System.Byte) class "SQLDevice.SQLInclusiveGreater", 
	operator iBitwiseOr(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseOr", 
	operator System.Count(const System.Scalar) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Count"}, 
	operator iInclusiveLess(const System.Decimal, const System.Decimal) class "SQLDevice.SQLInclusiveLess", 
	operator iAnd(const System.Boolean, const System.Boolean) class "SQLDevice.SQLAnd", 
	operator iCompare(const System.Guid, const System.Guid) class "SQLDevice.SQLCompare", 
	operator iNotEqual(const System.Money, const System.Money) class "SQLDevice.SQLNotEqual", 
	operator iDivision(const System.Money, const System.Integer) class "SQLDevice.SQLDivision", 
	operator iInclusiveLess(const System.Byte, const System.Byte) class "SQLDevice.SQLInclusiveLess", 
	operator iNotEqual(const System.Short, const System.Short) class "SQLDevice.SQLNotEqual", 
	operator iCompare(const System.Boolean, const System.Boolean) class "SQLDevice.SQLCompare", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime3Operands", 
	operator System.Sum(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iCompare(const System.Long, const System.Long) class "SQLDevice.SQLCompare", 
	operator System.TimeSpan.Time(const System.Integer) class "SQLDevice.SQLTimeSpanTime1Operand", 
	operator iExists(table) class "SQLDevice.SQLExists", 
	operator iMultiplication(const System.Decimal, const System.Money) class "SQLDevice.SQLMultiplication", 
	operator iInclusiveLess(const System.IString, const System.IString) class "SQLDevice.SQLInclusiveLess", 
	operator iLess(const System.Integer, const System.Integer) class "SQLDevice.SQLLess", 
	operator iCompare(const System.Byte, const System.Byte) class "SQLDevice.SQLCompare", 
	operator iEqual(const System.Short, const System.Short) class "SQLDevice.SQLEqual", 
	operator iMultiplication(const System.Long, const System.Long) class "SQLDevice.SQLMultiplication", 
	operator iMultiplication(const System.Money, const System.Decimal) class "SQLDevice.SQLMultiplication", 
	operator iDiv(const System.Integer, const System.Integer) class "SQLDevice.SQLDivision", 
	operator iCompare(const System.Short, const System.Short) class "SQLDevice.SQLCompare", 
	operator iBitwiseXor(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseXor", 
	operator iInclusiveGreater(const System.Integer, const System.Integer) class "SQLDevice.SQLInclusiveGreater", 
	operator System.Min(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iNegate(const System.Short) class "SQLDevice.SQLNegate", 
	operator System.Max(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iInclusiveGreater(const System.Decimal, const System.Decimal) class "SQLDevice.SQLInclusiveGreater", 
	operator iMod(const System.Byte, const System.Byte) class "SQLDevice.SQLMod", 
	operator iBitwiseOr(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseOr", 
	operator iInclusiveGreater(const System.Long, const System.Long) class "SQLDevice.SQLInclusiveGreater", 
	operator iEqual(const System.IString, const System.IString) class "SQLDevice.SQLEqual", 
	operator iInclusiveGreater(const System.Boolean, const System.Boolean) class "SQLDevice.SQLInclusiveGreater", 
	operator iLess(const System.Long, const System.Long) class "SQLDevice.SQLLess", 
	operator iLike(const System.IString, const System.IString) class "SQLDevice.SQLLike", 
	operator System.TimeSpan.Hours(const System.Decimal) class "SQLDevice.SQLTimeSpanHours", 
	operator iNotEqual(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLNotEqual", 
	operator System.TimeSpan.WriteSeconds(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteSeconds", 
	operator iLess(const System.Guid, const System.Guid) class "SQLDevice.SQLLess", 
	operator iCompare(const System.IString, const System.IString) class "SQLDevice.SQLCompare", 
	operator System.TimeSpan.ReadHours(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadHours", 
	operator System.IsNull(const System.Alpha) class "SQLDevice.SQLIsNull", 
	operator iDivision(const System.Decimal, const System.Decimal) class "SQLDevice.SQLDivision", 
	operator iLess(const System.Boolean, const System.Boolean) class "SQLDevice.SQLLess", 
	operator iMod(const System.Integer, const System.Integer) class "SQLDevice.SQLMod", 
	operator iMultiplication(const System.Money, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator iGreater(const System.Byte, const System.Byte) class "SQLDevice.SQLGreater", 
	operator iDivision(const System.Byte, const System.Byte) class "SQLDevice.SQLIntegerDivision", 
	operator System.AddTicks(const System.TimeSpan, const System.Long) class "SQLDevice.SQLTimeSpanAddTicks", 
	operator System.Max(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iAddition(const System.Decimal, const System.Decimal) class "SQLDevice.SQLAddition", 
	operator iInclusiveLess(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLInclusiveLess", 
	operator iInclusiveLess(const System.Long, const System.Long) class "SQLDevice.SQLInclusiveLess", 
	operator System.TimeSpan.WriteMinutes(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteMinutes", 
	operator iEqual(const System.Decimal, const System.Decimal) class "SQLDevice.SQLEqual", 
	operator iDiv(const System.Byte, const System.Byte) class "SQLDevice.SQLDivision", 
	operator System.IfNull(const System.Alpha, const System.Alpha) class "SQLDevice.SQLIfNull", 
	operator iIn(const System.Scalar, const list(System.Alpha)) class "SQLDevice.SQLIn", 
	operator iInclusiveLess(const System.Boolean, const System.Boolean) class "SQLDevice.SQLInclusiveLess", 
	operator iSubtraction(const System.Long, const System.Long) class "SQLDevice.SQLSubtraction", 
	operator iLess(const System.IString, const System.IString) class "SQLDevice.SQLLess", 
	operator System.Duration(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iGreater(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLGreater", 
	operator iDivision(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLIntegerDivision", 
	operator iGreater(const System.Money, const System.Money) class "SQLDevice.SQLGreater", 
	operator iBitwiseXor(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseXor", 
	operator iNegate(const System.Long) class "SQLDevice.SQLNegate", 
	operator iGreater(const System.Boolean, const System.Boolean) class "SQLDevice.SQLGreater", 
	operator iMultiplication(const System.Byte, const System.Byte) class "SQLDevice.SQLMultiplication", 
	operator iNot(const System.Boolean) class "SQLDevice.SQLNot", 
	operator System.Count() class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Count"}, 
	operator iBitwiseOr(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseOr", 
	operator iAddition(const System.Byte, const System.Byte) class "SQLDevice.SQLAddition", 
	operator iBitwiseXor(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseXor", 
	operator iEqual(const System.Integer, const System.Integer) class "SQLDevice.SQLEqual", 
	operator iSubtraction(const System.Short, const System.Short) class "SQLDevice.SQLSubtraction", 
	operator iGreater(const System.Long, const System.Long) class "SQLDevice.SQLGreater", 
	operator iShiftRight(const System.Byte, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator System.TimeSpan.ReadTicks(const System.TimeSpan) class "SQLDevice.SQLScalarReadAccessor", 
	operator iDivision(const System.Long, const System.Long) class "SQLDevice.SQLIntegerDivision", 
	operator iMultiplication(const System.Integer, const System.Money) class "SQLDevice.SQLMultiplication", 
	operator System.Min(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iBitwiseNot(const System.Long) class "SQLDevice.SQLBitwiseNot", 
	operator iIn(const System.Scalar, const table) class "SQLDevice.SQLIn", 
	operator System.TimeSpan(const System.Integer) class "SQLDevice.SQLTimeSpan1Operand", 
	operator System.TimeSpan.ReadDays(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadDays", 
	operator iBitwiseNot(const System.Byte) class "SQLDevice.SQLBitwiseNot", 
	operator iLess(const System.Money, const System.Money) class "SQLDevice.SQLLess", 
	operator iShiftRight(const System.Short, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iInclusiveGreater(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLInclusiveGreater", 
	operator System.Min(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iShiftLeft(const System.Long, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iExists(presentation) class "SQLDevice.SQLExists", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan5Operands", 
	operator System.TimeSpan.Seconds(const System.Decimal) class "SQLDevice.SQLTimeSpanSeconds", 
	operator iInclusiveGreater(const System.IString, const System.IString) class "SQLDevice.SQLInclusiveGreater", 
	operator iMultiplication(const System.Decimal, const System.Decimal) class "SQLDevice.SQLMultiplication", 
	operator iMultiplication(const System.Integer, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator System.Max(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime2Operands", 
	operator iNotEqual(const System.Boolean, const System.Boolean) class "SQLDevice.SQLNotEqual", 
	operator System.TimeSpan.ReadMinutes(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMinutes", 
	operator iDivision(const System.Integer, const System.Integer) class "SQLDevice.SQLIntegerDivision", 
	operator iAddition(const System.Long, const System.Long) class "SQLDevice.SQLAddition", 
	operator iBitwiseNot(const System.Integer) class "SQLDevice.SQLBitwiseNot", 
	operator iAddition(const System.Money, const System.Money) class "SQLDevice.SQLAddition", 
	operator iInclusiveGreater(const System.Money, const System.Money) class "SQLDevice.SQLInclusiveGreater", 
	operator iLess(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLLess", 
	operator System.Avg(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iNotEqual(const System.Decimal, const System.Decimal) class "SQLDevice.SQLNotEqual", 
	operator iShiftRight(const System.Long, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iSubtraction(const System.Byte, const System.Byte) class "SQLDevice.SQLSubtraction", 
	operator iInclusiveLess(const System.Guid, const System.Guid) class "SQLDevice.SQLInclusiveLess", 
	operator iNotEqual(const System.Integer, const System.Integer) class "SQLDevice.SQLNotEqual", 
	operator iShiftLeft(const System.Integer, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iDiv(const System.Long, const System.Long) class "SQLDevice.SQLDivision", 
	operator System.TimeSpan.WriteTicks(const System.TimeSpan, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iShiftRight(const System.Integer, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iEqual(const System.Byte, const System.Byte) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.ReadSeconds(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadSeconds", 
	operator iGreater(const System.IString, const System.IString) class "SQLDevice.SQLGreater", 
	operator iInclusiveLess(const System.Short, const System.Short) class "SQLDevice.SQLInclusiveLess", 
	operator iBitwiseAnd(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseAnd", 
	operator iEqual(const System.Long, const System.Long) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.Minutes(const System.Decimal) class "SQLDevice.SQLTimeSpanMinutes", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan4Operands", 
	operator System.TimeSpan.Ticks(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator iLess(const System.Decimal, const System.Decimal) class "SQLDevice.SQLLess", 
	operator iCompare(const System.Integer, const System.Integer) class "SQLDevice.SQLCompare", 
	operator iBitwiseAnd(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseAnd", 
	operator iLess(const System.Short, const System.Short) class "SQLDevice.SQLLess", 
	operator System.TimeSpan.Days(const System.Decimal) class "SQLDevice.SQLTimeSpanDays", 
	operator iBitwiseXor(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseXor", 
	operator iNegate(const System.Integer) class "SQLDevice.SQLNegate", 
	operator iIn(const System.Scalar, const presentation) class "SQLDevice.SQLIn", 
	operator iSubtraction(const System.Integer, const System.Integer) class "SQLDevice.SQLSubtraction", 
	operator iEqual(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.Milliseconds(const System.Decimal) class "SQLDevice.SQLTimeSpanMilliseconds", 
	operator System.Avg(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iAddition(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLAddition", 
	operator iMod(const System.Short, const System.Short) class "SQLDevice.SQLMod", 
	operator iSubtraction(const System.Decimal, const System.Decimal) class "SQLDevice.SQLSubtraction", 
	operator iInclusiveLess(const System.Money, const System.Money) class "SQLDevice.SQLInclusiveLess", 
	operator iDivision(const System.Money, const System.Decimal) class "SQLDevice.SQLDivision", 
	operator iDivision(const System.Short, const System.Short) class "SQLDevice.SQLIntegerDivision", 
	operator iGreater(const System.Integer, const System.Integer) class "SQLDevice.SQLGreater", 
	operator iXor(const System.Boolean, const System.Boolean) class "SQLDevice.SQLXor", 
	operator iEqual(const System.Money, const System.Money) class "SQLDevice.SQLEqual", 
	operator iAddition(const System.Integer, const System.Integer) class "SQLDevice.SQLAddition", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime4Operands", 
	operator System.Avg(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iAddition(const System.Short, const System.Short) class "SQLDevice.SQLAddition", 
	operator System.Min(const System.IString) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator System.Max(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iInclusiveGreater(const System.Guid, const System.Guid) class "SQLDevice.SQLInclusiveGreater", 
	operator iDivision(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLIntegerDivision", 
	operator System.TimeSpan.WriteHours(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteHours", 
	operator iShiftLeft(const System.Byte, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iShiftLeft(const System.Short, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iLess(const System.Byte, const System.Byte) class "SQLDevice.SQLLess", 
	operator System.Sum(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator System.TimeSpan.WriteMilliseconds(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteMilliseconds", 
	operator System.Min(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator System.TimeSpan.ReadMilliseconds(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMilliseconds", 
	operator iSubtraction(const System.Money, const System.Money) class "SQLDevice.SQLSubtraction", 
	operator iOr(const System.Boolean, const System.Boolean) class "SQLDevice.SQLOr", 
	operator iDiv(const System.Short, const System.Short) class "SQLDevice.SQLDivision", 
	operator iSubtraction(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLSubtraction", 
	operator iGreater(const System.Guid, const System.Guid) class "SQLDevice.SQLGreater", 
	operator iMultiplication(const System.Short, const System.Short) class "SQLDevice.SQLMultiplication", 
	operator System.Sum(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iGreater(const System.Decimal, const System.Decimal) class "SQLDevice.SQLGreater", 
	operator iGreater(const System.Short, const System.Short) class "SQLDevice.SQLGreater", 
	operator iBitwiseNot(const System.Short) class "SQLDevice.SQLBitwiseNot", 
	operator System.Avg(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iEqual(const System.Guid, const System.Guid) class "SQLDevice.SQLEqual", 
	operator iInclusiveLess(const System.Integer, const System.Integer) class "SQLDevice.SQLInclusiveLess"
}
 reconciliation {mode = {command}, master = device} class "DB2Device.DB2Device" attributes{"DataSource" = "Sample"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

// System operator maps, case sensitive

create device TestDevice
{
	operator System.TimeSpan.WriteDays(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteDays", 
	operator iBitwiseOr(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseOr", 
	operator iBitwiseAnd(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseAnd", 
	operator iBitwiseAnd(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseAnd", 
	operator iNotEqual(const System.Long, const System.Long) class "SQLDevice.SQLNotEqual", 
	operator iCompare(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLCompare", 
	operator iDiv(const System.Decimal, const System.Decimal) class "SQLDevice.SQLDiv", 
	operator iCompare(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCompare", 
	operator iNotEqual(const System.Byte, const System.Byte) class "SQLDevice.SQLNotEqual", 
	operator iInclusiveGreater(const System.Short, const System.Short) class "SQLDevice.SQLInclusiveGreater", 
	operator iCompare(const System.Money, const System.Money) class "SQLDevice.SQLCompare", 
	operator System.Min(const System.String) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iEqual(const System.Boolean, const System.Boolean) class "SQLDevice.SQLEqual", 
	operator iBitwiseXor(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseXor", 
	operator iNotEqual(const System.String, const System.String) class "SQLDevice.SQLNotEqual", 
	operator System.Max(const System.String) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan3Operands", 
	operator System.TimeSpan(const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan2Operands", 
	operator iMod(const System.Long, const System.Long) class "SQLDevice.SQLMod", 
	operator iMultiplication(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator iInclusiveGreater(const System.Byte, const System.Byte) class "SQLDevice.SQLInclusiveGreater", 
	operator iBitwiseOr(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseOr", 
	operator System.Count(const System.Scalar) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Count"}, 
	operator iInclusiveLess(const System.Decimal, const System.Decimal) class "SQLDevice.SQLInclusiveLess", 
	operator iAnd(const System.Boolean, const System.Boolean) class "SQLDevice.SQLAnd", 
	operator iCompare(const System.Guid, const System.Guid) class "SQLDevice.SQLCompare", 
	operator iNotEqual(const System.Money, const System.Money) class "SQLDevice.SQLNotEqual", 
	operator iDivision(const System.Money, const System.Integer) class "SQLDevice.SQLDivision", 
	operator iInclusiveLess(const System.Byte, const System.Byte) class "SQLDevice.SQLInclusiveLess", 
	operator iNotEqual(const System.Short, const System.Short) class "SQLDevice.SQLNotEqual", 
	operator iCompare(const System.Boolean, const System.Boolean) class "SQLDevice.SQLCompare", 
	operator iGreater(const System.String, const System.String) class "SQLDevice.SQLGreater", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime3Operands", 
	operator System.Sum(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iCompare(const System.Long, const System.Long) class "SQLDevice.SQLCompare", 
	operator System.TimeSpan.Time(const System.Integer) class "SQLDevice.SQLTimeSpanTime1Operand", 
	operator iExists(table) class "SQLDevice.SQLExists", 
	operator iMultiplication(const System.Decimal, const System.Money) class "SQLDevice.SQLMultiplication", 
	operator iLess(const System.Integer, const System.Integer) class "SQLDevice.SQLLess", 
	operator iCompare(const System.Byte, const System.Byte) class "SQLDevice.SQLCompare", 
	operator iEqual(const System.Short, const System.Short) class "SQLDevice.SQLEqual", 
	operator iMultiplication(const System.Long, const System.Long) class "SQLDevice.SQLMultiplication", 
	operator iMultiplication(const System.Money, const System.Decimal) class "SQLDevice.SQLMultiplication", 
	operator iMultiplication(const System.Integer, const System.TimeSpan) class "SQLDevice.SQLMultiplication", 
	operator iDiv(const System.Integer, const System.Integer) class "SQLDevice.SQLDivision", 
	operator iCompare(const System.Short, const System.Short) class "SQLDevice.SQLCompare", 
	operator iBitwiseXor(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseXor", 
	operator iInclusiveGreater(const System.Integer, const System.Integer) class "SQLDevice.SQLInclusiveGreater", 
	operator System.Min(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iNegate(const System.Short) class "SQLDevice.SQLNegate", 
	operator System.Max(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iInclusiveGreater(const System.Decimal, const System.Decimal) class "SQLDevice.SQLInclusiveGreater", 
	operator iMod(const System.Byte, const System.Byte) class "SQLDevice.SQLMod", 
	operator iBitwiseOr(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseOr", 
	operator iInclusiveGreater(const System.Long, const System.Long) class "SQLDevice.SQLInclusiveGreater", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan4Operands", 
	operator iInclusiveGreater(const System.Boolean, const System.Boolean) class "SQLDevice.SQLInclusiveGreater", 
	operator iLess(const System.Long, const System.Long) class "SQLDevice.SQLLess", 
	operator System.TimeSpan.ReadDays(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadDays", 
	operator System.TimeSpan.Hours(const System.Decimal) class "SQLDevice.SQLTimeSpanHours", 
	operator iNotEqual(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLNotEqual", 
	operator iDivision(const System.Integer, const System.Integer) class "SQLDevice.SQLIntegerDivision", 
	operator System.TimeSpan.WriteSeconds(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteSeconds", 
	operator iLess(const System.Guid, const System.Guid) class "SQLDevice.SQLLess", 
	operator System.TimeSpan.ReadHours(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadHours", 
	operator System.IsNull(const System.Alpha) class "SQLDevice.SQLIsNull", 
	operator iDivision(const System.Decimal, const System.Decimal) class "SQLDevice.SQLDivision", 
	operator iLess(const System.Boolean, const System.Boolean) class "SQLDevice.SQLLess", 
	operator iMod(const System.Integer, const System.Integer) class "SQLDevice.SQLMod", 
	operator iMultiplication(const System.Money, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator iGreater(const System.Byte, const System.Byte) class "SQLDevice.SQLGreater", 
	operator iDivision(const System.Byte, const System.Byte) class "SQLDevice.SQLIntegerDivision", 
	operator System.AddTicks(const System.TimeSpan, const System.Long) class "SQLDevice.SQLTimeSpanAddTicks", 
	operator System.Max(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iAddition(const System.Decimal, const System.Decimal) class "SQLDevice.SQLAddition", 
	operator iInclusiveGreater(const System.String, const System.String) class "SQLDevice.SQLInclusiveGreater", 
	operator iInclusiveLess(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLInclusiveLess", 
	operator iInclusiveLess(const System.Long, const System.Long) class "SQLDevice.SQLInclusiveLess", 
	operator System.TimeSpan.WriteMinutes(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteMinutes", 
	operator iEqual(const System.Decimal, const System.Decimal) class "SQLDevice.SQLEqual", 
	operator iDiv(const System.Byte, const System.Byte) class "SQLDevice.SQLDivision", 
	operator System.IfNull(const System.Alpha, const System.Alpha) class "SQLDevice.SQLIfNull", 
	operator iIn(const System.Scalar, const list(System.Alpha)) class "SQLDevice.SQLIn", 
	operator iInclusiveLess(const System.Boolean, const System.Boolean) class "SQLDevice.SQLInclusiveLess", 
	operator iSubtraction(const System.Long, const System.Long) class "SQLDevice.SQLSubtraction", 
	operator System.Duration(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iGreater(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLGreater", 
	operator iDivision(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLIntegerDivision", 
	operator iGreater(const System.Money, const System.Money) class "SQLDevice.SQLGreater", 
	operator iBitwiseXor(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseXor", 
	operator iNegate(const System.Long) class "SQLDevice.SQLNegate", 
	operator iGreater(const System.Boolean, const System.Boolean) class "SQLDevice.SQLGreater", 
	operator iMultiplication(const System.Byte, const System.Byte) class "SQLDevice.SQLMultiplication", 
	operator iNot(const System.Boolean) class "SQLDevice.SQLNot", 
	operator iNotEqual(const System.Guid, const System.Guid) class "SQLDevice.SQLNotEqual", 
	operator iBitwiseOr(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseOr", 
	operator iAddition(const System.Byte, const System.Byte) class "SQLDevice.SQLAddition", 
	operator iBitwiseXor(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseXor", 
	operator iEqual(const System.Integer, const System.Integer) class "SQLDevice.SQLEqual", 
	operator iSubtraction(const System.Short, const System.Short) class "SQLDevice.SQLSubtraction", 
	operator iGreater(const System.Long, const System.Long) class "SQLDevice.SQLGreater", 
	operator iShiftRight(const System.Byte, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator System.TimeSpan.ReadTicks(const System.TimeSpan) class "SQLDevice.SQLScalarReadAccessor", 
	operator iDivision(const System.Long, const System.Long) class "SQLDevice.SQLIntegerDivision", 
	operator iMultiplication(const System.Integer, const System.Money) class "SQLDevice.SQLMultiplication", 
	operator System.Min(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iBitwiseNot(const System.Long) class "SQLDevice.SQLBitwiseNot", 
	operator iIn(const System.Scalar, const table) class "SQLDevice.SQLIn", 
	operator System.TimeSpan(const System.Integer) class "SQLDevice.SQLTimeSpan1Operand", 
	operator iBitwiseNot(const System.Byte) class "SQLDevice.SQLBitwiseNot", 
	operator iLess(const System.Money, const System.Money) class "SQLDevice.SQLLess", 
	operator iShiftRight(const System.Short, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iInclusiveGreater(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLInclusiveGreater", 
	operator System.Min(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iShiftLeft(const System.Long, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iExists(presentation) class "SQLDevice.SQLExists", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan5Operands", 
	operator System.TimeSpan.Seconds(const System.Decimal) class "SQLDevice.SQLTimeSpanSeconds", 
	operator iInclusiveLess(const System.String, const System.String) class "SQLDevice.SQLInclusiveLess", 
	operator iMultiplication(const System.Decimal, const System.Decimal) class "SQLDevice.SQLMultiplication", 
	operator iLike(const System.String, const System.String) class "SQLDevice.SQLLike", 
	operator iMultiplication(const System.Integer, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator System.Max(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime2Operands", 
	operator System.Count() class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Count"}, 
	operator iNotEqual(const System.Boolean, const System.Boolean) class "SQLDevice.SQLNotEqual", 
	operator System.TimeSpan.ReadMinutes(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMinutes", 
	operator System.Sum(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iAddition(const System.Long, const System.Long) class "SQLDevice.SQLAddition", 
	operator iBitwiseNot(const System.Integer) class "SQLDevice.SQLBitwiseNot", 
	operator iAddition(const System.Money, const System.Money) class "SQLDevice.SQLAddition", 
	operator iInclusiveGreater(const System.Money, const System.Money) class "SQLDevice.SQLInclusiveGreater", 
	operator iLess(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLLess", 
	operator System.Avg(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iNotEqual(const System.Decimal, const System.Decimal) class "SQLDevice.SQLNotEqual", 
	operator iShiftRight(const System.Long, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iSubtraction(const System.Byte, const System.Byte) class "SQLDevice.SQLSubtraction", 
	operator iInclusiveLess(const System.Guid, const System.Guid) class "SQLDevice.SQLInclusiveLess", 
	operator iNotEqual(const System.Integer, const System.Integer) class "SQLDevice.SQLNotEqual", 
	operator iShiftLeft(const System.Integer, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iDiv(const System.Long, const System.Long) class "SQLDevice.SQLDivision", 
	operator System.TimeSpan.WriteTicks(const System.TimeSpan, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iShiftRight(const System.Integer, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iEqual(const System.Byte, const System.Byte) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.ReadSeconds(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadSeconds", 
	operator iInclusiveLess(const System.Short, const System.Short) class "SQLDevice.SQLInclusiveLess", 
	operator iBitwiseAnd(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseAnd", 
	operator iEqual(const System.String, const System.String) class "SQLDevice.SQLEqual", 
	operator iEqual(const System.Long, const System.Long) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.Minutes(const System.Decimal) class "SQLDevice.SQLTimeSpanMinutes", 
	operator System.TimeSpan.Ticks(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator iLess(const System.Decimal, const System.Decimal) class "SQLDevice.SQLLess", 
	operator iCompare(const System.Integer, const System.Integer) class "SQLDevice.SQLCompare", 
	operator iBitwiseAnd(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseAnd", 
	operator iLess(const System.Short, const System.Short) class "SQLDevice.SQLLess", 
	operator System.TimeSpan.Days(const System.Decimal) class "SQLDevice.SQLTimeSpanDays", 
	operator iCompare(const System.String, const System.String) class "SQLDevice.SQLCompare", 
	operator iNegate(const System.Integer) class "SQLDevice.SQLNegate", 
	operator iIn(const System.Scalar, const presentation) class "SQLDevice.SQLIn", 
	operator iSubtraction(const System.Integer, const System.Integer) class "SQLDevice.SQLSubtraction", 
	operator iEqual(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.Milliseconds(const System.Decimal) class "SQLDevice.SQLTimeSpanMilliseconds", 
	operator iLess(const System.String, const System.String) class "SQLDevice.SQLLess", 
	operator System.Avg(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iAddition(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLAddition", 
	operator iMod(const System.Short, const System.Short) class "SQLDevice.SQLMod", 
	operator iSubtraction(const System.Decimal, const System.Decimal) class "SQLDevice.SQLSubtraction", 
	operator iInclusiveLess(const System.Money, const System.Money) class "SQLDevice.SQLInclusiveLess", 
	operator iDivision(const System.Money, const System.Decimal) class "SQLDevice.SQLDivision", 
	operator iDivision(const System.Short, const System.Short) class "SQLDevice.SQLIntegerDivision", 
	operator iGreater(const System.Integer, const System.Integer) class "SQLDevice.SQLGreater", 
	operator iXor(const System.Boolean, const System.Boolean) class "SQLDevice.SQLXor", 
	operator iEqual(const System.Money, const System.Money) class "SQLDevice.SQLEqual", 
	operator iAddition(const System.Integer, const System.Integer) class "SQLDevice.SQLAddition", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime4Operands", 
	operator System.Avg(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iAddition(const System.Short, const System.Short) class "SQLDevice.SQLAddition", 
	operator System.Max(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iInclusiveGreater(const System.Guid, const System.Guid) class "SQLDevice.SQLInclusiveGreater", 
	operator iDivision(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLIntegerDivision", 
	operator System.TimeSpan.WriteHours(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteHours", 
	operator iShiftLeft(const System.Byte, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iShiftLeft(const System.Short, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iLess(const System.Byte, const System.Byte) class "SQLDevice.SQLLess", 
	operator System.Sum(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator System.TimeSpan.WriteMilliseconds(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteMilliseconds", 
	operator System.Min(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator System.TimeSpan.ReadMilliseconds(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMilliseconds", 
	operator iSubtraction(const System.Money, const System.Money) class "SQLDevice.SQLSubtraction", 
	operator iOr(const System.Boolean, const System.Boolean) class "SQLDevice.SQLOr", 
	operator iDiv(const System.Short, const System.Short) class "SQLDevice.SQLDivision", 
	operator iSubtraction(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLSubtraction", 
	operator iGreater(const System.Guid, const System.Guid) class "SQLDevice.SQLGreater", 
	operator iMultiplication(const System.Short, const System.Short) class "SQLDevice.SQLMultiplication", 
	operator System.Sum(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iGreater(const System.Decimal, const System.Decimal) class "SQLDevice.SQLGreater", 
	operator iGreater(const System.Short, const System.Short) class "SQLDevice.SQLGreater", 
	operator iBitwiseNot(const System.Short) class "SQLDevice.SQLBitwiseNot", 
	operator System.Avg(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iEqual(const System.Guid, const System.Guid) class "SQLDevice.SQLEqual", 
	operator iInclusiveLess(const System.Integer, const System.Integer) class "SQLDevice.SQLInclusiveLess"
}
 reconciliation {mode = {command}, master = device} class "DB2Device.DB2Device" attributes{"DataSource" = "Sample", "IsCaseSensitive" = "true"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

// DB2 mappings

create device TestDevice
{
	domain System.Integer class "SQLDevice.SQLInteger", 
	domain System.Decimal class "SQLDevice.SQLDecimal", 
	domain System.Binary class "SQLDevice.SQLBinary", 
	domain System.TimeSpan class "SQLDevice.SQLTimeSpan", 
	domain System.Byte class "SQLDevice.SQLByte", 
	domain System.DateTime class "SQLDevice.SQLDateTime", 
	domain System.Boolean class "SQLDevice.SQLBoolean", 
	domain System.Long class "SQLDevice.SQLLong", 
	domain System.Money class "SQLDevice.SQLMoney", 
	domain System.Short class "SQLDevice.SQLShort", 
	domain System.String class "DB2Device.DB2String", 
	domain System.Guid class "SQLDevice.SQLGuid", 
	operator IsSpecial(const System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.AddMonths(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_AddMonths"}, 
	operator iLeftJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.Decimal.ReadValue(const System.Decimal) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DatePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DatePart"}, 
	operator System.Short.WriteValue(const System.Short, const System.Short) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iOrder(presentation) class "SQLDevice.SQLOrder", 
	operator iRename(presentation) class "SQLDevice.SQLRename", 
	operator iDifference(table, table) class "SQLDevice.SQLDifference", 
	operator System.DateTime.WriteMillisecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteMillisecondsPart"}, 
	operator iLeftJoin(table, table) class "SQLDevice.SQLJoin", 
	operator iPower(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Power"}, 
	operator IsSpecial(const System.Long) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Math.Log(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "LogB"}, 
	operator System.DateTime.ReadHoursPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadHoursPart"}, 
	operator System.AddYears(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_AddYears"}, 
	operator System.IsLeapYear(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_IsLeapYear"}, 
	operator System.Money.ReadValue(const System.Money) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Integer.ReadValue(const System.Integer) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Now() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Now"}, 
	operator System.DayOfMonth(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTDayOfMonth"}, 
	operator iPower(const System.Byte, const System.Byte) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Power"}, 
	operator iUnion(table, table) class "SQLDevice.SQLUnion", 
	operator iRemove(table) class "SQLDevice.SQLProject", 
	operator iJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.DateTime(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTime"}, 
	operator System.TimeSpan.WriteDaysPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteDaysPart"}, 
	operator iJoin(table, table) class "SQLDevice.SQLJoin", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector7"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector3"}, 
	operator System.Short.ReadValue(const System.Short) class "SQLDevice.SQLScalarReadAccessor", 
	operator IsSpecial(const System.Alpha) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Boolean.ReadValue(const System.Boolean) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Long(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator System.Today() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Today"}, 
	operator System.TimePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TimePart"}, 
	operator System.Money.WriteValue(const System.Money, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iPower(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Power"}, 
	operator System.Boolean.WriteValue(const System.Boolean, const System.Boolean) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Floor(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Floor"}, 
	operator System.TimeSpan.ReadDaysPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadDaysPart"}, 
	operator System.Math.Ln(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ln"}, 
	operator iLeftJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.TimeSpan.ReadHoursPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadHoursPart"}, 
	operator System.Decimal(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator IsSpecial(const System.Short) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.TimeSpan.WriteMillisecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteMillisecondsPart"}, 
	operator System.TimeSpan.ReadMillisecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadMillisecondsPart"}, 
	operator iPower(const System.Short, const System.Short) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Power"}, 
	operator System.Guid.ReadValue(const System.Guid) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector4"}, 
	operator iDifference(presentation, presentation) class "SQLDevice.SQLDifference", 
	operator iExtend(presentation) class "SQLDevice.SQLExtend", 
	operator System.TimeSpan.WriteHoursPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteHoursPart"}, 
	operator iRedefine(table) class "SQLDevice.SQLRedefine", 
	operator System.DateTime.ReadYearsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadYearsPart"}, 
	operator System.DateTime.WriteDaysPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteDaysPart"}, 
	operator System.Guid.WriteValue(const System.Guid, const System.String) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Money(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime.ReadDaysPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadDaysPart"}, 
	operator IsSpecial(const System.Money) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector2"}, 
	operator System.Abs(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iLeftJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.Truncate(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Trunc"}, 
	operator IsSpecial(const System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteSecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteSecondsPart"}, 
	operator System.DateTime.ReadMillisecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadMillisecondsPart"}, 
	operator System.Math.Exp(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Exp"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector6"}, 
	operator System.Integer.WriteValue(const System.Integer, const System.Integer) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.TimeSpan.WriteSecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteSecondsPart"}, 
	operator System.DateTime.WriteHoursPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteHoursPart"}, 
	operator System.DateTime.ReadMonthsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadMonthsPart"}, 
	operator iRightJoin(table, table) class "SQLDevice.SQLJoin", 
	operator System.Math.Random() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Rand"}, 
	operator IsSpecial(const System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iRedefine(presentation) class "SQLDevice.SQLRedefine", 
	operator System.Ceiling(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ceil"}, 
	operator iRename(table) class "SQLDevice.SQLRename", 
	operator System.Math.Log10(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log10"}, 
	operator iProject(table) class "SQLDevice.SQLProject", 
	operator System.Integer(const System.Integer) class "SQLDevice.SQLScalarSelector", 
	operator System.DayOfYear(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTDayOfYear"}, 
	operator System.TimeSpan(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TimeSpan"}, 
	operator iProject(presentation) class "SQLDevice.SQLProject", 
	operator IsSpecial(const System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iPower(const System.Long, const System.Long) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Power"}, 
	operator iRestrict(presentation, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.Short(const System.Short) class "SQLDevice.SQLScalarSelector", 
	operator System.Long.ReadValue(const System.Long) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime.WriteMinutesPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteMinutesPart"}, 
	operator iRightJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.TimeSpan.WriteMinutesPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteMinutesPart"}, 
	operator iRemove(presentation) class "SQLDevice.SQLProject", 
	operator iExtend(table) class "SQLDevice.SQLExtend", 
	operator iUnion(presentation, presentation) class "SQLDevice.SQLUnion", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector5"}, 
	operator iOrder(table) class "SQLDevice.SQLOrder", 
	operator System.DateTime.ReadSecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadSecondsPart"}, 
	operator System.Decimal.WriteValue(const System.Decimal, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Abs(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.Round(const System.Decimal, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Round"}, 
	operator iAggregate(table) class "SQLDevice.SQLAggregate", 
	operator System.DaysInMonth(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DaysInMonth"}, 
	operator System.Byte.ReadValue(const System.Byte) class "SQLDevice.SQLScalarReadAccessor", 
	operator IsSpecial(const System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iRetrieve() class "SQLDevice.SQLRetrieve", 
	operator System.Byte(const System.Byte) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime.WriteYearsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteYearsPart"}, 
	operator iRightJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator iRestrict(table, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator IsSpecial(const System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Boolean(const System.Boolean) class "SQLDevice.SQLScalarSelector", 
	operator System.DayOfWeek(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DayOfWeek"}, 
	operator System.TimeSpan.ReadSecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadSecondsPart"}, 
	operator iAdorn(table) class "SQLDevice.SQLAdorn", 
	operator System.Byte.WriteValue(const System.Byte, const System.Byte) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.TimeSpan.ReadMinutesPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadMinutesPart"}, 
	operator System.DateTime(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector1"}, 
	operator System.Long.WriteValue(const System.Long, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Frac(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Frac"}, 
	operator System.Guid(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator iRightJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator iAdorn(presentation) class "SQLDevice.SQLAdorn", 
	operator System.DateTime.WriteMonthsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteMonthsPart"}, 
	operator System.DateTime.ReadMinutesPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadMinutesPart"}, 
	operator iJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator iAggregate(presentation) class "SQLDevice.SQLAggregate"
}
 reconciliation {mode = {command}, master = device} class "DB2Device.DB2Device" attributes{"DataSource" = "Sample"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

// MSSQL Mappings, case-insensitive

create device TestDevice
{
	domain System.Integer class "SQLDevice.SQLInteger", 
	domain System.Decimal class "SQLDevice.SQLDecimal",
	domain System.Binary class "MSSQLDevice.MSSQLBinary", 
	domain System.TimeSpan class "SQLDevice.SQLTimeSpan", 
	domain System.Byte class "MSSQLDevice.MSSQLByte", 
	domain System.DateTime class "MSSQLDevice.MSSQLDateTime", 
	domain System.Boolean class "MSSQLDevice.MSSQLBoolean", 
	domain System.IString class "MSSQLDevice.MSSQLString", 
	domain System.Long class "SQLDevice.SQLLong", 
	domain System.Money class "MSSQLDevice.MSSQLMoney", 
	domain System.Short class "SQLDevice.SQLShort", 
	domain System.Guid class "MSSQLDevice.MSSQLGuid", 
	operator System.Abs(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator System.TimeSpan(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTTimeSpan"}, 
	operator System.TimeSpan.ReadMinutesPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadMinutesPart"}, 
	operator System.DateTime.WriteMillisecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteMillisecondsPart"}, 
	operator System.DateTime.WriteHoursPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteHoursPart"}, 
	operator System.DatePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDatePart"}, 
	operator System.ToLong(const System.Boolean) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToDecimal(const System.Money) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.Guid(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator System.ToShort(const System.Long) class "MSSQLDevice.MSSQLToShort", 
	operator System.ToLong(const System.Integer) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToIString(const System.Integer) class "MSSQLDevice.MSSQLToString", 
	operator System.ToLong(const System.Short) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.Long.WriteValue(const System.Long, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iRedefine(presentation) class "SQLDevice.SQLRedefine", 
	operator System.DateTime(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSDateTime"}, 
	operator System.TimeSpan.WriteSecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteSecondsPart"}, 
	operator System.ToInteger(const System.IString) class "MSSQLDevice.MSSQLToInt", 
	operator System.ToShort(const System.Integer) class "MSSQLDevice.MSSQLToShort", 
	operator System.Today() class "MSSQLDevice.MSSQLToday", 
	operator System.Integer(const System.Integer) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator iOrder(presentation) class "SQLDevice.SQLOrder", 
	operator iLeftJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator IsSpecial(const System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Round(const System.Decimal, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Round"}, 
	operator System.ToIString(const System.Money) class "MSSQLDevice.MSSQLToString", 
	operator System.DayOfWeek(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DayOfWeek"}, 
	operator IsSpecial(const System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.ReadMillisecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadMillisecondsPart"}, 
	operator System.Short(const System.Short) class "SQLDevice.SQLScalarSelector", 
	operator System.Money(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.ToIString(const System.Short) class "MSSQLDevice.MSSQLToString", 
	operator System.DateTime.ReadMonthsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Month"}, 
	operator System.Math.Factorial(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_Factorial"}, 
	operator System.TimeSpan.ReadHoursPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadHoursPart"}, 
	operator System.TimeSpan.ReadMillisecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadMillisecondsPart"}, 
	operator System.CompareText(const System.IString, const System.IString) class "SQLDevice.SQLCompare", 
	operator iAdorn(table) class "SQLDevice.SQLAdorn", 
	operator iAggregate(presentation) class "SQLDevice.SQLAggregate", 
	operator iJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.DateTime.WriteSecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteSecondsPart"}, 
	operator System.IsLeapYear(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_IsLeapYear"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.Integer.WriteValue(const System.Integer, const System.Integer) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.ToShort(const System.Boolean) class "MSSQLDevice.MSSQLToSmallInt", 
	operator iRestrict(table, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.ToByte(const System.IString) class "MSSQLDevice.MSSQLToTinyInt", 
	operator System.TimeSpan.WriteMinutesPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteMinutesPart"}, 
	operator System.Short.WriteValue(const System.Short, const System.Short) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Pos(const System.IString, const System.IString) class "MSSQLDevice.MSSQLPos", 
	operator System.Byte.WriteValue(const System.Byte, const System.Byte) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iLeftJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.Frac(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_Frac"}, 
	operator IsSpecial(const System.Alpha) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Integer(const System.Long) class "MSSQLDevice.MSSQLToInteger", 
	operator System.Long(const System.Decimal) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToMoney(const System.Long) class "MSSQLDevice.MSSQLToMoney", 
	operator System.Math.Random() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Rand"}, 
	operator iRightJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.Decimal.ReadValue(const System.Decimal) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRestrict(presentation, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.ToMoney(const System.Integer) class "MSSQLDevice.MSSQLToMoney", 
	operator System.DaysInMonth(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DaysInMonth"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.Money.WriteValue(const System.Money, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.TimePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTTimePart"}, 
	operator System.Short(const System.Byte) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.DayOfYear(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DayOfYear"}, 
	operator iRightJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.Math.Log10(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log10"}, 
	operator System.ToBoolean(const System.Byte) class "MSSQLDevice.MSSQLToBit", 
	operator iAdorn(presentation) class "SQLDevice.SQLAdorn", 
	operator System.Guid.WriteValue(const System.Guid, const System.String) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Upper(const System.IString) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Upper"}, 
	operator iRetrieve() class "MSSQLDevice.MSSQLRetrieve", 
	operator System.Long.ReadValue(const System.Long) class "SQLDevice.SQLScalarReadAccessor", 
	operator iPower(const System.Decimal, const System.Decimal) class "SQLDevice.MSSQLPower", 
	operator System.TimeSpan.WriteDaysPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteDaysPart"}, 
	operator iPower(const System.Byte, const System.Byte) class "SQLDevice.MSSQLPower", 
	operator System.Lower(const System.IString) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Lower"}, 
	operator System.ToByte(const System.Long) class "MSSQLDevice.MSSQLToByte", 
	operator System.ToLong(const System.IString) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.Money.ReadValue(const System.Money) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Integer.ReadValue(const System.Integer) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Decimal(const System.Long) class "MSSQLDevice.MSSQLToDecimal288", 
	operator IsSpecial(const System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.TimeSpan.ReadSecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadSecondsPart"}, 
	operator System.ToLong(const System.Decimal) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToInteger(const System.Long) class "MSSQLDevice.MSSQLToInteger", 
	operator System.Long(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator System.ToInteger(const System.Decimal) class "MSSQLDevice.MSSQLToInt", 
	operator iExtend(table) class "SQLDevice.SQLExtend", 
	operator IsSpecial(const System.Short) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iLeftJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.ToByte(const System.Short) class "MSSQLDevice.MSSQLToByte", 
	operator System.TimeSpan.ReadDaysPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadDaysPart"}, 
	operator IsSpecial(const System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteMinutesPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteMinutesPart"}, 
	operator iRemove(table) class "SQLDevice.SQLProject", 
	operator System.Byte(const System.Short) class "MSSQLDevice.MSSQLToByte", 
	operator System.ToBoolean(const System.Integer) class "MSSQLDevice.MSSQLToBit", 
	operator System.Boolean.WriteValue(const System.Boolean, const System.Boolean) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iProject(table) class "SQLDevice.SQLProject", 
	operator System.DateTime.ReadDaysPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Day"}, 
	operator iJoin(table, table) class "SQLDevice.SQLJoin", 
	operator IsSpecial(const System.Money) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteDaysPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteDaysPart"}, 
	operator System.DateTime.WriteYearsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteYearsPart"}, 
	operator System.Boolean(const System.Boolean) class "SQLDevice.SQLScalarSelector", 
	operator iProject(presentation) class "SQLDevice.SQLProject", 
	operator System.Floor(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Floor"}, 
	operator IsSpecial(const System.Long) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.ToLong(const System.Byte) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToIString(const System.Decimal) class "MSSQLDevice.MSSQLToString", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.ToIString(const System.Boolean) class "SQLDevice.SQLBooleanToString", 
	operator iRemove(presentation) class "SQLDevice.SQLProject", 
	operator System.Decimal(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator iOrder(table) class "SQLDevice.SQLOrder", 
	operator System.Ceiling(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ceiling"}, 
	operator iRedefine(table) class "SQLDevice.SQLRedefine", 
	operator System.Now() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "GetDate"}, 
	operator System.ToInteger(const System.Boolean) class "MSSQLDevice.MSSQLToInt", 
	operator System.Short(const System.Integer) class "MSSQLDevice.MSSQLToShort", 
	operator iAggregate(table) class "SQLDevice.SQLAggregate", 
	operator System.ToShort(const System.IString) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.ToShort(const System.Byte) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.DateTime.ReadMinutesPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadMinutesPart"}, 
	operator System.ToIString(const System.Byte) class "MSSQLDevice.MSSQLToString", 
	operator System.DateTime.ReadSecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadSecondsPart"}, 
	operator System.ToInteger(const System.Money) class "MSSQLDevice.MSSQLToInt", 
	operator System.TimeSpan.WriteHoursPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteHoursPart"}, 
	operator System.Math.Exp(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Exp"}, 
	operator System.Truncate(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_Trunc"}, 
	operator iRename(presentation) class "SQLDevice.SQLRename", 
	operator System.Byte(const System.Byte) class "SQLDevice.SQLScalarSelector", 
	operator iPower(const System.Short, const System.Short) class "SQLDevice.MSSQLPower", 
	operator iRightJoin(table, table) class "SQLDevice.SQLJoin", 
	operator iLeftJoin(table, table) class "SQLDevice.SQLJoin", 
	operator iAddition(const System.IString, const System.IString) class "SQLDevice.SQLAddition", 
	operator System.Copy(const System.IString, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLCopy", 
	operator System.ToInteger(const System.Byte) class "MSSQLDevice.MSSQLToInt", 
	operator System.DateTime(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator iUnion(presentation, presentation) class "SQLDevice.SQLUnion", 
	operator System.Math.Log(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_LogB"}, 
	operator System.ToDecimal(const System.Integer) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.ToBoolean(const System.Short) class "MSSQLDevice.MSSQLToBit", 
	operator System.Boolean.ReadValue(const System.Boolean) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToGuid(const System.IString) class "MSSQLDevice.MSSQLToUniqueIdentifier", 
	operator iPower(const System.Long, const System.Long) class "SQLDevice.MSSQLPower", 
	operator System.ToByte(const System.Boolean) class "MSSQLDevice.MSSQLToTinyInt", 
	operator System.Byte.ReadValue(const System.Byte) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.ToByte(const System.Integer) class "MSSQLDevice.MSSQLToByte", 
	operator System.Long(const System.Integer) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.DayOfMonth(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Day"}, 
	operator System.ToBoolean(const System.Long) class "MSSQLDevice.MSSQLToBit", 
	operator System.AddMonths(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_AddMonths"}, 
	operator iJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.ToMoney(const System.Decimal) class "MSSQLDevice.MSSQLToMoney", 
	operator iRename(table) class "SQLDevice.SQLRename", 
	operator IsSpecial(const System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Length(const System.IString) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Len"}, 
	operator System.ToIString(const System.Long) class "MSSQLDevice.MSSQLToString", 
	operator System.DateTime.ReadHoursPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadHoursPart"}, 
	operator System.ToLong(const System.Money) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.Integer(const System.Short) class "MSSQLDevice.MSSQLToInt", 
	operator IsSpecial(const System.IString) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iPower(const System.Integer, const System.Integer) class "SQLDevice.MSSQLPower", 
	operator iExtend(presentation) class "SQLDevice.SQLExtend", 
	operator System.ToInteger(const System.Short) class "MSSQLDevice.MSSQLToInt", 
	operator iJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.DateTime.ReadYearsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Year"}, 
	operator System.Math.Ln(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log"}, 
	operator System.TimeSpan.WriteMillisecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteMillisecondsPart"}, 
	operator System.Short.ReadValue(const System.Short) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToDecimal(const System.Long) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.AddYears(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_AddYears"}, 
	operator System.Guid.ReadValue(const System.Guid) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRightJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.Abs(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator IsSpecial(const System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.IString(const System.String) class "SQLDevice.SQLIStringSelector", 
	operator System.ToIString(const System.Guid) class "MSSQLDevice.MSSQLToString", 
	operator System.Decimal.WriteValue(const System.Decimal, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.DateTime.WriteMonthsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteMonthsPart"}, 
	operator System.IndexOf(const System.IString, const System.IString) class "MSSQLDevice.MSSQLIndexOf", 
	operator iUnion(table, table) class "SQLDevice.SQLUnion"
}
 reconciliation {mode = {command}, master = device} class "MSSQLDevice.MSSQLDevice" attributes{"ServerName" = ".", "DatabaseName" = "pubs"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

// MSSQL device, case-sensitive
create device TestDevice
{
	domain System.Integer class "SQLDevice.SQLInteger", 
	domain System.Decimal class "SQLDevice.SQLDecimal", 
	domain System.Binary class "MSSQLDevice.MSSQLBinary", 
	domain System.TimeSpan class "SQLDevice.SQLTimeSpan", 
	domain System.Byte class "MSSQLDevice.MSSQLByte", 
	domain System.DateTime class "MSSQLDevice.MSSQLDateTime", 
	domain System.Boolean class "MSSQLDevice.MSSQLBoolean", 
	domain System.Long class "SQLDevice.SQLLong", 
	domain System.Money class "MSSQLDevice.MSSQLMoney", 
	domain System.Short class "SQLDevice.SQLShort", 
	domain System.String class "MSSQLDevice.MSSQLString", 
	domain System.Guid class "MSSQLDevice.MSSQLGuid", 
	operator System.Abs(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator System.TimeSpan(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTTimeSpan"}, 
	operator System.ToLong(const System.String) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.DateTime.WriteMillisecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteMillisecondsPart"}, 
	operator System.DateTime.WriteHoursPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteHoursPart"}, 
	operator System.DatePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDatePart"}, 
	operator System.ToLong(const System.Boolean) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToDecimal(const System.Money) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.Guid(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator System.ToShort(const System.Long) class "MSSQLDevice.MSSQLToShort", 
	operator IsSpecial(const System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.ToLong(const System.Short) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.Long.WriteValue(const System.Long, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Money.ReadValue(const System.Money) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRedefine(presentation) class "SQLDevice.SQLRedefine", 
	operator System.DateTime(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSDateTime"}, 
	operator System.TimeSpan.WriteSecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteSecondsPart"}, 
	operator System.ToShort(const System.Integer) class "MSSQLDevice.MSSQLToShort", 
	operator System.TimeSpan.ReadMinutesPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadMinutesPart"}, 
	operator System.Today() class "MSSQLDevice.MSSQLToday", 
	operator System.Integer(const System.Integer) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator iOrder(presentation) class "SQLDevice.SQLOrder", 
	operator iLeftJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator IsSpecial(const System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Money.WriteValue(const System.Money, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Round(const System.Decimal, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Round"}, 
	operator System.ToInteger(const System.String) class "MSSQLDevice.MSSQLToInt", 
	operator System.DayOfWeek(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DayOfWeek"}, 
	operator IsSpecial(const System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.ReadMillisecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadMillisecondsPart"}, 
	operator System.Short(const System.Short) class "SQLDevice.SQLScalarSelector", 
	operator System.Money(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime.ReadMonthsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Month"}, 
	operator System.Math.Factorial(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_Factorial"}, 
	operator System.ToString(const System.Integer) class "MSSQLDevice.MSSQLToString", 
	operator System.Upper(const System.String) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Upper"}, 
	operator System.TimeSpan.ReadMillisecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadMillisecondsPart"}, 
	operator System.TimeSpan.ReadSecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadSecondsPart"}, 
	operator iAdorn(table) class "SQLDevice.SQLAdorn", 
	operator System.ToString(const System.Byte) class "MSSQLDevice.MSSQLToString", 
	operator iAggregate(presentation) class "SQLDevice.SQLAggregate", 
	operator iJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.DateTime.WriteSecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteSecondsPart"}, 
	operator System.String.WriteValue(const System.String, const System.String) class "SQLDevice.SQLScalarSelector", 
	operator System.ToGuid(const System.String) class "MSSQLDevice.MSSQLToUniqueIdentifier", 
	operator System.ToString(const System.Guid) class "MSSQLDevice.MSSQLToString", 
	operator System.IsLeapYear(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_IsLeapYear"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.Integer.WriteValue(const System.Integer, const System.Integer) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.ToShort(const System.Boolean) class "MSSQLDevice.MSSQLToSmallInt", 
	operator iRestrict(table, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.TimeSpan.WriteMinutesPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteMinutesPart"}, 
	operator System.ToString(const System.Long) class "MSSQLDevice.MSSQLToString", 
	operator System.Byte.WriteValue(const System.Byte, const System.Byte) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iLeftJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.Frac(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_Frac"}, 
	operator IsSpecial(const System.Alpha) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Integer(const System.Long) class "MSSQLDevice.MSSQLToInteger", 
	operator System.Long(const System.Decimal) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToMoney(const System.Long) class "MSSQLDevice.MSSQLToMoney", 
	operator System.Math.Random() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Rand"}, 
	operator iLeftJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator iRightJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.Short.WriteValue(const System.Short, const System.Short) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Decimal.ReadValue(const System.Decimal) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRestrict(presentation, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.ToMoney(const System.Integer) class "MSSQLDevice.MSSQLToMoney", 
	operator System.ToLong(const System.Money) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToShort(const System.String) class "MSSQLDevice.MSSQLToSmallInt", 
	operator iAddition(const System.String, const System.String) class "SQLDevice.SQLAddition", 
	operator System.TimePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTTimePart"}, 
	operator System.Short(const System.Byte) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.Lower(const System.String) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Lower"}, 
	operator System.DayOfYear(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DayOfYear"}, 
	operator iRightJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.Math.Log10(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log10"}, 
	operator System.ToBoolean(const System.Byte) class "MSSQLDevice.MSSQLToBit", 
	operator iAdorn(presentation) class "SQLDevice.SQLAdorn", 
	operator System.Guid.WriteValue(const System.Guid, const System.String) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Pos(const System.String, const System.String) class "MSSQLDevice.MSSQLPos", 
	operator IsSpecial(const System.String) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iRetrieve() class "MSSQLDevice.MSSQLRetrieve", 
	operator iProject(table) class "SQLDevice.SQLProject", 
	operator iPower(const System.Decimal, const System.Decimal) class "SQLDevice.MSSQLPower", 
	operator System.TimeSpan.WriteDaysPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteDaysPart"}, 
	operator System.TimeSpan.ReadHoursPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadHoursPart"}, 
	operator iPower(const System.Byte, const System.Byte) class "SQLDevice.MSSQLPower", 
	operator System.ToString(const System.Decimal) class "MSSQLDevice.MSSQLToString", 
	operator System.ToByte(const System.Long) class "MSSQLDevice.MSSQLToByte", 
	operator System.ToLong(const System.Integer) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToString(const System.Short) class "MSSQLDevice.MSSQLToString", 
	operator System.Decimal(const System.Long) class "MSSQLDevice.MSSQLToDecimal288", 
	operator IsSpecial(const System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.ToByte(const System.String) class "MSSQLDevice.MSSQLToTinyInt", 
	operator System.ToInteger(const System.Long) class "MSSQLDevice.MSSQLToInteger", 
	operator System.Long(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator System.ToInteger(const System.Decimal) class "MSSQLDevice.MSSQLToInt", 
	operator iExtend(table) class "SQLDevice.SQLExtend", 
	operator IsSpecial(const System.Short) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.IndexOf(const System.String, const System.String) class "MSSQLDevice.MSSQLIndexOf", 
	operator System.CompareText(const System.String, const System.String) class "MSSQLDevice.MSSQLCompareText", 
	operator System.Boolean.ReadValue(const System.Boolean) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.TimeSpan.ReadDaysPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSReadDaysPart"}, 
	operator IsSpecial(const System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteMinutesPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteMinutesPart"}, 
	operator System.Length(const System.String) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Len"}, 
	operator iRemove(table) class "SQLDevice.SQLProject", 
	operator System.Byte(const System.Short) class "MSSQLDevice.MSSQLToByte", 
	operator System.ToBoolean(const System.Integer) class "MSSQLDevice.MSSQLToBit", 
	operator System.Boolean.WriteValue(const System.Boolean, const System.Boolean) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iLeftJoin(table, table) class "SQLDevice.SQLJoin", 
	operator iJoin(table, table) class "SQLDevice.SQLJoin", 
	operator IsSpecial(const System.Money) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteDaysPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteDaysPart"}, 
	operator System.DateTime.WriteYearsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteYearsPart"}, 
	operator System.Boolean(const System.Boolean) class "SQLDevice.SQLScalarSelector", 
	operator iProject(presentation) class "SQLDevice.SQLProject", 
	operator System.Floor(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Floor"}, 
	operator IsSpecial(const System.Long) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.ToLong(const System.Byte) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator iRemove(presentation) class "SQLDevice.SQLProject", 
	operator System.Decimal(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator iOrder(table) class "SQLDevice.SQLOrder", 
	operator System.Ceiling(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ceiling"}, 
	operator iRedefine(table) class "SQLDevice.SQLRedefine", 
	operator System.Now() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "GetDate"}, 
	operator System.ToInteger(const System.Boolean) class "MSSQLDevice.MSSQLToInt", 
	operator System.Short(const System.Integer) class "MSSQLDevice.MSSQLToShort", 
	operator iAggregate(table) class "SQLDevice.SQLAggregate", 
	operator System.Integer.ReadValue(const System.Integer) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToShort(const System.Byte) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.DateTime.ReadMinutesPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadMinutesPart"}, 
	operator System.DateTime.ReadSecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadSecondsPart"}, 
	operator System.ToInteger(const System.Money) class "MSSQLDevice.MSSQLToInt", 
	operator System.DateTime.ReadDaysPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Day"}, 
	operator System.Math.Exp(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Exp"}, 
	operator System.Truncate(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_Trunc"}, 
	operator iRename(presentation) class "SQLDevice.SQLRename", 
	operator System.Byte(const System.Byte) class "SQLDevice.SQLScalarSelector", 
	operator iPower(const System.Short, const System.Short) class "SQLDevice.MSSQLPower", 
	operator iRightJoin(table, table) class "SQLDevice.SQLJoin", 
	operator System.Long.ReadValue(const System.Long) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DaysInMonth(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DaysInMonth"}, 
	operator System.ToInteger(const System.Byte) class "MSSQLDevice.MSSQLToInt", 
	operator System.DateTime(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator iUnion(presentation, presentation) class "SQLDevice.SQLUnion", 
	operator System.Math.Log(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_LogB"}, 
	operator System.ToDecimal(const System.Integer) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.ToBoolean(const System.Short) class "MSSQLDevice.MSSQLToBit", 
	operator iPower(const System.Long, const System.Long) class "SQLDevice.MSSQLPower", 
	operator System.ToByte(const System.Boolean) class "MSSQLDevice.MSSQLToTinyInt", 
	operator System.Byte.ReadValue(const System.Byte) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTDateTimeSelector"}, 
	operator System.ToByte(const System.Integer) class "MSSQLDevice.MSSQLToByte", 
	operator System.Long(const System.Integer) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.DayOfMonth(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Day"}, 
	operator System.ToBoolean(const System.Long) class "MSSQLDevice.MSSQLToBit", 
	operator System.AddMonths(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_AddMonths"}, 
	operator iJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.ToMoney(const System.Decimal) class "MSSQLDevice.MSSQLToMoney", 
	operator iRename(table) class "SQLDevice.SQLRename", 
	operator IsSpecial(const System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.ReadHoursPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTReadHoursPart"}, 
	operator System.String.ReadValue(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator System.ToLong(const System.Decimal) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.Integer(const System.Short) class "MSSQLDevice.MSSQLToInt", 
	operator iPower(const System.Integer, const System.Integer) class "SQLDevice.MSSQLPower", 
	operator iExtend(presentation) class "SQLDevice.SQLExtend", 
	operator System.ToInteger(const System.Short) class "MSSQLDevice.MSSQLToInt", 
	operator iJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.DateTime.ReadYearsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Year"}, 
	operator System.Math.Ln(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log"}, 
	operator System.TimeSpan.WriteMillisecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteMillisecondsPart"}, 
	operator System.Short.ReadValue(const System.Short) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToDecimal(const System.Long) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.AddYears(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_AddYears"}, 
	operator System.Guid.ReadValue(const System.Guid) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRightJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.Abs(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator System.TimeSpan.WriteHoursPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_TSWriteHoursPart"}, 
	operator System.ToString(const System.Boolean) class "SQLDevice.SQLBooleanToString", 
	operator System.String(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator System.Decimal.WriteValue(const System.Decimal, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.ToString(const System.Money) class "MSSQLDevice.MSSQLToString", 
	operator System.DateTime.WriteMonthsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "dbo.DAE_DTWriteMonthsPart"}, 
	operator System.ToByte(const System.Short) class "MSSQLDevice.MSSQLToByte", 
	operator System.Copy(const System.String, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLCopy", 
	operator iUnion(table, table) class "SQLDevice.SQLUnion"
}
 reconciliation {mode = {command}, master = device} class "MSSQLDevice.MSSQLDevice" attributes{"ServerName" = ".", "DatabaseName" = "pubs", "IsCaseSensitive" = "true"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

// MSSQL device, version 70

create device MSSQL
{
	domain System.Integer class "SQLDevice.SQLInteger", 
	domain System.Decimal class "SQLDevice.SQLDecimal", 
	domain System.Binary class "MSSQLDevice.MSSQLBinary", 
	domain System.TimeSpan class "SQLDevice.SQLTimeSpan", 
	domain System.Byte class "MSSQLDevice.MSSQLByte", 
	domain System.DateTime class "MSSQLDevice.MSSQLDateTime", 
	domain System.Boolean class "MSSQLDevice.MSSQLBoolean", 
	domain System.IString class "MSSQLDevice.MSSQLString", 
	domain System.Long class "SQLDevice.SQLLong", 
	domain System.Money class "MSSQLDevice.MSSQLMoney", 
	domain System.Short class "SQLDevice.SQLShort", 
	domain System.Guid class "MSSQLDevice.MSSQLGuid", 
	operator System.Copy(const System.IString, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLCopy", 
	operator System.Decimal(const System.Long) class "MSSQLDevice.MSSQLToDecimal288", 
	operator System.IsNull(const System.Alpha) class "SQLDevice.SQLIsNull", 
	operator System.IString(const System.String) class "SQLDevice.SQLIStringSelector", 
	operator System.ToByte(const System.Long) class "MSSQLDevice.MSSQLToByte", 
	operator iRedefine(table) class "SQLDevice.SQLRedefine", 
	operator iDivision(const System.Integer, const System.Integer) class "SQLDevice.SQLIntegerDivision", 
	operator iCompare(const System.Integer, const System.Integer) class "SQLDevice.SQLCompare", 
	operator System.ToDecimal(const System.Money) class "MSSQLDevice.MSSQLToDecimal288", 
	operator IsSpecial(const System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iRestrict(presentation, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.TimeSpan.ReadMillisecondsPart(const System.TimeSpan) class "MSSQLDevice.TimeSpanReadMillisecondsPart", 
	operator iInclusiveLess(const System.Guid, const System.Guid) class "SQLDevice.SQLInclusiveLess", 
	operator System.DayOfWeek(const System.DateTime) class "MSSQLDevice.AddDayOfWeeks", 
	operator System.ToByte(const System.IString) class "MSSQLDevice.MSSQLToTinyInt", 
	operator System.TimeSpan.ReadDaysPart(const System.TimeSpan) class "MSSQLDevice.TimeSpanReadDaysPart", 
	operator iBitwiseNot(const System.Byte) class "SQLDevice.SQLBitwiseNot", 
	operator System.Long(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime.ReadDaysPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Day"}, 
	operator IsSpecial(const System.IString) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator IsSpecial(const System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteHoursPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteHoursPart", 
	operator System.Short(const System.Integer) class "MSSQLDevice.MSSQLToShort", 
	operator System.ToIString(const System.Long) class "MSSQLDevice.MSSQLToString", 
	operator System.TimeSpan.WriteSecondsPart(const System.TimeSpan, const System.Integer) class "MSSQLDevice.TimeSpanWriteSecondsPart", 
	operator System.ToLong(const System.Boolean) class "MSSQLDevice.MSSQLToBigInt", 
	operator iBitwiseNot(const System.Integer) class "SQLDevice.SQLBitwiseNot", 
	operator System.TimeSpan(const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan2Operands", 
	operator System.TimeSpan.Days(const System.Decimal) class "SQLDevice.SQLTimeSpanDays", 
	operator iNegate(const System.Short) class "SQLDevice.SQLNegate", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator System.ToShort(const System.Byte) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.DateTime.ReadMonthsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Month"}, 
	operator iInclusiveGreater(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLInclusiveGreater", 
	operator System.ToLong(const System.Decimal) class "MSSQLDevice.MSSQLToBigInt", 
	operator iBitwiseNot(const System.Long) class "SQLDevice.SQLBitwiseNot", 
	operator System.Sum(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator System.ToInteger(const System.Boolean) class "MSSQLDevice.MSSQLToInt", 
	operator System.AddMonths(const System.DateTime, const System.Integer) class "MSSQLDevice.AddMonths", 
	operator System.DateTime.WriteMonthsPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteMonthsPart", 
	operator iRename(presentation) class "SQLDevice.SQLRename", 
	operator iInclusiveGreater(const System.Long, const System.Long) class "SQLDevice.SQLInclusiveGreater", 
	operator iCompare(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCompare", 
	operator iMultiplication(const System.Integer, const System.Money) class "SQLDevice.SQLMultiplication", 
	operator iGreater(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLGreater", 
	operator System.Avg(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iAddition(const System.Money, const System.Money) class "SQLDevice.SQLAddition", 
	operator iAddition(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLAddition", 
	operator System.Byte.ReadValue(const System.Byte) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Max(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iRestrict(table, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator iAddition(const System.Integer, const System.Integer) class "SQLDevice.SQLAddition", 
	operator System.Pos(const System.IString, const System.IString) class "MSSQLDevice.MSSQLPos", 
	operator iSubtraction(const System.Byte, const System.Byte) class "SQLDevice.SQLSubtraction", 
	operator iEqual(const System.Long, const System.Long) class "SQLDevice.SQLEqual", 
	operator iMultiplication(const System.Byte, const System.Byte) class "SQLDevice.SQLMultiplication", 
	operator iCompare(const System.Money, const System.Money) class "SQLDevice.SQLCompare", 
	operator iSubtraction(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLSubtraction", 
	operator System.ToInteger(const System.Short) class "MSSQLDevice.MSSQLToInt", 
	operator System.AddTicks(const System.TimeSpan, const System.Long) class "SQLDevice.SQLTimeSpanAddTicks", 
	operator System.IndexOf(const System.IString, const System.IString) class "MSSQLDevice.MSSQLIndexOf", 
	operator System.TimeSpan.ReadHoursPart(const System.TimeSpan) class "MSSQLDevice.TimeSpanReadHoursPart", 
	operator System.TimeSpan.ReadTicks(const System.TimeSpan) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToIString(const System.Boolean) class "SQLDevice.SQLBooleanToString", 
	operator System.Max(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator System.Sum(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator System.DateTime.WriteSecondsPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteSecondsPart", 
	operator System.Long.WriteValue(const System.Long, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.ToMoney(const System.Integer) class "MSSQLDevice.MSSQLToMoney", 
	operator System.DateTime.ReadSecondsPart(const System.DateTime) class "MSSQLDevice.MSSQLDateTimeReadSecondsPart", 
	operator System.Integer.WriteValue(const System.Integer, const System.Integer) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iBitwiseXor(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseXor", 
	operator iLess(const System.Byte, const System.Byte) class "SQLDevice.SQLLess", 
	operator System.ToBoolean(const System.Long) class "MSSQLDevice.MSSQLToBit", 
	operator iEqual(const System.IString, const System.IString) class "SQLDevice.SQLEqual", 
	operator iNotEqual(const System.Byte, const System.Byte) class "SQLDevice.SQLNotEqual", 
	operator System.ToLong(const System.Money) class "MSSQLDevice.MSSQLToBigInt", 
	operator iAddition(const System.IString, const System.IString) class "SQLDevice.SQLAddition", 
	operator iRetrieve() class "MSSQLDevice.MSSQLRetrieve", 
	operator iGreater(const System.Byte, const System.Byte) class "SQLDevice.SQLGreater", 
	operator System.TimeSpan.ReadDays(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadDays", 
	operator System.Money.WriteValue(const System.Money, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iMultiplication(const System.Decimal, const System.Money) class "SQLDevice.SQLMultiplication", 
	operator System.TimeSpan.WriteTicks(const System.TimeSpan, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iAdorn(table) class "SQLDevice.SQLAdorn", 
	operator System.ToInteger(const System.IString) class "MSSQLDevice.MSSQLToInt", 
	operator System.TimeSpan.ReadMinutesPart(const System.TimeSpan) class "MSSQLDevice.TimeSpanReadMinutesPart", 
	operator iInclusiveGreater(const System.Money, const System.Money) class "SQLDevice.SQLInclusiveGreater", 
	operator iMod(const System.Short, const System.Short) class "SQLDevice.SQLMod", 
	operator iPower(const System.Integer, const System.Integer) class "SQLDevice.MSSQLPower", 
	operator System.TimeSpan.WriteMilliseconds(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteMilliseconds", 
	operator System.ToLong(const System.IString) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.DatePart(const System.DateTime) class "MSSQLDevice.MSSQLDateTimeDatePart", 
	operator System.DateTime.WriteDaysPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteDaysPart", 
	operator iGreater(const System.Decimal, const System.Decimal) class "SQLDevice.SQLGreater", 
	operator iNotEqual(const System.Integer, const System.Integer) class "SQLDevice.SQLNotEqual", 
	operator System.DateTime(const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator iInclusiveLess(const System.Integer, const System.Integer) class "SQLDevice.SQLInclusiveLess", 
	operator System.Boolean.WriteValue(const System.Boolean, const System.Boolean) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iBitwiseXor(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseXor", 
	operator System.ToInteger(const System.Long) class "MSSQLDevice.MSSQLToInteger", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan5Operands", 
	operator iLeftJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator iGreater(const System.IString, const System.IString) class "SQLDevice.SQLGreater", 
	operator iBitwiseAnd(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseAnd", 
	operator System.Byte(const System.Byte) class "SQLDevice.SQLScalarSelector", 
	operator iJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.Count(const System.Scalar) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Count"}, 
	operator iCompare(const System.IString, const System.IString) class "SQLDevice.SQLCompare", 
	operator iPower(const System.Long, const System.Long) class "SQLDevice.MSSQLPower", 
	operator System.IfNull(const System.Alpha, const System.Alpha) class "SQLDevice.SQLIfNull", 
	operator System.Math.Log(const System.Decimal, const System.Decimal) class "MSSQLDevice.MSSQLLogB", 
	operator System.DayOfMonth(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Day"}, 
	operator System.Integer.ReadValue(const System.Integer) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime.ReadMinutesPart(const System.DateTime) class "MSSQLDevice.MSSQLDateTimeReadMinutesPart", 
	operator iSubtraction(const System.Decimal, const System.Decimal) class "SQLDevice.SQLSubtraction", 
	operator iJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.Money.ReadValue(const System.Money) class "SQLDevice.SQLScalarReadAccessor", 
	operator IsSpecial(const System.Short) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iMultiplication(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator iGreater(const System.Short, const System.Short) class "SQLDevice.SQLGreater", 
	operator System.Decimal.WriteValue(const System.Decimal, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iInclusiveGreater(const System.Decimal, const System.Decimal) class "SQLDevice.SQLInclusiveGreater", 
	operator iNotEqual(const System.Money, const System.Money) class "SQLDevice.SQLNotEqual", 
	operator iDivision(const System.Money, const System.Decimal) class "SQLDevice.SQLDivision", 
	operator iEqual(const System.Boolean, const System.Boolean) class "SQLDevice.SQLEqual", 
	operator iDiv(const System.Decimal, const System.Decimal) class "SQLDevice.SQLDiv", 
	operator IsSpecial(const System.Alpha) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Now() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "GetDate"}, 
	operator System.Short.WriteValue(const System.Short, const System.Short) class "SQLDevice.SQLScalarWriteAccessor", 
	operator IsSpecial(const System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.ToIString(const System.Byte) class "MSSQLDevice.MSSQLToString", 
	operator iNotEqual(const System.Short, const System.Short) class "SQLDevice.SQLNotEqual", 
	operator iCompare(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLCompare", 
	operator iJoin(table, table) class "SQLDevice.SQLJoin", 
	operator iXor(const System.Boolean, const System.Boolean) class "SQLDevice.SQLXor", 
	operator iSubtraction(const System.Money, const System.Money) class "SQLDevice.SQLSubtraction", 
	operator System.Max(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator System.TimeSpan.WriteDaysPart(const System.TimeSpan, const System.Integer) class "MSSQLDevice.TimeSpanWriteDaysPart", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime2Operands", 
	operator System.Math.Exp(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Exp"}, 
	operator iShiftLeft(const System.Integer, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iInclusiveLess(const System.Short, const System.Short) class "SQLDevice.SQLInclusiveLess", 
	operator System.Short(const System.Byte) class "MSSQLDevice.MSSQLToSmallInt", 
	operator iDivision(const System.Money, const System.Integer) class "SQLDevice.SQLDivision", 
	operator IsSpecial(const System.Long) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iInclusiveLess(const System.Decimal, const System.Decimal) class "SQLDevice.SQLInclusiveLess", 
	operator System.TimeSpan.WriteMinutesPart(const System.TimeSpan, const System.Integer) class "MSSQLDevice.TimeSpanWriteMinutesPart", 
	operator System.DateTime(const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator iNotEqual(const System.Boolean, const System.Boolean) class "SQLDevice.SQLNotEqual", 
	operator iShiftLeft(const System.Long, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iRename(table) class "SQLDevice.SQLRename", 
	operator iDiv(const System.Integer, const System.Integer) class "SQLDevice.SQLDivision", 
	operator iAddition(const System.Decimal, const System.Decimal) class "SQLDevice.SQLAddition", 
	operator System.ToIString(const System.Integer) class "MSSQLDevice.MSSQLToString", 
	operator iAnd(const System.Boolean, const System.Boolean) class "SQLDevice.SQLAnd", 
	operator iBitwiseAnd(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseAnd", 
	operator System.ToByte(const System.Boolean) class "MSSQLDevice.MSSQLToTinyInt", 
	operator iRightJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator iRightJoin(table, table) class "SQLDevice.SQLJoin", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator iIn(const System.Scalar, const list(System.Alpha)) class "SQLDevice.SQLIn", 
	operator iGreater(const System.Long, const System.Long) class "SQLDevice.SQLGreater", 
	operator System.DateTime.WriteMillisecondsPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteMillisecondsPart", 
	operator System.Avg(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator iNegate(const System.Integer) class "SQLDevice.SQLNegate", 
	operator System.TimeSpan.Time(const System.Integer) class "SQLDevice.SQLTimeSpanTime1Operand", 
	operator iInclusiveLess(const System.IString, const System.IString) class "SQLDevice.SQLInclusiveLess", 
	operator System.ToIString(const System.Short) class "MSSQLDevice.MSSQLToString", 
	operator System.ToMoney(const System.Long) class "MSSQLDevice.MSSQLToMoney", 
	operator iAggregate(table) class "SQLDevice.SQLAggregate", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator System.Guid.ReadValue(const System.Guid) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.TimeSpan.ReadMilliseconds(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMilliseconds", 
	operator iInclusiveGreater(const System.Byte, const System.Byte) class "SQLDevice.SQLInclusiveGreater", 
	operator iEqual(const System.Short, const System.Short) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.WriteDays(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteDays", 
	operator iInclusiveLess(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLInclusiveLess", 
	operator System.ToLong(const System.Integer) class "MSSQLDevice.MSSQLToBigInt", 
	operator iDivision(const System.Byte, const System.Byte) class "SQLDevice.SQLIntegerDivision", 
	operator System.Sum(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator iInclusiveGreater(const System.Integer, const System.Integer) class "SQLDevice.SQLInclusiveGreater", 
	operator iAddition(const System.Byte, const System.Byte) class "SQLDevice.SQLAddition", 
	operator System.TimeSpan.WriteHours(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteHours", 
	operator iAggregate(presentation) class "SQLDevice.SQLAggregate", 
	operator System.Max(const System.IString) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iInclusiveLess(const System.Long, const System.Long) class "SQLDevice.SQLInclusiveLess", 
	operator iExtend(table) class "SQLDevice.SQLExtend", 
	operator iShiftRight(const System.Long, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iLess(const System.Money, const System.Money) class "SQLDevice.SQLLess", 
	operator iSubtraction(const System.Short, const System.Short) class "SQLDevice.SQLSubtraction", 
	operator System.DateTime.ReadMillisecondsPart(const System.DateTime) class "MSSQLDevice.MSSQLDateTimeReadMillisecondsPart", 
	operator iCompare(const System.Short, const System.Short) class "SQLDevice.SQLCompare", 
	operator System.TimeSpan.Minutes(const System.Decimal) class "SQLDevice.SQLTimeSpanMinutes", 
	operator iShiftLeft(const System.Byte, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator System.ToBoolean(const System.Short) class "MSSQLDevice.MSSQLToBit", 
	operator iMod(const System.Byte, const System.Byte) class "SQLDevice.SQLMod", 
	operator System.ToShort(const System.Boolean) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.TimeSpan(const System.Integer) class "SQLDevice.SQLTimeSpan1Operand", 
	operator iLess(const System.Short, const System.Short) class "SQLDevice.SQLLess", 
	operator System.Max(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Max"}, 
	operator iMultiplication(const System.Short, const System.Short) class "SQLDevice.SQLMultiplication", 
	operator iMod(const System.Long, const System.Long) class "SQLDevice.SQLMod", 
	operator iNotEqual(const System.Guid, const System.Guid) class "SQLDevice.SQLNotEqual", 
	operator System.TimeSpan.ReadHours(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadHours", 
	operator iInclusiveLess(const System.Money, const System.Money) class "SQLDevice.SQLInclusiveLess", 
	operator iDiv(const System.Byte, const System.Byte) class "SQLDevice.SQLDivision", 
	operator iUnion(table, table) class "SQLDevice.SQLUnion", 
	operator iLeftJoin(table, table) class "SQLDevice.SQLJoin", 
	operator System.Math.Log10(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log10"}, 
	operator iLess(const System.IString, const System.IString) class "SQLDevice.SQLLess", 
	operator iNegate(const System.Long) class "SQLDevice.SQLNegate", 
	operator System.TimeSpan.Ticks(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator iMultiplication(const System.Integer, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator iInclusiveGreater(const System.Short, const System.Short) class "SQLDevice.SQLInclusiveGreater", 
	operator System.Ceiling(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ceiling"}, 
	operator System.Round(const System.Decimal, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Round"}, 
	operator iInclusiveLess(const System.Byte, const System.Byte) class "SQLDevice.SQLInclusiveLess", 
	operator iMod(const System.Integer, const System.Integer) class "SQLDevice.SQLMod", 
	operator System.Min(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iGreater(const System.Guid, const System.Guid) class "SQLDevice.SQLGreater", 
	operator iBitwiseNot(const System.Short) class "SQLDevice.SQLBitwiseNot", 
	operator System.Count() class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Count"}, 
	operator System.ToMoney(const System.Decimal) class "MSSQLDevice.MSSQLToMoney", 
	operator System.Boolean.ReadValue(const System.Boolean) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToLong(const System.Short) class "MSSQLDevice.MSSQLToBigInt", 
	operator iLess(const System.Boolean, const System.Boolean) class "SQLDevice.SQLLess", 
	operator iMultiplication(const System.Decimal, const System.Decimal) class "SQLDevice.SQLMultiplication", 
	operator iOr(const System.Boolean, const System.Boolean) class "SQLDevice.SQLOr", 
	operator iOrder(presentation) class "SQLDevice.SQLOrder", 
	operator System.DateTime.ReadYearsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Year"}, 
	operator iBitwiseOr(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseOr", 
	operator iRightJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator iProject(table) class "SQLDevice.SQLProject", 
	operator iPower(const System.Short, const System.Short) class "SQLDevice.MSSQLPower", 
	operator iBitwiseAnd(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseAnd", 
	operator System.Today() class "MSSQLDevice.MSSQLToday", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime4Operands", 
	operator iCompare(const System.Boolean, const System.Boolean) class "SQLDevice.SQLCompare", 
	operator System.Long(const System.Integer) class "MSSQLDevice.MSSQLToBigInt", 
	operator iNotEqual(const System.Decimal, const System.Decimal) class "SQLDevice.SQLNotEqual", 
	operator iGreater(const System.Integer, const System.Integer) class "SQLDevice.SQLGreater", 
	operator iLess(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLLess", 
	operator iUnion(presentation, presentation) class "SQLDevice.SQLUnion", 
	operator iRemove(presentation) class "SQLDevice.SQLProject", 
	operator System.AddYears(const System.DateTime, const System.Integer) class "MSSQLDevice.AddYears", 
	operator iLike(const System.IString, const System.IString) class "SQLDevice.SQLLike", 
	operator iBitwiseXor(const System.Byte, const System.Byte) class "SQLDevice.SQLBitwiseXor", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan3Operands", 
	operator System.TimeSpan.ReadMinutes(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadMinutes", 
	operator System.Short.ReadValue(const System.Short) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.ToBoolean(const System.Integer) class "MSSQLDevice.MSSQLToBit", 
	operator iShiftRight(const System.Byte, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator System.Math.Random() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Rand"}, 
	operator System.Sum(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Sum"}, 
	operator IsSpecial(const System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.ToInteger(const System.Money) class "MSSQLDevice.MSSQLToInt", 
	operator iNotEqual(const System.IString, const System.IString) class "SQLDevice.SQLNotEqual", 
	operator System.TimeSpan.Milliseconds(const System.Decimal) class "SQLDevice.SQLTimeSpanMilliseconds", 
	operator iJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator iNotEqual(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLNotEqual", 
	operator System.ToShort(const System.Long) class "MSSQLDevice.MSSQLToShort", 
	operator iDiv(const System.Short, const System.Short) class "SQLDevice.SQLDivision", 
	operator iInclusiveGreater(const System.Boolean, const System.Boolean) class "SQLDevice.SQLInclusiveGreater", 
	operator System.DateTime.WriteYearsPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteYearsPart", 
	operator iBitwiseAnd(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseAnd", 
	operator System.Long.ReadValue(const System.Long) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.TimeSpan.WriteMillisecondsPart(const System.TimeSpan, const System.Integer) class "MSSQLDevice.TimeSpanWriteMillisecondsPart", 
	operator System.ToShort(const System.Integer) class "MSSQLDevice.MSSQLToShort", 
	operator System.Abs(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iLeftJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator iExtend(presentation) class "SQLDevice.SQLExtend", 
	operator iShiftRight(const System.Integer, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator iInclusiveGreater(const System.Guid, const System.Guid) class "SQLDevice.SQLInclusiveGreater", 
	operator iDivision(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLIntegerDivision", 
	operator iLeftJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.Integer(const System.Long) class "MSSQLDevice.MSSQLToInteger", 
	operator System.Guid(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator iDivision(const System.Short, const System.Short) class "SQLDevice.SQLIntegerDivision", 
	operator IsSpecial(const System.Money) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iIn(const System.Scalar, const presentation) class "SQLDevice.SQLIn", 
	operator iEqual(const System.Byte, const System.Byte) class "SQLDevice.SQLEqual", 
	operator System.Guid.WriteValue(const System.Guid, const System.String) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iInclusiveGreater(const System.IString, const System.IString) class "SQLDevice.SQLInclusiveGreater", 
	operator iRedefine(presentation) class "SQLDevice.SQLRedefine", 
	operator System.Min(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator System.ToByte(const System.Integer) class "MSSQLDevice.MSSQLToByte", 
	operator System.TimeSpan.Time(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpanTime3Operands", 
	operator System.ToShort(const System.IString) class "MSSQLDevice.MSSQLToSmallInt", 
	operator System.Min(const System.IString) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator System.Avg(const System.Decimal) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator System.TimeSpan.ReadSecondsPart(const System.TimeSpan) class "MSSQLDevice.TimeSpanReadSecondsPart", 
	operator System.Boolean(const System.Boolean) class "SQLDevice.SQLScalarSelector", 
	operator System.TimeSpan.Seconds(const System.Decimal) class "SQLDevice.SQLTimeSpanSeconds", 
	operator iLess(const System.Integer, const System.Integer) class "SQLDevice.SQLLess", 
	operator iBitwiseOr(const System.Long, const System.Long) class "SQLDevice.SQLBitwiseOr", 
	operator IsSpecial(const System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Min(const System.TimeSpan) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator iDivision(const System.Decimal, const System.Decimal) class "SQLDevice.SQLDivision", 
	operator System.TimePart(const System.DateTime) class "MSSQLDevice.MSSQLDateTimePart", 
	operator iIn(const System.Scalar, const table) class "SQLDevice.SQLIn", 
	operator iDiv(const System.Long, const System.Long) class "SQLDevice.SQLDivision", 
	operator System.Floor(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Floor"}, 
	operator System.Decimal.ReadValue(const System.Decimal) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.TimeSpan.ReadSeconds(const System.TimeSpan) class "SQLDevice.SQLTimeSpanReadSeconds", 
	operator System.Truncate(const System.Decimal) class "MSSQLDevice.MSSQLTruncate", 
	operator System.ToDecimal(const System.Long) class "MSSQLDevice.MSSQLToDecimal288", 
	operator iNot(const System.Boolean) class "SQLDevice.SQLNot", 
	operator iGreater(const System.Money, const System.Money) class "SQLDevice.SQLGreater", 
	operator System.ToIString(const System.Decimal) class "MSSQLDevice.MSSQLToString", 
	operator System.Abs(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iLess(const System.Decimal, const System.Decimal) class "SQLDevice.SQLLess", 
	operator iCompare(const System.Byte, const System.Byte) class "SQLDevice.SQLCompare", 
	operator System.TimeSpan.WriteMinutes(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteMinutes", 
	operator System.ToLong(const System.Byte) class "MSSQLDevice.MSSQLToBigInt", 
	operator iEqual(const System.TimeSpan, const System.TimeSpan) class "SQLDevice.SQLEqual", 
	operator iBitwiseOr(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseOr", 
	operator System.Length(const System.IString) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Len"}, 
	operator iLess(const System.Guid, const System.Guid) class "SQLDevice.SQLLess", 
	operator iProject(presentation) class "SQLDevice.SQLProject", 
	operator System.ToInteger(const System.Byte) class "MSSQLDevice.MSSQLToInt", 
	operator System.TimeSpan.WriteSeconds(const System.TimeSpan, const System.Decimal) class "SQLDevice.SQLTimeSpanWriteSeconds", 
	operator iMultiplication(const System.Money, const System.Decimal) class "SQLDevice.SQLMultiplication", 
	operator System.Min(const System.Integer) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Min"}, 
	operator System.Upper(const System.IString) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Upper"}, 
	operator iDivision(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLIntegerDivision", 
	operator iCompare(const System.Guid, const System.Guid) class "SQLDevice.SQLCompare", 
	operator iShiftLeft(const System.Short, const System.Integer) class "SQLDevice.SQLLeftShift", 
	operator iAddition(const System.Long, const System.Long) class "SQLDevice.SQLAddition", 
	operator System.ToDecimal(const System.Integer) class "MSSQLDevice.MSSQLToDecimal288", 
	operator iEqual(const System.Guid, const System.Guid) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.WriteHoursPart(const System.TimeSpan, const System.Integer) class "MSSQLDevice.TimeSpanWriteHoursPart", 
	operator iAdorn(presentation) class "SQLDevice.SQLAdorn", 
	operator iShiftRight(const System.Short, const System.Integer) class "SQLDevice.SQLRightShift", 
	operator System.ToGuid(const System.IString) class "MSSQLDevice.MSSQLToUniqueIdentifier", 
	operator iMultiplication(const System.Integer, const System.TimeSpan) class "SQLDevice.SQLMultiplication", 
	operator System.DateTime.WriteMinutesPart(const System.DateTime, const System.Integer) class "MSSQLDevice.MSSQLDateTimeWriteMinutesPart", 
	operator iInclusiveLess(const System.Boolean, const System.Boolean) class "SQLDevice.SQLInclusiveLess", 
	operator System.Avg(const System.Money) class "SQLDevice.SQLAggregateOperator" attributes{"OperatorName" = "Avg"}, 
	operator System.ToIString(const System.Money) class "MSSQLDevice.MSSQLToString", 
	operator System.Long(const System.Decimal) class "MSSQLDevice.MSSQLToBigInt", 
	operator System.ToByte(const System.Short) class "MSSQLDevice.MSSQLToByte", 
	operator iDivision(const System.Long, const System.Long) class "SQLDevice.SQLIntegerDivision", 
	operator iRemove(table) class "SQLDevice.SQLProject", 
	operator iAddition(const System.Short, const System.Short) class "SQLDevice.SQLAddition", 
	operator System.Math.Ln(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log"}, 
	operator iGreater(const System.Boolean, const System.Boolean) class "SQLDevice.SQLGreater", 
	operator System.Lower(const System.IString) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Lower"}, 
	operator iBitwiseXor(const System.Short, const System.Short) class "SQLDevice.SQLBitwiseXor", 
	operator iMultiplication(const System.Long, const System.Long) class "SQLDevice.SQLMultiplication", 
	operator System.ToBoolean(const System.Byte) class "MSSQLDevice.MSSQLToBit", 
	operator iEqual(const System.Decimal, const System.Decimal) class "SQLDevice.SQLEqual", 
	operator iCompare(const System.Long, const System.Long) class "SQLDevice.SQLCompare", 
	operator iPower(const System.Decimal, const System.Decimal) class "SQLDevice.MSSQLPower", 
	operator System.Byte(const System.Short) class "MSSQLDevice.MSSQLToByte", 
	operator iMultiplication(const System.Money, const System.Integer) class "SQLDevice.SQLMultiplication", 
	operator System.ToInteger(const System.Decimal) class "MSSQLDevice.MSSQLToInt", 
	operator iPower(const System.Byte, const System.Byte) class "SQLDevice.MSSQLPower", 
	operator iOrder(table) class "SQLDevice.SQLOrder", 
	operator System.Short(const System.Short) class "SQLDevice.SQLScalarSelector", 
	operator iSubtraction(const System.Long, const System.Long) class "SQLDevice.SQLSubtraction", 
	operator iExists(table) class "SQLDevice.SQLExists", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator IsSpecial(const System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iSubtraction(const System.Integer, const System.Integer) class "SQLDevice.SQLSubtraction", 
	operator System.Frac(const System.Decimal) class "MSSQLDevice.MSSQLFrac", 
	operator System.TimeSpan(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLTimeSpan4Operands", 
	operator System.Duration(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator System.Integer(const System.Integer) class "SQLDevice.SQLScalarSelector", 
	operator iExists(presentation) class "SQLDevice.SQLExists", 
	operator iLess(const System.Long, const System.Long) class "SQLDevice.SQLLess", 
	operator iEqual(const System.Integer, const System.Integer) class "SQLDevice.SQLEqual", 
	operator System.Integer(const System.Short) class "MSSQLDevice.MSSQLToInt", 
	operator iRightJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.DayOfYear(const System.DateTime) class "MSSQLDevice.AddDayOfYear", 
	operator System.DateTime.ReadHoursPart(const System.DateTime) class "MSSQLDevice.MSSQLDateTimeReadHoursPart", 
	operator System.Money(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "MSSQLDevice.MSSQLDateTimeSelector", 
	operator System.CompareText(const System.IString, const System.IString) class "SQLDevice.SQLCompare", 
	operator System.Decimal(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.ToIString(const System.Guid) class "MSSQLDevice.MSSQLToString", 
	operator iNotEqual(const System.Long, const System.Long) class "SQLDevice.SQLNotEqual", 
	operator iBitwiseOr(const System.Integer, const System.Integer) class "SQLDevice.SQLBitwiseOr", 
	operator iEqual(const System.Money, const System.Money) class "SQLDevice.SQLEqual", 
	operator System.TimeSpan.Hours(const System.Decimal) class "SQLDevice.SQLTimeSpanHours", 
	operator System.Byte.WriteValue(const System.Byte, const System.Byte) class "SQLDevice.SQLScalarWriteAccessor"
}
 reconciliation {mode = {none}, master = device} class "MSSQLDevice.MSSQLDevice" attributes{"ServerName" = ".", "DatabaseName" = "Shipping", "IsMSSQL70" = "true"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('MSSQL'), 'sa', '', '');
CreateDeviceUserWithEncryptedPassword('System', Name('MSSQL'), 'sa', '', '');


// Oracle device, case-insensitive

create device TestDevice
{
	domain System.Integer class "OracleDevice.OracleInteger", 
	domain System.Decimal class "SQLDevice.SQLDecimal", 
	domain System.Binary class "SQLDevice.SQLBinary", 
	domain System.TimeSpan class "OracleDevice.OracleTimeSpan", 
	domain System.Byte class "OracleDevice.OracleByte", 
	domain System.DateTime class "SQLDevice.SQLDateTime", 
	domain System.Boolean class "OracleDevice.OracleBoolean", 
	domain System.Long class "OracleDevice.OracleLong", 
	domain System.Money class "SQLDevice.SQLMoney", 
	domain System.Short class "OracleDevice.OracleShort", 
	domain System.String class "SQLDevice.SQLString", 
	domain System.Guid class "SQLDevice.SQLGuid", 
	operator IsSpecial(const System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.AddMonths(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Add_Months"}, 
	operator iLeftJoin(presentation, table) class "OracleDevice.OracleJoin", 
	operator System.Decimal.ReadValue(const System.Decimal) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DatePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Trunc"}, 
	operator System.Short.WriteValue(const System.Short, const System.Short) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iOrder(presentation) class "SQLDevice.SQLOrder", 
	operator iRename(presentation) class "SQLDevice.SQLRename", 
	operator iDifference(table, table) class "SQLDevice.SQLDifference", 
	operator System.DateTime.WriteMillisecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteMillisecondsPart"}, 
	operator iLeftJoin(table, table) class "OracleDevice.OracleJoin", 
	operator iPower(const System.Decimal, const System.Decimal) class "SQLDevice.SQLPower", 
	operator IsSpecial(const System.Long) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Math.Log(const System.Decimal, const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_LogB"}, 
	operator System.DateTime.ReadHoursPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadHoursPart"}, 
	operator System.AddYears(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_AddYears"}, 
	operator System.IsLeapYear(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_IsLeapYear"}, 
	operator System.Money.ReadValue(const System.Money) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Integer.ReadValue(const System.Integer) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Now() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "SysDate"}, 
	operator System.DayOfMonth(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadDaysPart"}, 
	operator iPower(const System.Byte, const System.Byte) class "SQLDevice.SQLPower", 
	operator iUnion(table, table) class "SQLDevice.SQLUnion", 
	operator iRemove(table) class "SQLDevice.SQLProject", 
	operator iJoin(table, presentation) class "OracleDevice.OracleJoin", 
	operator System.DateTime(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSDateTime"}, 
	operator System.TimeSpan.WriteDaysPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteDaysPart"}, 
	operator iJoin(table, table) class "OracleDevice.OracleJoin", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector7"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector3"}, 
	operator System.Short.ReadValue(const System.Short) class "SQLDevice.SQLScalarReadAccessor", 
	operator IsSpecial(const System.Alpha) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Boolean.ReadValue(const System.Boolean) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Long(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator System.Today() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Today"}, 
	operator System.TimePart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Frac"}, 
	operator System.Money.WriteValue(const System.Money, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iPower(const System.Integer, const System.Integer) class "SQLDevice.SQLPower", 
	operator System.Boolean.WriteValue(const System.Boolean, const System.Boolean) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Floor(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Floor"}, 
	operator System.TimeSpan.ReadDaysPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadDaysPart"}, 
	operator System.Math.Ln(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ln"}, 
	operator iLeftJoin(presentation, presentation) class "OracleDevice.OracleJoin", 
	operator System.TimeSpan.ReadHoursPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadHoursPart"}, 
	operator System.Decimal(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator IsSpecial(const System.Short) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.TimeSpan.WriteMillisecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteMillisecondsPart"}, 
	operator System.TimeSpan.ReadMillisecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadMillisecondsPart"}, 
	operator iPower(const System.Short, const System.Short) class "SQLDevice.SQLPower", 
	operator System.Guid.ReadValue(const System.Guid) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector4"}, 
	operator iDifference(presentation, presentation) class "SQLDevice.SQLDifference", 
	operator iExtend(presentation) class "SQLDevice.SQLExtend", 
	operator System.TimeSpan.WriteHoursPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteHoursPart"}, 
	operator iRedefine(table) class "SQLDevice.SQLRedefine", 
	operator System.DateTime.ReadYearsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadYearsPart"}, 
	operator System.DateTime.WriteDaysPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteDaysPart"}, 
	operator System.Guid.WriteValue(const System.Guid, const System.String) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Money(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime.ReadDaysPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadDaysPart"}, 
	operator IsSpecial(const System.Money) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector2"}, 
	operator System.Abs(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iLeftJoin(table, presentation) class "OracleDevice.OracleJoin", 
	operator System.Truncate(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Trunc"}, 
	operator IsSpecial(const System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.DateTime.WriteSecondsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteSecondsPart"}, 
	operator System.DateTime.ReadMillisecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadMillisecondsPart"}, 
	operator System.Math.Exp(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Exp"}, 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector6"}, 
	operator System.Integer.WriteValue(const System.Integer, const System.Integer) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.TimeSpan.WriteSecondsPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteSecondsPart"}, 
	operator System.DateTime.WriteHoursPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteHoursPart"}, 
	operator System.DateTime.ReadMonthsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadMonthsPart"}, 
	operator iRightJoin(table, table) class "OracleDevice.OracleJoin", 
	operator System.Math.Random() class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Random"}, 
	operator IsSpecial(const System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iRedefine(presentation) class "SQLDevice.SQLRedefine", 
	operator System.Ceiling(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ceil"}, 
	operator System.Boolean(const System.Boolean) class "SQLDevice.SQLScalarSelector", 
	operator iRename(table) class "SQLDevice.SQLRename", 
	operator System.Math.Factorial(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Factorial"}, 
	operator System.Math.Log10(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log"}, 
	operator iProject(table) class "SQLDevice.SQLProject", 
	operator System.Integer(const System.Integer) class "SQLDevice.SQLScalarSelector", 
	operator System.DayOfYear(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DayOfYear"}, 
	operator iProject(presentation) class "SQLDevice.SQLProject", 
	operator IsSpecial(const System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iPower(const System.Long, const System.Long) class "SQLDevice.SQLPower", 
	operator iRestrict(presentation, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.Short(const System.Short) class "SQLDevice.SQLScalarSelector", 
	operator System.Long.ReadValue(const System.Long) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.DateTime.WriteMinutesPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteMinutesPart"}, 
	operator System.DateTime.ReadMinutesPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadMinutesPart"}, 
	operator iRightJoin(table, presentation) class "OracleDevice.OracleJoin", 
	operator System.TimeSpan.WriteMinutesPart(const System.TimeSpan, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSWriteMinutesPart"}, 
	operator iRemove(presentation) class "SQLDevice.SQLProject", 
	operator iExtend(table) class "SQLDevice.SQLExtend", 
	operator iUnion(presentation, presentation) class "SQLDevice.SQLUnion", 
	operator System.DateTime(const System.Integer, const System.Integer, const System.Integer, const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector5"}, 
	operator iOrder(table) class "SQLDevice.SQLOrder", 
	operator System.DateTime.ReadSecondsPart(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTReadSecondsPart"}, 
	operator System.Abs(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iJoin(presentation, table) class "OracleDevice.OracleJoin", 
	operator System.Round(const System.Decimal, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Round"}, 
	operator iAggregate(table) class "SQLDevice.SQLAggregate", 
	operator System.Byte.ReadValue(const System.Byte) class "SQLDevice.SQLScalarReadAccessor", 
	operator IsSpecial(const System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iRetrieve() class "OracleDevice.OracleRetrieve", 
	operator System.Byte(const System.Byte) class "SQLDevice.SQLScalarSelector", 
	operator System.DateTime.WriteYearsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteYearsPart"}, 
	operator iRightJoin(presentation, table) class "OracleDevice.OracleJoin", 
	operator iRestrict(table, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator IsSpecial(const System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Decimal.WriteValue(const System.Decimal, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.DayOfWeek(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DayOfWeek"}, 
	operator System.TimeSpan.ReadSecondsPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadSecondsPart"}, 
	operator iAdorn(table) class "SQLDevice.SQLAdorn", 
	operator System.Byte.WriteValue(const System.Byte, const System.Byte) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.TimeSpan.ReadMinutesPart(const System.TimeSpan) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_TSReadMinutesPart"}, 
	operator System.DateTime(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DateTimeSelector1"}, 
	operator System.Long.WriteValue(const System.Long, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Frac(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_Frac"}, 
	operator System.Guid(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator iRightJoin(presentation, presentation) class "OracleDevice.OracleJoin", 
	operator System.DateTime.WriteMonthsPart(const System.DateTime, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTWriteMonthsPart"}, 
	operator iAdorn(presentation) class "SQLDevice.SQLAdorn", 
	operator System.TimeSpan(const System.DateTime) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DTTimeSpan"}, 
	operator System.DaysInMonth(const System.Integer, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "DAE_DaysInMonth"}, 
	operator iJoin(presentation, presentation) class "OracleDevice.OracleJoin", 
	operator iAggregate(presentation) class "SQLDevice.SQLAggregate"
}
 reconciliation {mode = {command}, master = device} class "OracleDevice.OracleDevice" attributes{"HostName" = "Sample"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

// Linter device, case-insensitive

create device TestDevice
{
	domain System.Integer class "SQLDevice.SQLInteger", 
	domain System.Decimal class "SQLDevice.SQLDecimal", 
	domain System.Binary class "SQLDevice.SQLBinary", 
	domain System.TimeSpan class "SQLDevice.SQLTimeSpan", 
	domain System.Byte class "SQLDevice.SQLByte", 
	domain System.DateTime class "SQLDevice.SQLDateTime", 
	domain System.Boolean class "SQLDevice.SQLBoolean", 
	domain System.Long class "SQLDevice.SQLLong", 
	domain System.Money class "SQLDevice.SQLMoney", 
	domain System.Short class "SQLDevice.SQLShort", 
	domain System.String class "SQLDevice.SQLString", 
	domain System.Guid class "SQLDevice.SQLGuid", 
	operator System.Byte(const System.Byte) class "SQLDevice.SQLScalarSelector", 
	operator iOrder(table) class "SQLDevice.SQLOrder", 
	operator System.Abs(const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iRename(presentation) class "SQLDevice.SQLRename", 
	operator iLeftJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator iRestrict(table, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator System.Short.WriteValue(const System.Short, const System.Short) class "SQLDevice.SQLScalarWriteAccessor", 
	operator IsSpecial(const System.Short) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iDifference(presentation, presentation) class "SQLDevice.SQLDifference", 
	operator System.Truncate(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Trunc"}, 
	operator IsSpecial(const System.Byte) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iDifference(table, table) class "SQLDevice.SQLDifference", 
	operator iAdorn(presentation) class "SQLDevice.SQLAdorn", 
	operator iExtend(table) class "SQLDevice.SQLExtend", 
	operator System.Money(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator System.Math.Log10(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Log"}, 
	operator System.Byte.WriteValue(const System.Byte, const System.Byte) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Long.ReadValue(const System.Long) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRemove(presentation) class "SQLDevice.SQLProject", 
	operator iAdorn(table) class "SQLDevice.SQLAdorn", 
	operator iProject(presentation) class "SQLDevice.SQLProject", 
	operator iUnion(table, table) class "SQLDevice.SQLUnion", 
	operator iJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.Byte.ReadValue(const System.Byte) class "SQLDevice.SQLScalarReadAccessor", 
	operator IsSpecial(const System.Decimal) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Guid.ReadValue(const System.Guid) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRetrieve() class "SQLDevice.SQLRetrieve", 
	operator System.Guid.WriteValue(const System.Guid, const System.String) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Decimal.ReadValue(const System.Decimal) class "SQLDevice.SQLScalarReadAccessor", 
	operator System.Long.WriteValue(const System.Long, const System.Long) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Ceiling(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ceil"}, 
	operator System.Decimal(const System.Decimal) class "SQLDevice.SQLScalarSelector", 
	operator IsSpecial(const System.Alpha) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Short.ReadValue(const System.Short) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRightJoin(table, table) class "SQLDevice.SQLJoin", 
	operator System.Abs(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Abs"}, 
	operator iRightJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.Decimal.WriteValue(const System.Decimal, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Long(const System.Long) class "SQLDevice.SQLScalarSelector", 
	operator System.Integer.WriteValue(const System.Integer, const System.Integer) class "SQLDevice.SQLScalarWriteAccessor", 
	operator IsSpecial(const System.Money) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Money.ReadValue(const System.Money) class "SQLDevice.SQLScalarReadAccessor", 
	operator iAggregate(table) class "SQLDevice.SQLAggregate", 
	operator iJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator iJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator IsSpecial(const System.Guid) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iJoin(table, table) class "SQLDevice.SQLJoin", 
	operator IsSpecial(const System.Integer) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator IsSpecial(const System.TimeSpan) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator System.Money.WriteValue(const System.Money, const System.Decimal) class "SQLDevice.SQLScalarWriteAccessor", 
	operator iRestrict(presentation, const System.Boolean) class "SQLDevice.SQLRestrict", 
	operator IsSpecial(const System.Long) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iExtend(presentation) class "SQLDevice.SQLExtend", 
	operator iRightJoin(presentation, table) class "SQLDevice.SQLJoin", 
	operator System.Boolean.WriteValue(const System.Boolean, const System.Boolean) class "SQLDevice.SQLScalarWriteAccessor", 
	operator System.Guid(const System.String) class "SQLDevice.SQLScalarSelector", 
	operator iOrder(presentation) class "SQLDevice.SQLOrder", 
	operator iLeftJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator iAggregate(presentation) class "SQLDevice.SQLAggregate", 
	operator System.Round(const System.Decimal, const System.Integer) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Round"}, 
	operator System.Integer.ReadValue(const System.Integer) class "SQLDevice.SQLScalarReadAccessor", 
	operator iLeftJoin(presentation, presentation) class "SQLDevice.SQLJoin", 
	operator System.Boolean(const System.Boolean) class "SQLDevice.SQLScalarSelector", 
	operator iRemove(table) class "SQLDevice.SQLProject", 
	operator System.Floor(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Floor"}, 
	operator System.Boolean.ReadValue(const System.Boolean) class "SQLDevice.SQLScalarReadAccessor", 
	operator iRightJoin(table, presentation) class "SQLDevice.SQLJoin", 
	operator System.Integer(const System.Integer) class "SQLDevice.SQLScalarSelector", 
	operator iProject(table) class "SQLDevice.SQLProject", 
	operator iRedefine(table) class "SQLDevice.SQLRedefine", 
	operator System.Short(const System.Short) class "SQLDevice.SQLScalarSelector", 
	operator iUnion(presentation, presentation) class "SQLDevice.SQLUnion", 
	operator System.Math.Ln(const System.Decimal) class "SQLDevice.SQLCallOperator" attributes{"OperatorName" = "Ln"}, 
	operator iRename(table) class "SQLDevice.SQLRename", 
	operator iRedefine(presentation) class "SQLDevice.SQLRedefine", 
	operator IsSpecial(const System.Boolean) class "SQLDevice.SQLScalarIsSpecialOperator", 
	operator iLeftJoin(table, table) class "SQLDevice.SQLJoin"
}
 reconciliation {mode = {command}, master = device} class "LinterDevice.LinterDevice" attributes{"DataSource" = "Sample"};
CreateDeviceUserWithEncryptedPassword('Admin', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', '');
CreateDeviceUserWithEncryptedPassword('System', Name('TestDevice'), 'db2admin', 'EKTXrVbWfF5H1/RKYYhX5uQ=', ''); 

