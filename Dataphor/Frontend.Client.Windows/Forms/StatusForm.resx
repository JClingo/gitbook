<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAgAoAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAgACAAIAAAACAgAAAAIAAAACAgAAAAIAAwMDAAMDcwADwyqYAgICAAP8A/wD/AAAA//8AAAD/
        AAAA//8AAAD/AP///wDw+/8ApKCgANTw/wCx4v8AjtT/AGvG/wBIuP8AJar/AACq/wAAktwAAHq5AABi
        lgAASnMAADJQANTj/wCxx/8Ajqv/AGuP/wBIc/8AJVf/AABV/wAASdwAAD25AAAxlgAAJXMAABlQANTU
        /wCxsf8Ajo7/AGtr/wBISP8AJSX/AAAA/wAAANwAAAC5AAAAlgAAAHMAAABQAOPU/wDHsf8Aq47/AI9r
        /wBzSP8AVyX/AFUA/wBJANwAPQC5ADEAlgAlAHMAGQBQAPDU/wDisf8A1I7/AMZr/wC4SP8AqiX/AKoA
        /wCSANwAegC5AGIAlgBKAHMAMgBQAP/U/wD/sf8A/47/AP9r/wD/SP8A/yX/AP8A/wDcANwAuQC5AJYA
        lgBzAHMAUABQAP/U8AD/seIA/47UAP9rxgD/SLgA/yWqAP8AqgDcAJIAuQB6AJYAYgBzAEoAUAAyAP/U
        4wD/sccA/46rAP9rjwD/SHMA/yVXAP8AVQDcAEkAuQA9AJYAMQBzACUAUAAZAP/U1AD/sbEA/46OAP9r
        awD/SEgA/yUlAP8AAADcAAAAuQAAAJYAAABzAAAAUAAAAP/j1AD/x7EA/6uOAP+PawD/c0gA/1clAP9V
        AADcSQAAuT0AAJYxAABzJQAAUBkAAP/w1AD/4rEA/9SOAP/GawD/uEgA/6olAP+qAADckgAAuXoAAJZi
        AABzSgAAUDIAAP//1AD//7EA//+OAP//awD//0gA//8lAP//AADc3AAAubkAAJaWAABzcwAAUFAAAPD/
        1ADi/7EA1P+OAMb/awC4/0gAqv8lAKr/AACS3AAAerkAAGKWAABKcwAAMlAAAOP/1ADH/7EAq/+OAI//
        awBz/0gAV/8lAFX/AABJ3AAAPbkAADGWAAAlcwAAGVAAANT/1ACx/7EAjv+OAGv/awBI/0gAJf8lAAD/
        AAAA3AAAALkAAACWAAAAcwAAAFAAANT/4wCx/8cAjv+rAGv/jwBI/3MAJf9XAAD/VQAA3EkAALk9AACW
        MQAAcyUAAFAZANT/8ACx/+IAjv/UAGv/xgBI/7gAJf+qAAD/qgAA3JIAALl6AACWYgAAc0oAAFAyANT/
        /wCx//8Ajv//AGv//wBI//8AJf//AAD//wAA3NwAALm5AACWlgAAc3MAAFBQAPLy8gDm5uYA2traAM7O
        zgDCwsIAtra2AKqqqgCenp4AkpKSAIaGhgB6enoAbm5uAGJiYgBWVlYASkpKAD4+PgAyMjIAJiYmABoa
        GgAODg4AERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERER7Ozs7BERERERERERERERERERERERERERERERERERERERERERERERERERERER
        Eezt7u7u7ezsEREREREREREREREREREREREREREREREREREREREREREREREREewREe729vb29u/sERER
        EREREREREREREREREREREREREREREREREREREREREezu8O3s7O/5+vv8/PHt7Ozt7ewRERERERERERER
        ERERERERERERERERERERERER7O729/Lv7/P5+fr7+xPv7vP37+7sERERERERERERERERERERERERERER
        ERERERHs7vb39vb09vj4+fn6+vn18/z/+O/u7BERERERERERERERERERERERERERERERERHt9vf09fb3
        9/f4+Pn5+vv7/P3+//fu7RERERERERHs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozw9vP09fX29vf3+Pj5+vr7+/z9
        /gD17BEREREREezt7e7u7u7u7u7u7u7u7u7u7u7u8fT09PX19vf39/j5+fr6+/v8/fvx7BERERER7Ozt
        7/Dw8PDw8PDw8PDw8PDw8PAH8fX19PT19fb39/j4+fn6+vv8+vHu7BERERER7vLz8/T09PT09PT09PT0
        9PT09PQK9vj08/T09QoK8/Hy9vn5+vr7+Afw7uwRERERIRwcHBwcHBwcHBwcHBwcHBwcHB72CvXyE/P0
        9PXz8O3s7fb5+fr6+/n6E+zsERERIRwcHBwcHBwcHBwcHBwcHBwcHPvx7wfyE/Pz9Ar0B+7s7PH4+fn6
        +vz+9e3sERERIRwcHBwcHBwcHBwcHBwcHBwcHfsH7wfx8hPz8x0K8e/t7O/4+Pn5+vr89O7sERERIRwc
        HBwcHBwcHBwcHBwcHBwcHfvw7/AH8fITE/Yd8/Du7fH4+Pj5+vr89O3sERERIRwcHBwcHBwcHBwcHB0d
        HR0cHPvu7e7wB/HyE/Qd9vIHB/X39/j4+fr78+zsERERIRwcHBwcHBwcHBwcHPf09AocHB7z8/QH8Afx
        8hP0CvTz9fb39/j49hPy7uwRERERIRwcHBwcHBwcHBwcHPYH7u4jHRwdHR707/Dx8vIT8/T19fX29/f4
        E+/sERERERERIRwcHBwcHBwcHBwcHPYH7uwiHRwcHR3x7u8H8fLyE/P09PUK9vf39gfu7BERERERIRwc
        HBwcHBwcHBwcHPYH7uzxHRwd9+/s7u/wB/HyE/Pz9PX1Cvb3+Pbv7BERERERIRwcHBwcHBwcHBwcHPYH
        7uzxHRwdChHs7e7v7/Dx8hPz9PT19Qr29/bu7BERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwdHvMR7O3v
        9PEH8fIT8/MT9PX29e/t7BERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHR7zEe0KHfbwB/HyE/Hu8PX1
        8O3sERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwe8/UdHCTv8Afx8u/sEe/v7ewRERERERERIRwc
        HBwcHBwcHBwcHPYH7uzxHRwcHBwcHRwcHBzv7wfx8u7sERERERERERERERERIRwcHBwcHBwcHBwcHPYH
        7uzxHRwcHBwcHBwcHBz2CvTz8e0RERERERERERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwc
        HBwcJPHv7RIRERERERERERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwcHBwcJAfu7RERERER
        ERERERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwcHBwcJAfu7RERERERERERERERERERIRwc
        HBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwcHBwcJAfu7RERERERERERERERERERIRwcHBwcHBwcHBwcHPYH
        7uzxHRwcHBwcHBwcHBwcJAfu7RERERERERERERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwc
        HBwcJAfu7RERERERERERERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwcHBwcJAfu7RERERER
        ERERERERERERIRwcHBwcHBwcHBwcHPYH7uzxHRwcHBwcHBwcHBwcJAfu7RERERERERERERERERERIRwc
        HBwcHBwcHBwcHAoH7uzxHRwcHBwcHBwcHBwcCgfu7RERERERERERERERERERIRwcHBwcHBwcHBwcHArx
        7+3xHRwcHBwcHBwcHBwcCgfu7BERERERERERERERERERIRwcHBwcHBwcHBwcHPbx8O7yHRwcHBwcHBwc
        HBwc9fDu7BERERERERERERERERERIRwcHBwcHBwcHBwcHPby8fD0HRwcHBwcHBwcHBwc9O/u7BERERER
        ERERERERERERIRwcHBwcHBwcHBwcHPbz8/MkHRwcHBwcHBwcHBwc8+/t7BERERERERERERERERERIRwc
        HBwcHBwcHBwcHBwkHBwcHBwcHBwcHBwcHBwc8e7sERERERERERERERERERERIRwcJBwcHBwcHBwcHBwc
        HBwcHBwcHBwcHBwcHBz17u3sERERERERERERERERERERIRscHCQcHBwcHBwcHBwcHBwcHBwcHBwcHBwc
        HCTw7ewRERERERERERERERERERERIRscHCQcHBwcHBwcHBwcHBwcHBwcHBwcHBwcCu/s7BERERERERER
        ERERERERERERIRsbHBwcHBwcHBwcHBwcHBwcHBwcHBwcHAry7ezsERERERERERERERERERERERERFRsb
        GxwkHBwcHBwkHCQkJBwcHAojI/Py7+wREREREREREREREREREREREREREREREhTs7O3t7e3t7e3t7e3t
        7ezs7OzsERERERERERERERERERERERERERERERERAAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA
        //8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAA
        AAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//AAAAAAAA//8AAAAAAAD//wAAAAAAAP//
</value>
  </data>
</root>