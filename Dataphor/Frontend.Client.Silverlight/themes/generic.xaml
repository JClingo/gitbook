<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Alphora.Dataphor.Frontend.Client.Silverlight"
	xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    >

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF7284D4" Offset="0"/>
                    <GradientStop Color="#FFDFE1EC" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF5251CE"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" BorderBrush="Black" Background="{TemplateBinding Background}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <Rectangle Margin="3" RadiusY="5" RadiusX="5" >
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#BFFFFFFF" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="0.289"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="5" RadiusY="5" IsHitTestVisible="false" Opacity="0"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="5" RadiusY="5" Margin="1" IsHitTestVisible="false" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF9092CB"/>
    </Style>

    <Style x:Key="TaskBarButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Value="#FF060C22" Property="BorderBrush"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>
                        <Rectangle x:Name="Highlight" Fill="#FFA7D6FF" RadiusX="2" RadiusY="2" Margin="1" Opacity="0"/>
                        <Rectangle x:Name="Selected" Fill="#19FFFFFF" Stroke="White" RadiusX="2" RadiusY="2" Margin="1" Opacity="0"/>
                        <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" IsHitTestVisible="false" Opacity="0"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="2" RadiusY="2" IsHitTestVisible="false" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <ItemsPanelTemplate x:Key="HorizontalItemsPanel">
        <StackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>

    <Style x:Key="TaskBar" TargetType="ListBox">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <local:ButtonScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" HorizontalContentAlignment="Left">
                            <ItemsPresenter/>
                        </local:ButtonScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TaskBarItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ToggleButton 
							x:Name="ItemButton" 
    						Content="{Binding DataContext.FormStack.CurrentItem.Title, RelativeSource={RelativeSource TemplatedParent}}" 
    						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
    						Padding="{TemplateBinding Padding}" 
							IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
							Style="{StaticResource TaskBarButton}" 
							/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonScrollViewerButtonStyle" TargetType="RepeatButton">
        <Setter Property="Background" Value="#FFB6BCE2"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FF9D9D9D"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundAnimation" Opacity="0" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="BreadCrumbListBoxStyle" TargetType="ListBox">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="{TemplateBinding Background}">
                        <local:ButtonScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" HorizontalContentAlignment="Left">
                            <ItemsPresenter/>
                        </local:ButtonScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#FF40449F"/>
    </Style>

    <local:FirstItemInvisibleConverter x:Key="FirstItemInvisibleConverter" />

    <Style x:Key="BreadCrumbItemContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid d:DesignHeight="35" d:DesignWidth="125" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#B0C5DBFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#80C5DBFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FFC38E43"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderThickness)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>2</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00" Value="#FFC38E43"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderThickness)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>2</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4,0" Orientation="Horizontal" Visibility="{Binding ., RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FirstItemInvisibleConverter}}">
                            <Path Data="M0,0 L3,5 L0,10 Z" Fill="Black" />
                            <Path Data="M0,0 L3,5 L0,10 Z" Fill="Black" />
                        </StackPanel>
                        <Border x:Name="border" Background="#70C5DBFF" BorderThickness="1" CornerRadius="2" BorderBrush="#FF5869B7" Grid.Column="1" >
                            <local:BreadCrumbFormItem Title="{Binding Title}" Form="{Binding .}" 
    								IsAcceptReject="{Binding IsAcceptReject}" IsFormEnabled="{Binding IsEnabled}" 
    								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
    								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#FF5769DC"/>
    </Style>

    <Style x:Key="StaticTextStyle" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="RowStyle" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>

    <Style TargetType="local:FormControl">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:FormControl">
					<Grid Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<local:Menu x:Name="Menu" VerticalAlignment="Top" HorizontalAlignment="Left">
							<local:MenuItem Header="Test 1" />
							<local:MenuItem Header="Test 2" >
								<local:MenuItem Header="Test 21" />
								<local:MenuItem Header="Test 22" />
								<local:MenuItem Header="Test 23" >
									<local:MenuItem Header="Test 231" >
										<local:MenuItem Header="Test 2311" />
										<local:MenuItem Header="Test 2312" />
									</local:MenuItem>
									<local:MenuItem Header="Test 232" />
								</local:MenuItem>
							</local:MenuItem>
						</local:Menu>
						<ContentPresenter Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							Grid.Row="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="local:SessionControl">
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="1" />
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SessionControl">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
							d:DesignWidth="300"
							d:DesignHeight="250"
					>
                    	<Grid >
                    		<Grid.RowDefinitions>
                    			<RowDefinition/>
                    			<RowDefinition Height="Auto" MinHeight="16"/>
                    		</Grid.RowDefinitions>
							<ContentPresenter Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{Binding FormStacks.CurrentItem, RelativeSource={RelativeSource TemplatedParent}}"
								/>
							<ListBox BorderBrush="{x:Null}" MinHeight="16" Foreground="White" Grid.Row="1"
               					ItemsPanel="{StaticResource HorizontalItemsPanel}" 
               					ItemsSource="{TemplateBinding FormStacks}"
               					ItemContainerStyle="{StaticResource TaskBarItemStyle}" 
               					Style="{StaticResource TaskBar}">
								<ListBox.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FF4E5165" Offset="0"/>
										<GradientStop Color="#FF9A9EB7" Offset="1"/>
									</LinearGradientBrush>
								</ListBox.Background>
							</ListBox>
                    	</Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:FormStackControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FormStackControl">
                    <Grid d:DesignHeight="250" d:DesignWidth="300">
                    	<Grid.RowDefinitions>
                    		<RowDefinition Height="Auto" MinHeight="16"/>
                    		<RowDefinition/>
                    	</Grid.RowDefinitions>
                    	<Border BorderThickness="1,1,1,0" CornerRadius="4,4,0,0" BorderBrush="{TemplateBinding BorderBrush}" Background="#FFB3B6DE">
                    		<ListBox Background="{x:Null}" BorderBrush="{x:Null}" 
                    			ItemsPanel="{StaticResource HorizontalItemsPanel}" 
                    			ItemsSource="{TemplateBinding FormStack}"
                    			Style="{StaticResource BreadCrumbListBoxStyle}" 
                    			ItemContainerStyle="{StaticResource BreadCrumbItemContainerStyle}" />
                    	</Border>
                    	<Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,4,4" Background="{TemplateBinding Background}">
							<ScrollViewer  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="0" BorderThickness="0" Padding="0">
								<ContentPresenter Content="{Binding FormStack.CurrentItem, RelativeSource={RelativeSource TemplatedParent}}"/>
							</ScrollViewer>
                    	</Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Black"/>
    </Style>

    <Style TargetType="local:BreadCrumbFormItem">
		<Setter Property="Padding" Value="4,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BreadCrumbFormItem">
                    <Grid d:DesignWidth="150" Background="{TemplateBinding Background}">
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition/>
                			<ColumnDefinition Width="Auto"/>
                		</Grid.ColumnDefinitions>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="AcceptRejectStates">
                				<VisualState x:Name="Close">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="AcceptButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Collapsed</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="RejectButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Collapsed</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="AcceptReject">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CloseButton" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Collapsed</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="EnabledStates">
								<VisualState x:Name="Enabled"/>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="textBlock" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF414141"/>
                						</ColorAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="stackPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Collapsed</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<TextBlock x:Name="textBlock" Text="{TemplateBinding Title}" Margin="{TemplateBinding Padding}" Foreground="Black" VerticalAlignment="Center"/>
                		<StackPanel x:Name="stackPanel" Orientation="Horizontal" Grid.Column="1" >
                			<Button x:Name="AcceptButton" Style="{StaticResource ButtonStyle}" IsTabStop="False" Padding="2">
                				<Path Stretch="Fill" Height="12.091" Width="15.114" Data="F1M40.848,8.59C40.848,8.59,16.367,25.367,15.988,25.625C15.672,25.309,8.156,17.824,8.156,17.824C7.598,17.27,6.863,17.062,6.191,17.273C5.461,17.504,4.992,18.023,4.863,18.738L4.785,19.18C4.762,19.324,4.762,19.469,4.793,19.609L4.902,20.137L4.98,20.367L13.652,39.437C13.926,40.035,14.473,40.453,15.121,40.562C15.766,40.672,16.422,40.449,16.875,39.973L43.355,11.98C43.742,11.574,43.965,10.992,43.965,10.391L43.941,10.156L43.832,9.648C43.703,9.023,43.297,8.559,42.664,8.305C42.262,8.145,41.617,8.062,40.848,8.59z M40.848,8.59" Stroke="White" UseLayoutRounding="False">
                					<Path.Fill>
                						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                							<GradientStop Color="#FF8F9F8E" Offset="0"/>
                							<GradientStop Color="#FF1C5917" Offset="1"/>
                						</LinearGradientBrush>
                					</Path.Fill>
                				</Path>
                			</Button>
                			<Button x:Name="RejectButton" Style="{StaticResource ButtonStyle}" IsTabStop="False" Padding="2">
                				<Path Stretch="Fill" Height="14" Width="14" Data="M5.75,0.611000000000001L5.477,0.911999999999999L1.426,4.959L1.125,5.236L1.426,5.509L8.801,12.912L1.426,20.287L1.125,20.56L1.426,20.834L5.477,24.884L5.75,25.185L6.023,24.884L13.398,17.509L20.773,24.884L21.051,25.185L21.324,24.884L25.375,20.834L25.648,20.56L25.375,20.287L18,12.912L25.375,5.509L25.648,5.236L25.375,4.959L21.324,0.911999999999999L21.051,0.611000000000001L20.773,0.911999999999999L13.398,8.287L6.023,0.911999999999999L5.75,0.611000000000001z" Stroke="White" UseLayoutRounding="False">
                					<Path.Fill>
                						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                							<GradientStop Color="#FFBF9090" Offset="0.013"/>
                							<GradientStop Color="#FF5B1111" Offset="1"/>
                						</LinearGradientBrush>
                					</Path.Fill>
                				</Path>
                			</Button>
                			<Button x:Name="CloseButton" Style="{StaticResource ButtonStyle}" IsTabStop="False" Padding="2">
                				<Path Stretch="Fill" Height="14" Width="14" Data="M5.75,0.611000000000001L5.477,0.911999999999999L1.426,4.959L1.125,5.236L1.426,5.509L8.801,12.912L1.426,20.287L1.125,20.56L1.426,20.834L5.477,24.884L5.75,25.185L6.023,24.884L13.398,17.509L20.773,24.884L21.051,25.185L21.324,24.884L25.375,20.834L25.648,20.56L25.375,20.287L18,12.912L25.375,5.509L25.648,5.236L25.375,4.959L21.324,0.911999999999999L21.051,0.611000000000001L20.773,0.911999999999999L13.398,8.287L6.023,0.911999999999999L5.75,0.611000000000001z" Stroke="White" UseLayoutRounding="False">
                					<Path.Fill>
                						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                							<GradientStop Color="#FF909DBF" Offset="0.026"/>
                							<GradientStop Color="#FF111E5B" Offset="0.996"/>
                						</LinearGradientBrush>
                					</Path.Fill>
                				</Path>
                			</Button>
                		</StackPanel>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ButtonScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ButtonScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="Right">
                				<VisualState x:Name="RightEnabled"/>
								<VisualState x:Name="RightDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="RightButton" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
                			<VisualStateGroup x:Name="Left">
                				<VisualState x:Name="LeftEnabled"/>
								<VisualState x:Name="LeftDisabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="LeftButton" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<local:ScrollPresenter x:Name="ScrollPresenter" Content="{TemplateBinding Content}" 
                			Margin="{TemplateBinding Padding}" 
                			CanVerticallyScroll="False"/>
						<RepeatButton x:Name="LeftButton" HorizontalAlignment="Left" Padding="3" Style="{StaticResource ButtonScrollViewerButtonStyle}">
							<Path Fill="#FF848485" Height="16" Width="5" Data="M5,0 L0,8 L5,16 Z"/>
						</RepeatButton>
						<RepeatButton x:Name="RightButton" HorizontalAlignment="Right" Padding="3" Style="{StaticResource ButtonScrollViewerButtonStyle}">
                			<Path Fill="#FF848485" Height="16" Width="5" Data="M0,0 L5,8 L0,16 Z"/>
                		</RepeatButton>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:TriggerControl" BasedOn="{StaticResource ButtonStyle}" >
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:TriggerControl">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF5251CE"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="Image">
								<VisualState x:Name="HasImage"/>
								<VisualState x:Name="NoImage">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="image" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Center</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="OnlyImage">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="image" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<HorizontalAlignment>Center</HorizontalAlignment>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" BorderBrush="Black" Background="{TemplateBinding Background}"/>
						<Rectangle Margin="3" RadiusY="5" RadiusX="5" >
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#BFFFFFFF" Offset="0"/>
									<GradientStop Color="Transparent" Offset="0.289"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Grid Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Image x:Name="image" Source="{TemplateBinding Image}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="{TemplateBinding ImageWidth}" Height="{TemplateBinding ImageHeight}" Margin="0,0,4,0"/>
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Right" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1"/>
						</Grid>
						<Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" RadiusX="5" RadiusY="5" IsHitTestVisible="false" Opacity="0"/>
						<Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="5" RadiusY="5" Margin="1" IsHitTestVisible="false" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="local:GroupBox">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:GroupBox">
					<Grid x:Name="root" Width="{TemplateBinding Width}">
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition Width="6" />
                			<ColumnDefinition Width="Auto" />
                			<ColumnDefinition Width="*" />
                			<ColumnDefinition Width="6" />
                		</Grid.ColumnDefinitions>
                		<Grid.RowDefinitions>
                			<RowDefinition Height="Auto" />
                			<RowDefinition Height="Auto" />
                			<RowDefinition Height="*" />
                			<RowDefinition Height="6" />
                		</Grid.RowDefinitions>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="EnabledGroup">
								<VisualState x:Name="Enabled" />
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF8E8E8E"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border1" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF8E8E8E"/>
                						</ColorAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF8E8E8E"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderGroup">
								<VisualState x:Name="HeaderNull" >
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter1" Storyboard.TargetProperty="(Grid.Row)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>1</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter1" Storyboard.TargetProperty="(Grid.RowSpan)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<System:Int32>3</System:Int32>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="HeaderNotNull"/>
							</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="border" BorderThickness="0,1,1,1" CornerRadius="0,4,4,0" 
                			Grid.Column="2"
                			Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="3" BorderBrush="Navy" />
                		<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                			Margin="3,0,3,0"
                			Content="{TemplateBinding Header}"
                			ContentTemplate="{TemplateBinding HeaderTemplate}" />
                		<Border x:Name="border1" BorderThickness="1,1,0,1" CornerRadius="4,0,0,4" 
                			BorderBrush="Navy" Grid.Row="1" 
                			Grid.RowSpan="3" />
                		<Border x:Name="border2" BorderThickness="0,0,0,1" CornerRadius="0" 
                			BorderBrush="Navy" Grid.Row="1" Grid.Column="1" 
                			Grid.RowSpan="3" />
                		<ContentPresenter x:Name="contentPresenter1" Content="{TemplateBinding Content}" 
                			ContentTemplate="{TemplateBinding ContentTemplate}"
                			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                			Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="2" />
                	</Grid>
				</ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="0,2"/>
    </Style>

	<Style TargetType="local:NotebookControl">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Value="#33FFFFFF" Property="Background"/>
		<Setter Value="#FF7F8DCC" Property="BorderBrush"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="0,2,0,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:NotebookControl">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="6" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="6" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused"/>
								<VisualState x:Name="InvalidFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<local:ButtonScrollViewer Grid.Column="1">
							<ItemsPresenter Cursor="{TemplateBinding Cursor}"/>
						</local:ButtonScrollViewer>
						<Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,1" Margin="0,-1,0,0" CornerRadius="3,0,0,3" Background="{TemplateBinding Background}"/>
						<Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,1" Grid.Column="2" Margin="0,-1,0,0" CornerRadius="0,3,3,0" Background="{TemplateBinding Background}"/>
						<Border Background="{TemplateBinding Background}" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Grid.Column="1"/>
						<ContentPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Content="{TemplateBinding SelectedContent}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						<Border x:Name="Disabled" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="#8CFFFFFF" CornerRadius="3" Grid.ColumnSpan="4" Grid.RowSpan="2"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="local:NotebookItem">
		<Setter Property="Background" Value="#33FFFFFF"/>
		<Setter Property="BorderBrush" Value="#FF7F8DCC"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="MinWidth" Value="5"/>
		<Setter Property="MinHeight" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:NotebookItem">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.4"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border2" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.4"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderThickness)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>1</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border1" Storyboard.TargetProperty="(Border.BorderThickness)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Thickness>1,1,1,0</Thickness>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0">
							<Border.Background>
								<SolidColorBrush Opacity="0.2" Color="White"/>
							</Border.Background>
							<Grid>
								<Border x:Name="border1" CornerRadius="2,2,0,0" BorderBrush="White" />
								<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}"
									HorizontalAlignment="Center" Margin="{TemplateBinding HeaderPadding}" VerticalAlignment="Center"/>
							</Grid>
						</Border>
						<Border x:Name="border2" Opacity="0" Background="#FF7E7E7E" CornerRadius="3,3,0,0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="local:Menu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Menu">
					<local:PopupProtector x:Name="Protector" IsActive="{TemplateBinding IsActive}" >
						<Border d:DesignWidth="400" d:DesignHeight="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<local:ButtonScrollViewer>
								<ItemsPresenter/>
							</local:ButtonScrollViewer>
						</Border>
					</local:PopupProtector>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background">
        	<Setter.Value>
                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
        			<GradientStop Color="#FFBDC8FF" Offset="0"/>
        			<GradientStop Color="#FFE0E8FF" Offset="1"/>
        		</LinearGradientBrush>
        	</Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel" >
			<Setter.Value>
				<ItemsPanelTemplate >
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="local:MenuItem">
					<Setter Property="IsTabStop" Value="True" />
					<Setter Property="Padding" Value="4,2,4,0"/>
					<Setter Property="SubMenuPlacement" Value="Bottom" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="local:MenuItem">
								<Border d:DesignWidth="100" d:DesignHeight="24" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="Highlighted">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
														<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF4D62C1"/>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
														<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF4D62C1"/>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
														<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF848484"/>
													</ColorAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="ExpandedStates">
											<VisualState x:Name="Collapsed"/>
											<VisualState x:Name="Expanded">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
														<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF4D62C1"/>
													</ColorAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Popup" Storyboard.TargetProperty="(Popup.IsOpen)">
														<DiscreteObjectKeyFrame KeyTime="00:00:00">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="HastItemsStates">
											<VisualState x:Name="NoItems"/>
											<VisualState x:Name="HasItems"/>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Border x:Name="border" BorderBrush="Transparent" CornerRadius="2" BorderThickness="1">
										<Border.Background>
											<SolidColorBrush Opacity="0" Color="White"/>
										</Border.Background>
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition/>
												<RowDefinition Height="Auto" />
											</Grid.RowDefinitions>
											<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="{TemplateBinding Padding}" UseLayoutRounding="True"/>
											<Popup x:Name="Popup" Grid.Row="1">
                                                <Grid x:Name="ItemsHost" MinWidth="120">
                                                    <Rectangle Margin="2,2,0,0" RadiusX="2" RadiusY="2" Fill="#33000000"/>
                                                    <Rectangle Margin="0,0,2,2" RadiusX="2" RadiusY="2" Stroke="#f8a0a0a0" StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                                <GradientStop Color="#FFBDC8FF" Offset="0"/>
                                                                <GradientStop Color="#FFE0E8FF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                    <Rectangle Margin="1,1,2,3" RadiusX="2" RadiusY="2" Fill="#c0e0e0e0" HorizontalAlignment="Left" Width="24" />
                                                    <ItemsPresenter Margin="0,0,2,2" UseLayoutRounding="True"/>
                                                </Grid>
                                            </Popup>
										</Grid>
									</Border>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
    </Style>

    <Style TargetType="local:MenuItem">
		<Setter Property="IsTabStop" Value="True" />
        <Setter Property="Padding" Value="4,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MenuItem">
					<Border d:DesignWidth="100" d:DesignHeight="24" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Highlighted">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF4D62C1"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF4D62C1"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF848484"/>
                						</ColorAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.3"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.7"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SubIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                							<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF3B3A3A"/>
                						</ColorAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ExpandedStates">
								<VisualState x:Name="Collapsed"/>
								<VisualState x:Name="Expanded">
                					<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.2"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="00:00:00" Value="#FF4D62C1"/>
										</ColorAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Popup" Storyboard.TargetProperty="(Popup.IsOpen)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<System:Boolean>True</System:Boolean>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="HastItemsStates">
								<VisualState x:Name="NoItems"/>
								<VisualState x:Name="HasItems">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SubIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="border" BorderBrush="Transparent" CornerRadius="2" BorderThickness="1">
                			<Border.Background>
                				<SolidColorBrush Opacity="0" Color="White"/>
                			</Border.Background>
                			<Grid>
                				<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                					<ColumnDefinition Width="Auto"/>
                					<ColumnDefinition Width="Auto"/>
                				</Grid.ColumnDefinitions>
                                <Image Source="{TemplateBinding ImageSource}" MinWidth="20" Margin="2" />
                                <ContentPresenter Grid.Column="1" x:Name="contentPresenter" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="{TemplateBinding Padding}" />
                				<Path x:Name="SubIndicator" Fill="Black" Grid.Column="2" VerticalAlignment="Center" Data="M0,0 L3,3 L0,6 Z" Visibility="Collapsed" Margin="4"/>
                				<Popup x:Name="Popup" Grid.Column="3">
                                    <Grid x:Name="ItemsHost" MinWidth="120">
                                        <Rectangle Margin="2,2,0,0" RadiusX="2" RadiusY="2" Fill="#33000000"/>
                                        <Rectangle Margin="0,0,2,2" RadiusX="2" RadiusY="2" Stroke="#f8a0a0a0" StrokeThickness="1">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                                    <GradientStop Color="#FFBDC8FF" Offset="0"/>
                                                    <GradientStop Color="#FFE0E8FF" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Rectangle Margin="1,1,2,3" RadiusX="2" RadiusY="2" Fill="#c0e0e0e0" HorizontalAlignment="Left" Width="24" />
                                        <ItemsPresenter Margin="0,0,2,2" UseLayoutRounding="True"/>
                                    </Grid>
                				</Popup>
                			</Grid>
                		</Border>
                	</Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="4,2,4,0"/>
    </Style>

    <Style TargetType="local:PopupProtector">
        <Setter Property="ProtectorBrush" Value="#00000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:PopupProtector">
                    <ContentPresenter Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
